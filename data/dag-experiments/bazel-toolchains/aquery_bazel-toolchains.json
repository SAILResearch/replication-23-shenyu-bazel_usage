{
  "artifacts": [{
    "id": 1,
    "pathFragmentId": 1
  }, {
    "id": 2,
    "pathFragmentId": 5
  }, {
    "id": 3,
    "pathFragmentId": 6
  }, {
    "id": 4,
    "pathFragmentId": 7
  }, {
    "id": 5,
    "pathFragmentId": 8
  }, {
    "id": 6,
    "pathFragmentId": 9
  }, {
    "id": 7,
    "pathFragmentId": 10
  }, {
    "id": 8,
    "pathFragmentId": 11
  }, {
    "id": 9,
    "pathFragmentId": 12
  }, {
    "id": 10,
    "pathFragmentId": 13
  }, {
    "id": 11,
    "pathFragmentId": 14
  }, {
    "id": 12,
    "pathFragmentId": 15
  }, {
    "id": 13,
    "pathFragmentId": 16
  }, {
    "id": 14,
    "pathFragmentId": 17
  }, {
    "id": 15,
    "pathFragmentId": 18
  }, {
    "id": 16,
    "pathFragmentId": 19
  }, {
    "id": 17,
    "pathFragmentId": 20
  }, {
    "id": 18,
    "pathFragmentId": 21
  }, {
    "id": 19,
    "pathFragmentId": 22
  }, {
    "id": 20,
    "pathFragmentId": 23
  }, {
    "id": 21,
    "pathFragmentId": 24
  }, {
    "id": 22,
    "pathFragmentId": 25
  }, {
    "id": 23,
    "pathFragmentId": 26
  }, {
    "id": 24,
    "pathFragmentId": 27
  }, {
    "id": 25,
    "pathFragmentId": 28
  }, {
    "id": 26,
    "pathFragmentId": 29
  }, {
    "id": 27,
    "pathFragmentId": 30
  }, {
    "id": 28,
    "pathFragmentId": 31
  }, {
    "id": 29,
    "pathFragmentId": 32
  }, {
    "id": 30,
    "pathFragmentId": 33
  }, {
    "id": 31,
    "pathFragmentId": 34
  }, {
    "id": 32,
    "pathFragmentId": 35
  }, {
    "id": 33,
    "pathFragmentId": 36
  }, {
    "id": 34,
    "pathFragmentId": 37
  }, {
    "id": 35,
    "pathFragmentId": 39
  }, {
    "id": 36,
    "pathFragmentId": 41
  }, {
    "id": 37,
    "pathFragmentId": 42
  }, {
    "id": 38,
    "pathFragmentId": 43
  }, {
    "id": 39,
    "pathFragmentId": 44
  }, {
    "id": 40,
    "pathFragmentId": 46
  }, {
    "id": 41,
    "pathFragmentId": 47
  }, {
    "id": 42,
    "pathFragmentId": 49
  }, {
    "id": 43,
    "pathFragmentId": 51
  }, {
    "id": 44,
    "pathFragmentId": 52
  }, {
    "id": 45,
    "pathFragmentId": 53
  }, {
    "id": 46,
    "pathFragmentId": 55
  }, {
    "id": 47,
    "pathFragmentId": 56
  }, {
    "id": 48,
    "pathFragmentId": 57
  }, {
    "id": 49,
    "pathFragmentId": 59
  }, {
    "id": 50,
    "pathFragmentId": 60
  }, {
    "id": 51,
    "pathFragmentId": 61
  }, {
    "id": 52,
    "pathFragmentId": 62
  }, {
    "id": 53,
    "pathFragmentId": 63
  }, {
    "id": 54,
    "pathFragmentId": 64
  }, {
    "id": 55,
    "pathFragmentId": 66
  }, {
    "id": 56,
    "pathFragmentId": 67
  }, {
    "id": 57,
    "pathFragmentId": 69
  }, {
    "id": 58,
    "pathFragmentId": 70
  }, {
    "id": 59,
    "pathFragmentId": 71
  }, {
    "id": 60,
    "pathFragmentId": 73
  }, {
    "id": 61,
    "pathFragmentId": 74
  }, {
    "id": 62,
    "pathFragmentId": 76
  }, {
    "id": 63,
    "pathFragmentId": 77
  }, {
    "id": 64,
    "pathFragmentId": 78
  }, {
    "id": 65,
    "pathFragmentId": 79
  }, {
    "id": 66,
    "pathFragmentId": 80
  }, {
    "id": 67,
    "pathFragmentId": 81
  }, {
    "id": 68,
    "pathFragmentId": 82
  }, {
    "id": 69,
    "pathFragmentId": 83
  }, {
    "id": 70,
    "pathFragmentId": 84
  }, {
    "id": 71,
    "pathFragmentId": 85
  }, {
    "id": 72,
    "pathFragmentId": 86
  }, {
    "id": 73,
    "pathFragmentId": 87
  }, {
    "id": 74,
    "pathFragmentId": 88
  }, {
    "id": 75,
    "pathFragmentId": 89
  }, {
    "id": 76,
    "pathFragmentId": 90
  }, {
    "id": 77,
    "pathFragmentId": 91
  }, {
    "id": 78,
    "pathFragmentId": 92
  }, {
    "id": 79,
    "pathFragmentId": 93
  }, {
    "id": 80,
    "pathFragmentId": 94
  }, {
    "id": 81,
    "pathFragmentId": 95
  }, {
    "id": 82,
    "pathFragmentId": 96
  }, {
    "id": 83,
    "pathFragmentId": 97
  }, {
    "id": 84,
    "pathFragmentId": 98
  }, {
    "id": 85,
    "pathFragmentId": 99
  }, {
    "id": 86,
    "pathFragmentId": 100
  }, {
    "id": 87,
    "pathFragmentId": 101
  }, {
    "id": 88,
    "pathFragmentId": 102
  }, {
    "id": 89,
    "pathFragmentId": 103
  }, {
    "id": 90,
    "pathFragmentId": 104
  }, {
    "id": 91,
    "pathFragmentId": 105
  }, {
    "id": 92,
    "pathFragmentId": 106
  }, {
    "id": 93,
    "pathFragmentId": 107
  }, {
    "id": 94,
    "pathFragmentId": 108
  }, {
    "id": 95,
    "pathFragmentId": 109
  }, {
    "id": 96,
    "pathFragmentId": 110
  }, {
    "id": 97,
    "pathFragmentId": 111
  }, {
    "id": 98,
    "pathFragmentId": 112
  }, {
    "id": 99,
    "pathFragmentId": 113
  }, {
    "id": 100,
    "pathFragmentId": 114
  }, {
    "id": 101,
    "pathFragmentId": 115
  }, {
    "id": 102,
    "pathFragmentId": 116
  }, {
    "id": 103,
    "pathFragmentId": 117
  }, {
    "id": 104,
    "pathFragmentId": 118
  }, {
    "id": 105,
    "pathFragmentId": 120
  }, {
    "id": 106,
    "pathFragmentId": 121
  }, {
    "id": 107,
    "pathFragmentId": 122
  }, {
    "id": 108,
    "pathFragmentId": 123
  }, {
    "id": 109,
    "pathFragmentId": 125
  }, {
    "id": 110,
    "pathFragmentId": 126
  }, {
    "id": 111,
    "pathFragmentId": 127
  }, {
    "id": 112,
    "pathFragmentId": 128
  }, {
    "id": 113,
    "pathFragmentId": 129
  }, {
    "id": 114,
    "pathFragmentId": 132
  }, {
    "id": 115,
    "pathFragmentId": 140
  }, {
    "id": 116,
    "pathFragmentId": 145
  }, {
    "id": 117,
    "pathFragmentId": 150
  }, {
    "id": 118,
    "pathFragmentId": 151
  }, {
    "id": 119,
    "pathFragmentId": 152
  }, {
    "id": 120,
    "pathFragmentId": 153
  }, {
    "id": 121,
    "pathFragmentId": 159
  }, {
    "id": 122,
    "pathFragmentId": 160
  }, {
    "id": 123,
    "pathFragmentId": 161
  }, {
    "id": 124,
    "pathFragmentId": 162
  }, {
    "id": 125,
    "pathFragmentId": 163
  }, {
    "id": 126,
    "pathFragmentId": 165
  }, {
    "id": 127,
    "pathFragmentId": 168
  }, {
    "id": 128,
    "pathFragmentId": 169
  }, {
    "id": 129,
    "pathFragmentId": 170
  }, {
    "id": 130,
    "pathFragmentId": 171
  }, {
    "id": 131,
    "pathFragmentId": 172
  }, {
    "id": 132,
    "pathFragmentId": 173
  }, {
    "id": 133,
    "pathFragmentId": 174
  }, {
    "id": 134,
    "pathFragmentId": 175
  }, {
    "id": 135,
    "pathFragmentId": 176
  }, {
    "id": 136,
    "pathFragmentId": 177
  }, {
    "id": 137,
    "pathFragmentId": 178
  }, {
    "id": 138,
    "pathFragmentId": 179
  }, {
    "id": 139,
    "pathFragmentId": 180
  }, {
    "id": 140,
    "pathFragmentId": 181
  }, {
    "id": 141,
    "pathFragmentId": 182
  }, {
    "id": 142,
    "pathFragmentId": 183
  }, {
    "id": 143,
    "pathFragmentId": 184
  }, {
    "id": 144,
    "pathFragmentId": 185
  }, {
    "id": 145,
    "pathFragmentId": 186
  }, {
    "id": 146,
    "pathFragmentId": 187
  }, {
    "id": 147,
    "pathFragmentId": 188
  }, {
    "id": 148,
    "pathFragmentId": 189
  }, {
    "id": 149,
    "pathFragmentId": 190
  }, {
    "id": 150,
    "pathFragmentId": 191
  }, {
    "id": 151,
    "pathFragmentId": 192
  }, {
    "id": 152,
    "pathFragmentId": 193
  }, {
    "id": 153,
    "pathFragmentId": 194
  }, {
    "id": 154,
    "pathFragmentId": 195
  }, {
    "id": 155,
    "pathFragmentId": 197
  }, {
    "id": 156,
    "pathFragmentId": 198
  }, {
    "id": 157,
    "pathFragmentId": 200
  }, {
    "id": 158,
    "pathFragmentId": 201
  }, {
    "id": 159,
    "pathFragmentId": 202
  }, {
    "id": 160,
    "pathFragmentId": 204
  }, {
    "id": 161,
    "pathFragmentId": 205
  }, {
    "id": 162,
    "pathFragmentId": 206
  }, {
    "id": 163,
    "pathFragmentId": 208
  }, {
    "id": 164,
    "pathFragmentId": 210
  }, {
    "id": 165,
    "pathFragmentId": 211
  }, {
    "id": 166,
    "pathFragmentId": 212
  }, {
    "id": 167,
    "pathFragmentId": 214
  }, {
    "id": 168,
    "pathFragmentId": 215
  }, {
    "id": 169,
    "pathFragmentId": 216
  }, {
    "id": 170,
    "pathFragmentId": 217
  }, {
    "id": 171,
    "pathFragmentId": 219
  }, {
    "id": 172,
    "pathFragmentId": 220
  }, {
    "id": 173,
    "pathFragmentId": 221
  }, {
    "id": 174,
    "pathFragmentId": 222
  }, {
    "id": 175,
    "pathFragmentId": 223
  }, {
    "id": 176,
    "pathFragmentId": 224
  }, {
    "id": 177,
    "pathFragmentId": 226
  }, {
    "id": 178,
    "pathFragmentId": 227
  }, {
    "id": 179,
    "pathFragmentId": 229
  }, {
    "id": 180,
    "pathFragmentId": 230
  }, {
    "id": 181,
    "pathFragmentId": 231
  }, {
    "id": 182,
    "pathFragmentId": 232
  }, {
    "id": 183,
    "pathFragmentId": 234
  }, {
    "id": 184,
    "pathFragmentId": 235
  }, {
    "id": 185,
    "pathFragmentId": 236
  }, {
    "id": 186,
    "pathFragmentId": 237
  }, {
    "id": 187,
    "pathFragmentId": 238
  }, {
    "id": 188,
    "pathFragmentId": 239
  }, {
    "id": 189,
    "pathFragmentId": 240
  }, {
    "id": 190,
    "pathFragmentId": 241
  }, {
    "id": 191,
    "pathFragmentId": 242
  }, {
    "id": 192,
    "pathFragmentId": 243
  }, {
    "id": 193,
    "pathFragmentId": 244
  }, {
    "id": 194,
    "pathFragmentId": 245
  }, {
    "id": 195,
    "pathFragmentId": 246
  }, {
    "id": 196,
    "pathFragmentId": 247
  }, {
    "id": 197,
    "pathFragmentId": 248
  }, {
    "id": 198,
    "pathFragmentId": 249
  }, {
    "id": 199,
    "pathFragmentId": 250
  }, {
    "id": 200,
    "pathFragmentId": 251
  }, {
    "id": 201,
    "pathFragmentId": 252
  }, {
    "id": 202,
    "pathFragmentId": 253
  }, {
    "id": 203,
    "pathFragmentId": 254
  }, {
    "id": 204,
    "pathFragmentId": 255
  }, {
    "id": 205,
    "pathFragmentId": 256
  }, {
    "id": 206,
    "pathFragmentId": 257
  }, {
    "id": 207,
    "pathFragmentId": 258
  }, {
    "id": 208,
    "pathFragmentId": 259
  }, {
    "id": 209,
    "pathFragmentId": 260
  }, {
    "id": 210,
    "pathFragmentId": 261
  }, {
    "id": 211,
    "pathFragmentId": 262
  }, {
    "id": 212,
    "pathFragmentId": 263
  }, {
    "id": 213,
    "pathFragmentId": 264
  }, {
    "id": 214,
    "pathFragmentId": 265
  }, {
    "id": 215,
    "pathFragmentId": 266
  }, {
    "id": 216,
    "pathFragmentId": 267
  }, {
    "id": 217,
    "pathFragmentId": 268
  }, {
    "id": 218,
    "pathFragmentId": 269
  }, {
    "id": 219,
    "pathFragmentId": 270
  }, {
    "id": 220,
    "pathFragmentId": 271
  }, {
    "id": 221,
    "pathFragmentId": 272
  }, {
    "id": 222,
    "pathFragmentId": 273
  }, {
    "id": 223,
    "pathFragmentId": 274
  }, {
    "id": 224,
    "pathFragmentId": 275
  }, {
    "id": 225,
    "pathFragmentId": 276
  }, {
    "id": 226,
    "pathFragmentId": 277
  }, {
    "id": 227,
    "pathFragmentId": 278
  }, {
    "id": 228,
    "pathFragmentId": 279
  }, {
    "id": 229,
    "pathFragmentId": 281
  }, {
    "id": 230,
    "pathFragmentId": 282
  }, {
    "id": 231,
    "pathFragmentId": 283
  }, {
    "id": 232,
    "pathFragmentId": 284
  }, {
    "id": 233,
    "pathFragmentId": 286
  }, {
    "id": 234,
    "pathFragmentId": 287
  }, {
    "id": 235,
    "pathFragmentId": 288
  }, {
    "id": 236,
    "pathFragmentId": 289
  }, {
    "id": 237,
    "pathFragmentId": 290
  }, {
    "id": 238,
    "pathFragmentId": 293
  }, {
    "id": 239,
    "pathFragmentId": 295
  }, {
    "id": 240,
    "pathFragmentId": 296
  }, {
    "id": 241,
    "pathFragmentId": 297
  }, {
    "id": 242,
    "pathFragmentId": 301
  }, {
    "id": 243,
    "pathFragmentId": 302
  }, {
    "id": 244,
    "pathFragmentId": 304
  }, {
    "id": 245,
    "pathFragmentId": 305
  }, {
    "id": 246,
    "pathFragmentId": 309
  }, {
    "id": 247,
    "pathFragmentId": 310
  }, {
    "id": 248,
    "pathFragmentId": 316
  }, {
    "id": 249,
    "pathFragmentId": 317
  }, {
    "id": 250,
    "pathFragmentId": 318
  }, {
    "id": 251,
    "pathFragmentId": 319
  }, {
    "id": 252,
    "pathFragmentId": 321
  }, {
    "id": 253,
    "pathFragmentId": 322
  }, {
    "id": 254,
    "pathFragmentId": 324
  }, {
    "id": 255,
    "pathFragmentId": 325
  }, {
    "id": 256,
    "pathFragmentId": 327
  }, {
    "id": 257,
    "pathFragmentId": 330
  }, {
    "id": 258,
    "pathFragmentId": 335
  }, {
    "id": 259,
    "pathFragmentId": 336
  }, {
    "id": 260,
    "pathFragmentId": 337
  }, {
    "id": 261,
    "pathFragmentId": 339
  }, {
    "id": 262,
    "pathFragmentId": 340
  }, {
    "id": 263,
    "pathFragmentId": 341
  }, {
    "id": 264,
    "pathFragmentId": 342
  }, {
    "id": 265,
    "pathFragmentId": 343
  }, {
    "id": 266,
    "pathFragmentId": 344
  }, {
    "id": 267,
    "pathFragmentId": 346
  }, {
    "id": 268,
    "pathFragmentId": 347
  }, {
    "id": 269,
    "pathFragmentId": 349
  }, {
    "id": 270,
    "pathFragmentId": 350
  }, {
    "id": 271,
    "pathFragmentId": 351
  }, {
    "id": 272,
    "pathFragmentId": 355
  }, {
    "id": 273,
    "pathFragmentId": 356
  }, {
    "id": 274,
    "pathFragmentId": 357
  }, {
    "id": 275,
    "pathFragmentId": 358
  }, {
    "id": 276,
    "pathFragmentId": 359
  }, {
    "id": 277,
    "pathFragmentId": 360
  }, {
    "id": 278,
    "pathFragmentId": 362
  }, {
    "id": 279,
    "pathFragmentId": 363
  }, {
    "id": 280,
    "pathFragmentId": 364
  }, {
    "id": 281,
    "pathFragmentId": 366
  }, {
    "id": 282,
    "pathFragmentId": 367
  }, {
    "id": 283,
    "pathFragmentId": 369
  }, {
    "id": 284,
    "pathFragmentId": 370
  }, {
    "id": 285,
    "pathFragmentId": 371
  }, {
    "id": 286,
    "pathFragmentId": 372
  }, {
    "id": 287,
    "pathFragmentId": 374
  }, {
    "id": 288,
    "pathFragmentId": 375
  }, {
    "id": 289,
    "pathFragmentId": 376
  }, {
    "id": 290,
    "pathFragmentId": 377
  }, {
    "id": 291,
    "pathFragmentId": 378
  }, {
    "id": 292,
    "pathFragmentId": 379
  }, {
    "id": 293,
    "pathFragmentId": 380
  }, {
    "id": 294,
    "pathFragmentId": 382
  }, {
    "id": 295,
    "pathFragmentId": 383
  }, {
    "id": 296,
    "pathFragmentId": 389
  }, {
    "id": 297,
    "pathFragmentId": 390
  }, {
    "id": 298,
    "pathFragmentId": 392
  }, {
    "id": 299,
    "pathFragmentId": 393
  }, {
    "id": 300,
    "pathFragmentId": 394
  }, {
    "id": 301,
    "pathFragmentId": 395
  }, {
    "id": 302,
    "pathFragmentId": 396
  }, {
    "id": 303,
    "pathFragmentId": 397
  }, {
    "id": 304,
    "pathFragmentId": 398
  }, {
    "id": 305,
    "pathFragmentId": 400
  }, {
    "id": 306,
    "pathFragmentId": 401
  }, {
    "id": 307,
    "pathFragmentId": 405
  }, {
    "id": 308,
    "pathFragmentId": 406
  }, {
    "id": 309,
    "pathFragmentId": 407
  }, {
    "id": 310,
    "pathFragmentId": 408
  }, {
    "id": 311,
    "pathFragmentId": 410
  }, {
    "id": 312,
    "pathFragmentId": 411
  }, {
    "id": 313,
    "pathFragmentId": 413
  }, {
    "id": 314,
    "pathFragmentId": 414
  }, {
    "id": 315,
    "pathFragmentId": 415
  }, {
    "id": 316,
    "pathFragmentId": 416
  }, {
    "id": 317,
    "pathFragmentId": 418
  }, {
    "id": 318,
    "pathFragmentId": 419
  }, {
    "id": 319,
    "pathFragmentId": 420
  }, {
    "id": 320,
    "pathFragmentId": 421
  }, {
    "id": 321,
    "pathFragmentId": 422
  }, {
    "id": 322,
    "pathFragmentId": 423
  }, {
    "id": 323,
    "pathFragmentId": 424
  }, {
    "id": 324,
    "pathFragmentId": 426
  }],
  "actions": [{
    "targetId": 1,
    "actionKey": "9757cea186d363c414438d2143950410d43205e14e8780a834150f03667c5561",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1],
    "outputIds": [116, 117, 118, 119],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/examples/remotebuildexecution/hello_world/java/hello_java.jdeps"
    }],
    "primaryOutputId": 116,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "5341a14a5093c13fa73cbe085799fe62170b10902c14bfb8827a1aa317d81da6",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [8],
    "outputIds": [121],
    "primaryOutputId": 121,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "ecc2679633f1d33644dea9fde5d8492332cf3a8062e06c03a587f2031993f424",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [122],
    "primaryOutputId": 122,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  #\n  # https://github.com/bazelbuild/bazel/pull/17670: Note that the use of \"env\"\n  # is important in these calls. Without \"env\", bash itself seems to pick up\n  # the LC_CTYPE change as soon as the variable is defined and may emit a\n  # warning when the locale files are not present. By using \"env\", bash never\n  # sees the change and the 2\u003e/dev/null redirection does the right thing.\n  if [[ \"$(env LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ \"$(env LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  current_dir\u003d$(pwd)\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    if [[ ! $path \u003d~ ^[-_.~/a-zA-Z0-9]*$ ]]; then\n      local i c buff\n      local converted_path\u003d\"\"\n\n      for ((i\u003d0; i\u003c${#path}; i++)); do\n        c\u003d${path:$i:1}\n        case ${c} in\n              [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n              * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n        esac\n        converted_path+\u003d\"${buff}\"\n      done\n      path\u003d${converted_path}\n    fi\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"${current_dir}/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "bazel_toolchains/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}examples/remotebuildexecution/hello_world/java/hello_java.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "HelloWorld"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 1,
    "actionKey": "9d86e3a3ca2cc6136b62dcee5b8599f49cadea38e02f1dcc2e2472e7fb9cfdf4",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [9],
    "outputIds": [123],
    "primaryOutputId": 123,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "ac6b349141588fbb7f0dcba01f66832d8a5e9aeabeb8bb8fe94505c037a655b6",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [124],
    "primaryOutputId": 124,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "1e7b2e274b446bb93f8cfde7ee04f089b42112b761459a931385add12d537898",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [10],
    "outputIds": [125],
    "primaryOutputId": 125,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [11],
    "outputIds": [237],
    "primaryOutputId": 237,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "ff6dda1082358f4dcf08912535edcfb93c3cc5e755715b9270143492fbf4956f",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [19],
    "outputIds": [239],
    "primaryOutputId": 239,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 1,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [240],
    "primaryOutputId": 240,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "9fc3a27c8548a126060c7de1a6eb099d983c2327ca6925fc74134b4ca9567086",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [241],
    "primaryOutputId": 241,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "bd0425fde2f374ee52e591e6349a89a7bca7bd9b354dfed3a8e361d3238bf99e",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [242],
    "primaryOutputId": 242,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "81887d334483a74539a8d37943476d12662cfc19fcd23911af15b53f47f07582",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [21],
    "outputIds": [243],
    "primaryOutputId": 243,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [22],
    "outputIds": [244],
    "primaryOutputId": 244,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [23],
    "outputIds": [247, 248],
    "primaryOutputId": 247,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "9fc3a27c8548a126060c7de1a6eb099d983c2327ca6925fc74134b4ca9567086",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [249],
    "primaryOutputId": 249,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "2e382397f0256294fae846456f9c6e70c28ea878d50213f7505675e2a18a31ee",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [250],
    "primaryOutputId": 250,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "7e89bd7712be683b2138f660d3cfbf80bfb2923415bad2203a227b6aa8c3827b",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [24],
    "outputIds": [251],
    "primaryOutputId": 251,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [25],
    "outputIds": [252],
    "primaryOutputId": 252,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [26],
    "outputIds": [253, 254],
    "primaryOutputId": 253,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "17d925bc5666d9193cae7d1868ae3996e5b0d536872ecf6603eb0fc4a3caad07",
    "mnemonic": "CppCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [27],
    "outputIds": [257, 258],
    "discoversInputs": true,
    "primaryOutputId": 257,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "7ac9f527aae4bbcdabec4f061295d9ca73a6025e1d87c763d2ee6c8f54bf6d89",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [259],
    "primaryOutputId": 259,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "f5b057bd948c1a9e407a977b151af9b7ed3881d65cc335a384ce6d2b4724c3a4",
    "mnemonic": "CppLink",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [28],
    "outputIds": [262],
    "primaryOutputId": 262,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "d3a92a20c59f09391ff4350e95021efc8c1e509470ae210e93f7fa853f8794ac",
    "mnemonic": "CcStrip",
    "configurationId": 1,
    "inputDepSetIds": [30],
    "outputIds": [263],
    "primaryOutputId": 263,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [264],
    "primaryOutputId": 264,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "89b66e2fb118de2162d2446e37ab21ee449373460f32ea04dada2223b9580514",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [265],
    "primaryOutputId": 265,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "c2cdd5c6a958be981f832d323eff77aeb641f762de893dbfac2d82e3cdffe038",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [31],
    "outputIds": [266],
    "primaryOutputId": 266,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [32],
    "outputIds": [267],
    "primaryOutputId": 267,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [33],
    "outputIds": [269],
    "primaryOutputId": 269,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "9154d24ebcc1442254be6e3140c4a4f9cd923efa846ea1396dfd1e25ae271c98",
    "mnemonic": "CppCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [34],
    "outputIds": [271, 272],
    "discoversInputs": true,
    "primaryOutputId": 271,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "013fad71961e06a34b6252863cd0caf16f9eab183649026143b70b37eb4aed11",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [273],
    "primaryOutputId": 273,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "6f8b18f17f869b1dc82a5d7d964674f296517dfb54c113e6544fd33531591bbd",
    "mnemonic": "CppArchive",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [36],
    "outputIds": [274],
    "primaryOutputId": 274,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "1fe1b818c3c76f820a7ed08bc00064b7f224fcc2f1ef9ae9a4e0540185cab96d",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [275],
    "primaryOutputId": 275,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "3a81c275905440e5ee79641314f8600df2478ffa7b295262eda384985b55b776",
    "mnemonic": "CppLink",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [37],
    "outputIds": [276],
    "primaryOutputId": 276,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "d2e076c5b73be2126092c7789c3d89143fa6c66054234f206898964bcffa1783",
    "mnemonic": "SolibSymlink",
    "configurationId": 1,
    "inputDepSetIds": [38],
    "outputIds": [277],
    "primaryOutputId": 277,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "9fc3a27c8548a126060c7de1a6eb099d983c2327ca6925fc74134b4ca9567086",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [278],
    "primaryOutputId": 278,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "6d49aa30a1db60e0b70b7358ac36869a971a50ad74132fd34c66e27b7787f770",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [279],
    "primaryOutputId": 279,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "671cce35a54a9b39a6676e855dc7daaffe25593b49ed0bb34c744e609c79a963",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [39],
    "outputIds": [280],
    "primaryOutputId": 280,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [40],
    "outputIds": [281],
    "primaryOutputId": 281,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [41],
    "outputIds": [282, 283],
    "primaryOutputId": 282,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [42],
    "outputIds": [284],
    "primaryOutputId": 284,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "cc9df025825d2884a266c7eae93f48c9b6711c1bb763ee4cfcb307c10573a91d",
    "mnemonic": "CppCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [43],
    "outputIds": [286, 287],
    "discoversInputs": true,
    "primaryOutputId": 286,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "9cf1eba9065ebdbcb227b0b92710709f043d5938d2e5b788b179de5c962b75a3",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [288],
    "primaryOutputId": 288,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "2c2109a6e1b95e2edbfa0d119855d0acb0d0b90f87b93bd502840dc28f0b8640",
    "mnemonic": "CppLink",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [45],
    "outputIds": [289],
    "primaryOutputId": 289,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "2e098f29857580ce999fcf15edb0d369ed6dd2ee4284a87018f361195efd254a",
    "mnemonic": "CcStrip",
    "configurationId": 2,
    "inputDepSetIds": [47],
    "outputIds": [290],
    "primaryOutputId": 290,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [291],
    "primaryOutputId": 291,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "e9ba738bf9c2a479245cff4f821ac75939441984891b91dfcb5b09a8bf0671f4",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [292],
    "primaryOutputId": 292,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "c26dfa25a3413f7f489312e4eed0fb4ccf3ebdc978e9466a2edd68b96a0aba74",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [48],
    "outputIds": [293],
    "primaryOutputId": 293,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [49],
    "outputIds": [294],
    "primaryOutputId": 294,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [52],
    "outputIds": [295, 296],
    "primaryOutputId": 295,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "d7f87c22a6d8b62c1f35b0ca1f2769e67e010ecd099165a81d94b47107e6cefc",
    "mnemonic": "CppCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [53],
    "outputIds": [297, 298],
    "discoversInputs": true,
    "primaryOutputId": 297,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "84d79c2f6a945ecbe750e3bfb6f08e03e0fa6bb2577fb0d626547af0d8ee81e8",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [299],
    "primaryOutputId": 299,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "5e0c4e80348fec12cbba1a6e36426b83335b1579f644ddb52f0cd249663e65b2",
    "mnemonic": "CppLink",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [54],
    "outputIds": [300],
    "primaryOutputId": 300,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "2c6a6b4775b579f5b7377cdda97ca8d7a0ee565a553cbfe81644a447ac2063cd",
    "mnemonic": "CcStrip",
    "configurationId": 2,
    "inputDepSetIds": [55],
    "outputIds": [301],
    "primaryOutputId": 301,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [302],
    "primaryOutputId": 302,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "449eda48dc2a8de03e1d95afdb48f5c7a84eb5ae2b4398f364160eed0cd54603",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [303],
    "primaryOutputId": 303,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "ece6d5e7763f2eced7c062d0665b2e17c2371a4daf19412c2d0774f51e5b491e",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [56],
    "outputIds": [304],
    "primaryOutputId": 304,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [57],
    "outputIds": [305],
    "primaryOutputId": 305,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [58],
    "outputIds": [306, 307],
    "primaryOutputId": 306,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "9fc3a27c8548a126060c7de1a6eb099d983c2327ca6925fc74134b4ca9567086",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [308],
    "primaryOutputId": 308,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "a2f9fbe74c38241e15601153fa38772481ec2c69c49e4c2cc790824219111bc1",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [309],
    "primaryOutputId": 309,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "40f5b1fd7480fb7661fe742531fd898c99168edab3830087cb6e83cae74e0dba",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [59],
    "outputIds": [310],
    "primaryOutputId": 310,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [60],
    "outputIds": [311],
    "primaryOutputId": 311,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [61],
    "outputIds": [312, 313],
    "primaryOutputId": 312,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [42],
    "outputIds": [314],
    "primaryOutputId": 314,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "2b323cf28053541d99a94881c71bdcd5c4d760174d45a0f04c98eb0aee1b4816",
    "mnemonic": "CppCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [62],
    "outputIds": [316, 317],
    "discoversInputs": true,
    "primaryOutputId": 316,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "086ce1997a7a9817dcc2c8b3df49b1e049f11f6f6e6fbe08fea1356473cf5ec3",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [318],
    "primaryOutputId": 318,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "f1580941a82f8ccbfd2237fe6eecd62d9efd6ba64ae330912edfd31304d9c48a",
    "mnemonic": "CppLink",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "PWD",
      "value": "/proc/self/cwd"
    }],
    "inputDepSetIds": [64],
    "outputIds": [319],
    "primaryOutputId": 319,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "c21d37e8ab5a81b3be61a6ce80cee886b88e6beaca869953c961b06b9a98b07d",
    "mnemonic": "CcStrip",
    "configurationId": 1,
    "inputDepSetIds": [66],
    "outputIds": [320],
    "primaryOutputId": 320,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [321],
    "primaryOutputId": 321,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "9f603b42bc8c515277cedd9bd2dab9b5428c1fa23e577792b6306a958e4dbfd0",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [322],
    "primaryOutputId": 322,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "571781b202b2e14a126951d30c5dec6c7d1f5345e1382e8085c9fd73315691ad",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [67],
    "outputIds": [323],
    "primaryOutputId": 323,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [68],
    "outputIds": [324],
    "primaryOutputId": 324,
    "executionPlatform": "@local_config_platform//:host"
  }],
  "targets": [{
    "id": 1,
    "label": "//examples/remotebuildexecution/hello_world/java:hello_java",
    "ruleClassId": 1
  }, {
    "id": 2,
    "label": "//tests/rules/exec_properties:multiple_properties_compare_test",
    "ruleClassId": 2
  }, {
    "id": 3,
    "label": "//tests/rules/exec_properties:docker_run_as_container_provided_user_compare_test",
    "ruleClassId": 2
  }, {
    "id": 4,
    "label": "//examples/remotebuildexecution/rbe_system_check/cc:rbe_system_check",
    "ruleClassId": 3
  }, {
    "id": 5,
    "label": "//examples/remotebuildexecution/hello_world/cc:say_hello",
    "ruleClassId": 4
  }, {
    "id": 6,
    "label": "//tests/rules/exec_properties:labels_compare_test",
    "ruleClassId": 2
  }, {
    "id": 7,
    "label": "//examples/remotebuildexecution/hello_world/cc:say_hello_test",
    "ruleClassId": 5
  }, {
    "id": 8,
    "label": "//examples/remotebuildexecution/rbe_system_check/cc:rbe_system_check_test",
    "ruleClassId": 5
  }, {
    "id": 9,
    "label": "//tests/rules/exec_properties:docker_network_compare_test",
    "ruleClassId": 2
  }, {
    "id": 10,
    "label": "//examples/remotebuildexecution/hello_world/cc:hello_world",
    "ruleClassId": 3
  }],
  "depSetOfFiles": [{
    "id": 3,
    "directArtifactIds": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
  }, {
    "id": 4,
    "directArtifactIds": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
  }, {
    "id": 5,
    "directArtifactIds": [48, 49, 50, 51, 52, 53, 54, 55]
  }, {
    "id": 6,
    "directArtifactIds": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112]
  }, {
    "id": 2,
    "transitiveDepSetIds": [3, 4, 5, 6]
  }, {
    "id": 7,
    "transitiveDepSetIds": [2],
    "directArtifactIds": [113]
  }, {
    "id": 1,
    "transitiveDepSetIds": [2, 7],
    "directArtifactIds": [114, 115]
  }, {
    "id": 8,
    "directArtifactIds": [115, 120]
  }, {
    "id": 9,
    "directArtifactIds": [121, 120]
  }, {
    "id": 10,
    "directArtifactIds": [124]
  }, {
    "id": 13,
    "directArtifactIds": [116, 122]
  }, {
    "id": 15,
    "directArtifactIds": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
  }, {
    "id": 16,
    "directArtifactIds": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169]
  }, {
    "id": 17,
    "directArtifactIds": [170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 18,
    "directArtifactIds": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236]
  }, {
    "id": 14,
    "transitiveDepSetIds": [15, 16, 17, 18]
  }, {
    "id": 12,
    "transitiveDepSetIds": [13, 14],
    "directArtifactIds": [116]
  }, {
    "id": 11,
    "transitiveDepSetIds": [12],
    "directArtifactIds": [125]
  }, {
    "id": 20,
    "directArtifactIds": [116, 237, 238]
  }, {
    "id": 19,
    "transitiveDepSetIds": [20],
    "directArtifactIds": [120]
  }, {
    "id": 21,
    "directArtifactIds": [242]
  }, {
    "id": 22,
    "directArtifactIds": [241, 243]
  }, {
    "id": 23,
    "directArtifactIds": [244, 245, 246]
  }, {
    "id": 24,
    "directArtifactIds": [250]
  }, {
    "id": 25,
    "directArtifactIds": [249, 251]
  }, {
    "id": 26,
    "directArtifactIds": [252, 245, 246]
  }, {
    "id": 27,
    "directArtifactIds": [255, 256]
  }, {
    "id": 29,
    "directArtifactIds": [255, 260, 261]
  }, {
    "id": 28,
    "transitiveDepSetIds": [29],
    "directArtifactIds": [257, 259]
  }, {
    "id": 30,
    "directArtifactIds": [255, 262]
  }, {
    "id": 31,
    "directArtifactIds": [265]
  }, {
    "id": 32,
    "directArtifactIds": [262, 266]
  }, {
    "id": 33,
    "directArtifactIds": [268]
  }, {
    "id": 35,
    "directArtifactIds": [255, 270]
  }, {
    "id": 34,
    "transitiveDepSetIds": [35],
    "directArtifactIds": [269]
  }, {
    "id": 36,
    "directArtifactIds": [271, 255, 273]
  }, {
    "id": 37,
    "transitiveDepSetIds": [29],
    "directArtifactIds": [271, 275]
  }, {
    "id": 38,
    "directArtifactIds": [276]
  }, {
    "id": 39,
    "directArtifactIds": [279]
  }, {
    "id": 40,
    "directArtifactIds": [278, 280]
  }, {
    "id": 41,
    "directArtifactIds": [281, 245, 246]
  }, {
    "id": 42,
    "directArtifactIds": [269]
  }, {
    "id": 44,
    "directArtifactIds": [255, 285]
  }, {
    "id": 43,
    "transitiveDepSetIds": [44],
    "directArtifactIds": [284]
  }, {
    "id": 46,
    "directArtifactIds": [286, 277]
  }, {
    "id": 45,
    "transitiveDepSetIds": [46, 29],
    "directArtifactIds": [284, 288]
  }, {
    "id": 47,
    "directArtifactIds": [255, 289]
  }, {
    "id": 48,
    "directArtifactIds": [292]
  }, {
    "id": 51,
    "directArtifactIds": [277, 289]
  }, {
    "id": 50,
    "transitiveDepSetIds": [51],
    "directArtifactIds": [289]
  }, {
    "id": 49,
    "transitiveDepSetIds": [50],
    "directArtifactIds": [293]
  }, {
    "id": 52,
    "directArtifactIds": [294, 245, 246]
  }, {
    "id": 53,
    "directArtifactIds": [255, 256]
  }, {
    "id": 54,
    "transitiveDepSetIds": [29],
    "directArtifactIds": [297, 299]
  }, {
    "id": 55,
    "directArtifactIds": [255, 300]
  }, {
    "id": 56,
    "directArtifactIds": [303]
  }, {
    "id": 57,
    "directArtifactIds": [300, 304]
  }, {
    "id": 58,
    "directArtifactIds": [305, 245, 246]
  }, {
    "id": 59,
    "directArtifactIds": [309]
  }, {
    "id": 60,
    "directArtifactIds": [308, 310]
  }, {
    "id": 61,
    "directArtifactIds": [311, 245, 246]
  }, {
    "id": 63,
    "directArtifactIds": [255, 315]
  }, {
    "id": 62,
    "transitiveDepSetIds": [63],
    "directArtifactIds": [314]
  }, {
    "id": 65,
    "directArtifactIds": [316, 271]
  }, {
    "id": 64,
    "transitiveDepSetIds": [65, 29],
    "directArtifactIds": [314, 318]
  }, {
    "id": 66,
    "directArtifactIds": [255, 319]
  }, {
    "id": 67,
    "directArtifactIds": [322]
  }, {
    "id": 68,
    "directArtifactIds": [319, 323]
  }],
  "configuration": [{
    "id": 1,
    "mnemonic": "k8-fastbuild",
    "platformName": "k8",
    "checksum": "e96a7c0dd44f3d33700c546497b69f5869b3b0f31e60fa381ce05a0ead3c7082"
  }, {
    "id": 2,
    "mnemonic": "k8-fastbuild",
    "platformName": "k8",
    "checksum": "8afd6546e55195afed5b01a6143d0ab593c2dd3b9880d12bfaf8e9cf87917b51"
  }],
  "ruleClasses": [{
    "id": 1,
    "name": "java_binary"
  }, {
    "id": 2,
    "name": "compare_dicts_test"
  }, {
    "id": 3,
    "name": "cc_binary"
  }, {
    "id": 4,
    "name": "cc_library"
  }, {
    "id": 5,
    "name": "cc_test"
  }],
  "pathFragments": [{
    "id": 4,
    "label": "external"
  }, {
    "id": 3,
    "label": "remotejdk11_linux",
    "parentId": 4
  }, {
    "id": 2,
    "label": "bin",
    "parentId": 3
  }, {
    "id": 1,
    "label": "jaotc",
    "parentId": 2
  }, {
    "id": 5,
    "label": "jar",
    "parentId": 2
  }, {
    "id": 6,
    "label": "jarsigner",
    "parentId": 2
  }, {
    "id": 7,
    "label": "java",
    "parentId": 2
  }, {
    "id": 8,
    "label": "javac",
    "parentId": 2
  }, {
    "id": 9,
    "label": "javadoc",
    "parentId": 2
  }, {
    "id": 10,
    "label": "javap",
    "parentId": 2
  }, {
    "id": 11,
    "label": "jcmd",
    "parentId": 2
  }, {
    "id": 12,
    "label": "jconsole",
    "parentId": 2
  }, {
    "id": 13,
    "label": "jdb",
    "parentId": 2
  }, {
    "id": 14,
    "label": "jdeprscan",
    "parentId": 2
  }, {
    "id": 15,
    "label": "jdeps",
    "parentId": 2
  }, {
    "id": 16,
    "label": "jfr",
    "parentId": 2
  }, {
    "id": 17,
    "label": "jhsdb",
    "parentId": 2
  }, {
    "id": 18,
    "label": "jimage",
    "parentId": 2
  }, {
    "id": 19,
    "label": "jinfo",
    "parentId": 2
  }, {
    "id": 20,
    "label": "jjs",
    "parentId": 2
  }, {
    "id": 21,
    "label": "jlink",
    "parentId": 2
  }, {
    "id": 22,
    "label": "jmap",
    "parentId": 2
  }, {
    "id": 23,
    "label": "jmod",
    "parentId": 2
  }, {
    "id": 24,
    "label": "jps",
    "parentId": 2
  }, {
    "id": 25,
    "label": "jrunscript",
    "parentId": 2
  }, {
    "id": 26,
    "label": "jshell",
    "parentId": 2
  }, {
    "id": 27,
    "label": "jstack",
    "parentId": 2
  }, {
    "id": 28,
    "label": "jstat",
    "parentId": 2
  }, {
    "id": 29,
    "label": "jstatd",
    "parentId": 2
  }, {
    "id": 30,
    "label": "keytool",
    "parentId": 2
  }, {
    "id": 31,
    "label": "pack200",
    "parentId": 2
  }, {
    "id": 32,
    "label": "rmic",
    "parentId": 2
  }, {
    "id": 33,
    "label": "rmid",
    "parentId": 2
  }, {
    "id": 34,
    "label": "rmiregistry",
    "parentId": 2
  }, {
    "id": 35,
    "label": "serialver",
    "parentId": 2
  }, {
    "id": 36,
    "label": "unpack200",
    "parentId": 2
  }, {
    "id": 38,
    "label": "conf",
    "parentId": 3
  }, {
    "id": 37,
    "label": "logging.properties",
    "parentId": 38
  }, {
    "id": 40,
    "label": "management",
    "parentId": 38
  }, {
    "id": 39,
    "label": "jmxremote.access",
    "parentId": 40
  }, {
    "id": 41,
    "label": "jmxremote.password.template",
    "parentId": 40
  }, {
    "id": 42,
    "label": "management.properties",
    "parentId": 40
  }, {
    "id": 43,
    "label": "net.properties",
    "parentId": 38
  }, {
    "id": 45,
    "label": "security",
    "parentId": 38
  }, {
    "id": 44,
    "label": "java.policy",
    "parentId": 45
  }, {
    "id": 46,
    "label": "java.security",
    "parentId": 45
  }, {
    "id": 48,
    "label": "policy",
    "parentId": 45
  }, {
    "id": 47,
    "label": "README.txt",
    "parentId": 48
  }, {
    "id": 50,
    "label": "limited",
    "parentId": 48
  }, {
    "id": 49,
    "label": "default_US_export.policy",
    "parentId": 50
  }, {
    "id": 51,
    "label": "default_local.policy",
    "parentId": 50
  }, {
    "id": 52,
    "label": "exempt_local.policy",
    "parentId": 50
  }, {
    "id": 54,
    "label": "unlimited",
    "parentId": 48
  }, {
    "id": 53,
    "label": "default_US_export.policy",
    "parentId": 54
  }, {
    "id": 55,
    "label": "default_local.policy",
    "parentId": 54
  }, {
    "id": 56,
    "label": "sound.properties",
    "parentId": 38
  }, {
    "id": 58,
    "label": "include",
    "parentId": 3
  }, {
    "id": 57,
    "label": "classfile_constants.h",
    "parentId": 58
  }, {
    "id": 59,
    "label": "jawt.h",
    "parentId": 58
  }, {
    "id": 60,
    "label": "jdwpTransport.h",
    "parentId": 58
  }, {
    "id": 61,
    "label": "jni.h",
    "parentId": 58
  }, {
    "id": 62,
    "label": "jvmti.h",
    "parentId": 58
  }, {
    "id": 63,
    "label": "jvmticmlr.h",
    "parentId": 58
  }, {
    "id": 65,
    "label": "linux",
    "parentId": 58
  }, {
    "id": 64,
    "label": "jawt_md.h",
    "parentId": 65
  }, {
    "id": 66,
    "label": "jni_md.h",
    "parentId": 65
  }, {
    "id": 68,
    "label": "lib",
    "parentId": 3
  }, {
    "id": 67,
    "label": "classlist",
    "parentId": 68
  }, {
    "id": 69,
    "label": "ct.sym",
    "parentId": 68
  }, {
    "id": 70,
    "label": "jexec",
    "parentId": 68
  }, {
    "id": 72,
    "label": "jfr",
    "parentId": 68
  }, {
    "id": 71,
    "label": "default.jfc",
    "parentId": 72
  }, {
    "id": 73,
    "label": "profile.jfc",
    "parentId": 72
  }, {
    "id": 75,
    "label": "jli",
    "parentId": 68
  }, {
    "id": 74,
    "label": "libjli.so",
    "parentId": 75
  }, {
    "id": 76,
    "label": "jrt-fs.jar",
    "parentId": 68
  }, {
    "id": 77,
    "label": "jspawnhelper",
    "parentId": 68
  }, {
    "id": 78,
    "label": "jvm.cfg",
    "parentId": 68
  }, {
    "id": 79,
    "label": "libattach.so",
    "parentId": 68
  }, {
    "id": 80,
    "label": "libawt.so",
    "parentId": 68
  }, {
    "id": 81,
    "label": "libawt_headless.so",
    "parentId": 68
  }, {
    "id": 82,
    "label": "libawt_xawt.so",
    "parentId": 68
  }, {
    "id": 83,
    "label": "libdt_socket.so",
    "parentId": 68
  }, {
    "id": 84,
    "label": "libextnet.so",
    "parentId": 68
  }, {
    "id": 85,
    "label": "libfontmanager.so",
    "parentId": 68
  }, {
    "id": 86,
    "label": "libfreetype.so",
    "parentId": 68
  }, {
    "id": 87,
    "label": "libinstrument.so",
    "parentId": 68
  }, {
    "id": 88,
    "label": "libj2gss.so",
    "parentId": 68
  }, {
    "id": 89,
    "label": "libj2pcsc.so",
    "parentId": 68
  }, {
    "id": 90,
    "label": "libj2pkcs11.so",
    "parentId": 68
  }, {
    "id": 91,
    "label": "libjaas.so",
    "parentId": 68
  }, {
    "id": 92,
    "label": "libjava.so",
    "parentId": 68
  }, {
    "id": 93,
    "label": "libjavajpeg.so",
    "parentId": 68
  }, {
    "id": 94,
    "label": "libjawt.so",
    "parentId": 68
  }, {
    "id": 95,
    "label": "libjdwp.so",
    "parentId": 68
  }, {
    "id": 96,
    "label": "libjimage.so",
    "parentId": 68
  }, {
    "id": 97,
    "label": "libjsig.so",
    "parentId": 68
  }, {
    "id": 98,
    "label": "libjsound.so",
    "parentId": 68
  }, {
    "id": 99,
    "label": "liblcms.so",
    "parentId": 68
  }, {
    "id": 100,
    "label": "libmanagement.so",
    "parentId": 68
  }, {
    "id": 101,
    "label": "libmanagement_agent.so",
    "parentId": 68
  }, {
    "id": 102,
    "label": "libmanagement_ext.so",
    "parentId": 68
  }, {
    "id": 103,
    "label": "libmlib_image.so",
    "parentId": 68
  }, {
    "id": 104,
    "label": "libnet.so",
    "parentId": 68
  }, {
    "id": 105,
    "label": "libnio.so",
    "parentId": 68
  }, {
    "id": 106,
    "label": "libprefs.so",
    "parentId": 68
  }, {
    "id": 107,
    "label": "librmi.so",
    "parentId": 68
  }, {
    "id": 108,
    "label": "libsaproc.so",
    "parentId": 68
  }, {
    "id": 109,
    "label": "libsctp.so",
    "parentId": 68
  }, {
    "id": 110,
    "label": "libsplashscreen.so",
    "parentId": 68
  }, {
    "id": 111,
    "label": "libsunec.so",
    "parentId": 68
  }, {
    "id": 112,
    "label": "libunpack.so",
    "parentId": 68
  }, {
    "id": 113,
    "label": "libverify.so",
    "parentId": 68
  }, {
    "id": 114,
    "label": "libzip.so",
    "parentId": 68
  }, {
    "id": 115,
    "label": "modules",
    "parentId": 68
  }, {
    "id": 116,
    "label": "psfont.properties.ja",
    "parentId": 68
  }, {
    "id": 117,
    "label": "psfontj2d.properties",
    "parentId": 68
  }, {
    "id": 119,
    "label": "security",
    "parentId": 68
  }, {
    "id": 118,
    "label": "blocked.certs",
    "parentId": 119
  }, {
    "id": 120,
    "label": "cacerts",
    "parentId": 119
  }, {
    "id": 121,
    "label": "default.policy",
    "parentId": 119
  }, {
    "id": 122,
    "label": "public_suffix_list.dat",
    "parentId": 119
  }, {
    "id": 124,
    "label": "server",
    "parentId": 68
  }, {
    "id": 123,
    "label": "Xusage.txt",
    "parentId": 124
  }, {
    "id": 125,
    "label": "libjsig.so",
    "parentId": 124
  }, {
    "id": 126,
    "label": "libjvm.so",
    "parentId": 124
  }, {
    "id": 127,
    "label": "src.zip",
    "parentId": 68
  }, {
    "id": 128,
    "label": "tzdb.dat",
    "parentId": 68
  }, {
    "id": 131,
    "label": "remote_java_tools",
    "parentId": 4
  }, {
    "id": 130,
    "label": "java_tools",
    "parentId": 131
  }, {
    "id": 129,
    "label": "JavaBuilder_deploy.jar",
    "parentId": 130
  }, {
    "id": 139,
    "label": "bazel-out"
  }, {
    "id": 138,
    "label": "k8-fastbuild",
    "parentId": 139
  }, {
    "id": 137,
    "label": "bin",
    "parentId": 138
  }, {
    "id": 136,
    "label": "external",
    "parentId": 137
  }, {
    "id": 135,
    "label": "bazel_tools",
    "parentId": 136
  }, {
    "id": 134,
    "label": "tools",
    "parentId": 135
  }, {
    "id": 133,
    "label": "jdk",
    "parentId": 134
  }, {
    "id": 132,
    "label": "platformclasspath.jar",
    "parentId": 133
  }, {
    "id": 144,
    "label": "examples"
  }, {
    "id": 143,
    "label": "remotebuildexecution",
    "parentId": 144
  }, {
    "id": 142,
    "label": "hello_world",
    "parentId": 143
  }, {
    "id": 141,
    "label": "java",
    "parentId": 142
  }, {
    "id": 140,
    "label": "HelloWorld.java",
    "parentId": 141
  }, {
    "id": 149,
    "label": "examples",
    "parentId": 137
  }, {
    "id": 148,
    "label": "remotebuildexecution",
    "parentId": 149
  }, {
    "id": 147,
    "label": "hello_world",
    "parentId": 148
  }, {
    "id": 146,
    "label": "java",
    "parentId": 147
  }, {
    "id": 145,
    "label": "hello_java.jar",
    "parentId": 146
  }, {
    "id": 150,
    "label": "hello_java.jdeps",
    "parentId": 146
  }, {
    "id": 151,
    "label": "hello_java-native-header.jar",
    "parentId": 146
  }, {
    "id": 152,
    "label": "hello_java.jar_manifest_proto",
    "parentId": 146
  }, {
    "id": 158,
    "label": "remote_java_tools_linux",
    "parentId": 4
  }, {
    "id": 157,
    "label": "java_tools",
    "parentId": 158
  }, {
    "id": 156,
    "label": "src",
    "parentId": 157
  }, {
    "id": 155,
    "label": "tools",
    "parentId": 156
  }, {
    "id": 154,
    "label": "singlejar",
    "parentId": 155
  }, {
    "id": 153,
    "label": "singlejar_local",
    "parentId": 154
  }, {
    "id": 159,
    "label": "hello_java-src.jar",
    "parentId": 146
  }, {
    "id": 160,
    "label": "hello_java",
    "parentId": 146
  }, {
    "id": 161,
    "label": "hello_java_deploy-src.jar",
    "parentId": 146
  }, {
    "id": 162,
    "label": "hello_java.runfiles_manifest",
    "parentId": 146
  }, {
    "id": 164,
    "label": "hello_java.runfiles",
    "parentId": 146
  }, {
    "id": 163,
    "label": "MANIFEST",
    "parentId": 164
  }, {
    "id": 167,
    "label": "local_jdk",
    "parentId": 4
  }, {
    "id": 166,
    "label": "bin",
    "parentId": 167
  }, {
    "id": 165,
    "label": "jar",
    "parentId": 166
  }, {
    "id": 168,
    "label": "jarsigner",
    "parentId": 166
  }, {
    "id": 169,
    "label": "java",
    "parentId": 166
  }, {
    "id": 170,
    "label": "javac",
    "parentId": 166
  }, {
    "id": 171,
    "label": "javadoc",
    "parentId": 166
  }, {
    "id": 172,
    "label": "javap",
    "parentId": 166
  }, {
    "id": 173,
    "label": "jcmd",
    "parentId": 166
  }, {
    "id": 174,
    "label": "jconsole",
    "parentId": 166
  }, {
    "id": 175,
    "label": "jdb",
    "parentId": 166
  }, {
    "id": 176,
    "label": "jdeprscan",
    "parentId": 166
  }, {
    "id": 177,
    "label": "jdeps",
    "parentId": 166
  }, {
    "id": 178,
    "label": "jfr",
    "parentId": 166
  }, {
    "id": 179,
    "label": "jhsdb",
    "parentId": 166
  }, {
    "id": 180,
    "label": "jimage",
    "parentId": 166
  }, {
    "id": 181,
    "label": "jinfo",
    "parentId": 166
  }, {
    "id": 182,
    "label": "jlink",
    "parentId": 166
  }, {
    "id": 183,
    "label": "jmap",
    "parentId": 166
  }, {
    "id": 184,
    "label": "jmod",
    "parentId": 166
  }, {
    "id": 185,
    "label": "jpackage",
    "parentId": 166
  }, {
    "id": 186,
    "label": "jps",
    "parentId": 166
  }, {
    "id": 187,
    "label": "jrunscript",
    "parentId": 166
  }, {
    "id": 188,
    "label": "jshell",
    "parentId": 166
  }, {
    "id": 189,
    "label": "jstack",
    "parentId": 166
  }, {
    "id": 190,
    "label": "jstat",
    "parentId": 166
  }, {
    "id": 191,
    "label": "jstatd",
    "parentId": 166
  }, {
    "id": 192,
    "label": "keytool",
    "parentId": 166
  }, {
    "id": 193,
    "label": "rmiregistry",
    "parentId": 166
  }, {
    "id": 194,
    "label": "serialver",
    "parentId": 166
  }, {
    "id": 196,
    "label": "conf",
    "parentId": 167
  }, {
    "id": 195,
    "label": "accessibility.properties",
    "parentId": 196
  }, {
    "id": 197,
    "label": "logging.properties",
    "parentId": 196
  }, {
    "id": 199,
    "label": "management",
    "parentId": 196
  }, {
    "id": 198,
    "label": "jmxremote.access",
    "parentId": 199
  }, {
    "id": 200,
    "label": "management.properties",
    "parentId": 199
  }, {
    "id": 201,
    "label": "net.properties",
    "parentId": 196
  }, {
    "id": 203,
    "label": "security",
    "parentId": 196
  }, {
    "id": 202,
    "label": "java.policy",
    "parentId": 203
  }, {
    "id": 204,
    "label": "java.security",
    "parentId": 203
  }, {
    "id": 205,
    "label": "nss.cfg",
    "parentId": 203
  }, {
    "id": 207,
    "label": "policy",
    "parentId": 203
  }, {
    "id": 206,
    "label": "README.txt",
    "parentId": 207
  }, {
    "id": 209,
    "label": "limited",
    "parentId": 207
  }, {
    "id": 208,
    "label": "default_US_export.policy",
    "parentId": 209
  }, {
    "id": 210,
    "label": "default_local.policy",
    "parentId": 209
  }, {
    "id": 211,
    "label": "exempt_local.policy",
    "parentId": 209
  }, {
    "id": 213,
    "label": "unlimited",
    "parentId": 207
  }, {
    "id": 212,
    "label": "default_US_export.policy",
    "parentId": 213
  }, {
    "id": 214,
    "label": "default_local.policy",
    "parentId": 213
  }, {
    "id": 215,
    "label": "sound.properties",
    "parentId": 196
  }, {
    "id": 216,
    "label": "swing.properties",
    "parentId": 196
  }, {
    "id": 218,
    "label": "include",
    "parentId": 167
  }, {
    "id": 217,
    "label": "classfile_constants.h",
    "parentId": 218
  }, {
    "id": 219,
    "label": "jawt.h",
    "parentId": 218
  }, {
    "id": 220,
    "label": "jdwpTransport.h",
    "parentId": 218
  }, {
    "id": 221,
    "label": "jni.h",
    "parentId": 218
  }, {
    "id": 222,
    "label": "jvmti.h",
    "parentId": 218
  }, {
    "id": 223,
    "label": "jvmticmlr.h",
    "parentId": 218
  }, {
    "id": 225,
    "label": "linux",
    "parentId": 218
  }, {
    "id": 224,
    "label": "jawt_md.h",
    "parentId": 225
  }, {
    "id": 226,
    "label": "jni_md.h",
    "parentId": 225
  }, {
    "id": 228,
    "label": "lib",
    "parentId": 167
  }, {
    "id": 227,
    "label": "classlist",
    "parentId": 228
  }, {
    "id": 229,
    "label": "ct.sym",
    "parentId": 228
  }, {
    "id": 230,
    "label": "jar.binfmt",
    "parentId": 228
  }, {
    "id": 231,
    "label": "jexec",
    "parentId": 228
  }, {
    "id": 233,
    "label": "jfr",
    "parentId": 228
  }, {
    "id": 232,
    "label": "default.jfc",
    "parentId": 233
  }, {
    "id": 234,
    "label": "profile.jfc",
    "parentId": 233
  }, {
    "id": 235,
    "label": "jrt-fs.jar",
    "parentId": 228
  }, {
    "id": 236,
    "label": "jspawnhelper",
    "parentId": 228
  }, {
    "id": 237,
    "label": "jvm.cfg",
    "parentId": 228
  }, {
    "id": 238,
    "label": "jvm.cfg-default",
    "parentId": 228
  }, {
    "id": 239,
    "label": "libatk-wrapper.so",
    "parentId": 228
  }, {
    "id": 240,
    "label": "libattach.so",
    "parentId": 228
  }, {
    "id": 241,
    "label": "libawt.so",
    "parentId": 228
  }, {
    "id": 242,
    "label": "libawt_headless.so",
    "parentId": 228
  }, {
    "id": 243,
    "label": "libawt_xawt.so",
    "parentId": 228
  }, {
    "id": 244,
    "label": "libdt_socket.so",
    "parentId": 228
  }, {
    "id": 245,
    "label": "libextnet.so",
    "parentId": 228
  }, {
    "id": 246,
    "label": "libfontmanager.so",
    "parentId": 228
  }, {
    "id": 247,
    "label": "libinstrument.so",
    "parentId": 228
  }, {
    "id": 248,
    "label": "libj2gss.so",
    "parentId": 228
  }, {
    "id": 249,
    "label": "libj2pcsc.so",
    "parentId": 228
  }, {
    "id": 250,
    "label": "libj2pkcs11.so",
    "parentId": 228
  }, {
    "id": 251,
    "label": "libjaas.so",
    "parentId": 228
  }, {
    "id": 252,
    "label": "libjava.so",
    "parentId": 228
  }, {
    "id": 253,
    "label": "libjavajpeg.so",
    "parentId": 228
  }, {
    "id": 254,
    "label": "libjawt.so",
    "parentId": 228
  }, {
    "id": 255,
    "label": "libjdwp.so",
    "parentId": 228
  }, {
    "id": 256,
    "label": "libjimage.so",
    "parentId": 228
  }, {
    "id": 257,
    "label": "libjli.so",
    "parentId": 228
  }, {
    "id": 258,
    "label": "libjsig.so",
    "parentId": 228
  }, {
    "id": 259,
    "label": "libjsound.so",
    "parentId": 228
  }, {
    "id": 260,
    "label": "libjsvml.so",
    "parentId": 228
  }, {
    "id": 261,
    "label": "liblcms.so",
    "parentId": 228
  }, {
    "id": 262,
    "label": "libmanagement.so",
    "parentId": 228
  }, {
    "id": 263,
    "label": "libmanagement_agent.so",
    "parentId": 228
  }, {
    "id": 264,
    "label": "libmanagement_ext.so",
    "parentId": 228
  }, {
    "id": 265,
    "label": "libmlib_image.so",
    "parentId": 228
  }, {
    "id": 266,
    "label": "libnet.so",
    "parentId": 228
  }, {
    "id": 267,
    "label": "libnio.so",
    "parentId": 228
  }, {
    "id": 268,
    "label": "libprefs.so",
    "parentId": 228
  }, {
    "id": 269,
    "label": "librmi.so",
    "parentId": 228
  }, {
    "id": 270,
    "label": "libsaproc.so",
    "parentId": 228
  }, {
    "id": 271,
    "label": "libsctp.so",
    "parentId": 228
  }, {
    "id": 272,
    "label": "libsplashscreen.so",
    "parentId": 228
  }, {
    "id": 273,
    "label": "libsyslookup.so",
    "parentId": 228
  }, {
    "id": 274,
    "label": "libverify.so",
    "parentId": 228
  }, {
    "id": 275,
    "label": "libzip.so",
    "parentId": 228
  }, {
    "id": 276,
    "label": "modules",
    "parentId": 228
  }, {
    "id": 277,
    "label": "psfont.properties.ja",
    "parentId": 228
  }, {
    "id": 278,
    "label": "psfontj2d.properties",
    "parentId": 228
  }, {
    "id": 280,
    "label": "security",
    "parentId": 228
  }, {
    "id": 279,
    "label": "blocked.certs",
    "parentId": 280
  }, {
    "id": 281,
    "label": "cacerts",
    "parentId": 280
  }, {
    "id": 282,
    "label": "default.policy",
    "parentId": 280
  }, {
    "id": 283,
    "label": "public_suffix_list.dat",
    "parentId": 280
  }, {
    "id": 285,
    "label": "server",
    "parentId": 228
  }, {
    "id": 284,
    "label": "classes.jsa",
    "parentId": 285
  }, {
    "id": 286,
    "label": "classes_nocoops.jsa",
    "parentId": 285
  }, {
    "id": 287,
    "label": "libjsig.so",
    "parentId": 285
  }, {
    "id": 288,
    "label": "libjvm.so",
    "parentId": 285
  }, {
    "id": 289,
    "label": "tzdb.dat",
    "parentId": 228
  }, {
    "id": 292,
    "label": "internal",
    "parentId": 138
  }, {
    "id": 291,
    "label": "_middlemen",
    "parentId": 292
  }, {
    "id": 290,
    "label": "examples_Sremotebuildexecution_Shello_Uworld_Sjava_Shello_Ujava-runfiles",
    "parentId": 291
  }, {
    "id": 294,
    "label": "include",
    "parentId": 138
  }, {
    "id": 293,
    "label": "build-info-redacted.properties",
    "parentId": 294
  }, {
    "id": 295,
    "label": "hello_java_deploy.jar",
    "parentId": 146
  }, {
    "id": 296,
    "label": "hello_java_deploy.jar.unstripped",
    "parentId": 146
  }, {
    "id": 300,
    "label": "tests",
    "parentId": 137
  }, {
    "id": 299,
    "label": "rules",
    "parentId": 300
  }, {
    "id": 298,
    "label": "exec_properties",
    "parentId": 299
  }, {
    "id": 297,
    "label": "multiple_properties_compare_test",
    "parentId": 298
  }, {
    "id": 301,
    "label": "multiple_properties_compare_test.runfiles_manifest",
    "parentId": 298
  }, {
    "id": 303,
    "label": "multiple_properties_compare_test.runfiles",
    "parentId": 298
  }, {
    "id": 302,
    "label": "MANIFEST",
    "parentId": 303
  }, {
    "id": 304,
    "label": "tests_Srules_Sexec_Uproperties_Smultiple_Uproperties_Ucompare_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 308,
    "label": "bazel_tools",
    "parentId": 4
  }, {
    "id": 307,
    "label": "tools",
    "parentId": 308
  }, {
    "id": 306,
    "label": "test",
    "parentId": 307
  }, {
    "id": 305,
    "label": "test-setup.sh",
    "parentId": 306
  }, {
    "id": 309,
    "label": "generate-xml.sh",
    "parentId": 306
  }, {
    "id": 315,
    "label": "testlogs",
    "parentId": 138
  }, {
    "id": 314,
    "label": "tests",
    "parentId": 315
  }, {
    "id": 313,
    "label": "rules",
    "parentId": 314
  }, {
    "id": 312,
    "label": "exec_properties",
    "parentId": 313
  }, {
    "id": 311,
    "label": "multiple_properties_compare_test",
    "parentId": 312
  }, {
    "id": 310,
    "label": "test.log",
    "parentId": 311
  }, {
    "id": 316,
    "label": "test.cache_status",
    "parentId": 311
  }, {
    "id": 317,
    "label": "docker_run_as_container_provided_user_compare_test",
    "parentId": 298
  }, {
    "id": 318,
    "label": "docker_run_as_container_provided_user_compare_test.runfiles_manifest",
    "parentId": 298
  }, {
    "id": 320,
    "label": "docker_run_as_container_provided_user_compare_test.runfiles",
    "parentId": 298
  }, {
    "id": 319,
    "label": "MANIFEST",
    "parentId": 320
  }, {
    "id": 321,
    "label": "tests_Srules_Sexec_Uproperties_Sdocker_Urun_Uas_Ucontainer_Uprovided_Uuser_Ucompare_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 323,
    "label": "docker_run_as_container_provided_user_compare_test",
    "parentId": 312
  }, {
    "id": 322,
    "label": "test.log",
    "parentId": 323
  }, {
    "id": 324,
    "label": "test.cache_status",
    "parentId": 323
  }, {
    "id": 326,
    "label": "local_config_cc",
    "parentId": 4
  }, {
    "id": 325,
    "label": "builtin_include_directory_paths",
    "parentId": 326
  }, {
    "id": 329,
    "label": "rbe_system_check",
    "parentId": 143
  }, {
    "id": 328,
    "label": "cc",
    "parentId": 329
  }, {
    "id": 327,
    "label": "rbe_system_check.cc",
    "parentId": 328
  }, {
    "id": 334,
    "label": "rbe_system_check",
    "parentId": 148
  }, {
    "id": 333,
    "label": "cc",
    "parentId": 334
  }, {
    "id": 332,
    "label": "_objs",
    "parentId": 333
  }, {
    "id": 331,
    "label": "rbe_system_check",
    "parentId": 332
  }, {
    "id": 330,
    "label": "rbe_system_check.pic.o",
    "parentId": 331
  }, {
    "id": 335,
    "label": "rbe_system_check.pic.d",
    "parentId": 331
  }, {
    "id": 336,
    "label": "rbe_system_check-2.params",
    "parentId": 333
  }, {
    "id": 338,
    "label": "cpp",
    "parentId": 307
  }, {
    "id": 337,
    "label": "build_interface_so",
    "parentId": 338
  }, {
    "id": 339,
    "label": "link_dynamic_library.sh",
    "parentId": 338
  }, {
    "id": 340,
    "label": "rbe_system_check",
    "parentId": 333
  }, {
    "id": 341,
    "label": "rbe_system_check.stripped",
    "parentId": 333
  }, {
    "id": 342,
    "label": "rbe_system_check.dwp",
    "parentId": 333
  }, {
    "id": 343,
    "label": "rbe_system_check.runfiles_manifest",
    "parentId": 333
  }, {
    "id": 345,
    "label": "rbe_system_check.runfiles",
    "parentId": 333
  }, {
    "id": 344,
    "label": "MANIFEST",
    "parentId": 345
  }, {
    "id": 346,
    "label": "examples_Sremotebuildexecution_Srbe_Usystem_Ucheck_Scc_Srbe_Usystem_Ucheck-runfiles",
    "parentId": 291
  }, {
    "id": 348,
    "label": "cc",
    "parentId": 142
  }, {
    "id": 347,
    "label": "say_hello.h",
    "parentId": 348
  }, {
    "id": 349,
    "label": "_S_Sexamples_Sremotebuildexecution_Shello_Uworld_Scc_Csay_Uhello-cc_library-compile",
    "parentId": 291
  }, {
    "id": 350,
    "label": "say_hello.cc",
    "parentId": 348
  }, {
    "id": 354,
    "label": "cc",
    "parentId": 147
  }, {
    "id": 353,
    "label": "_objs",
    "parentId": 354
  }, {
    "id": 352,
    "label": "say_hello",
    "parentId": 353
  }, {
    "id": 351,
    "label": "say_hello.pic.o",
    "parentId": 352
  }, {
    "id": 355,
    "label": "say_hello.pic.d",
    "parentId": 352
  }, {
    "id": 356,
    "label": "libsay_hello.a-2.params",
    "parentId": 354
  }, {
    "id": 357,
    "label": "libsay_hello.a",
    "parentId": 354
  }, {
    "id": 358,
    "label": "libsay_hello.so-2.params",
    "parentId": 354
  }, {
    "id": 359,
    "label": "libsay_hello.so",
    "parentId": 354
  }, {
    "id": 361,
    "label": "_solib_k8",
    "parentId": 137
  }, {
    "id": 360,
    "label": "libexamples_Sremotebuildexecution_Shello_Uworld_Scc_Slibsay_Uhello.so",
    "parentId": 361
  }, {
    "id": 362,
    "label": "labels_compare_test",
    "parentId": 298
  }, {
    "id": 363,
    "label": "labels_compare_test.runfiles_manifest",
    "parentId": 298
  }, {
    "id": 365,
    "label": "labels_compare_test.runfiles",
    "parentId": 298
  }, {
    "id": 364,
    "label": "MANIFEST",
    "parentId": 365
  }, {
    "id": 366,
    "label": "tests_Srules_Sexec_Uproperties_Slabels_Ucompare_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 368,
    "label": "labels_compare_test",
    "parentId": 312
  }, {
    "id": 367,
    "label": "test.log",
    "parentId": 368
  }, {
    "id": 369,
    "label": "test.cache_status",
    "parentId": 368
  }, {
    "id": 370,
    "label": "_S_Sexamples_Sremotebuildexecution_Shello_Uworld_Scc_Csay_Uhello_Utest-BazelCppSemantics_build_arch_k8-fastbuild",
    "parentId": 291
  }, {
    "id": 371,
    "label": "say_hello_test.cc",
    "parentId": 348
  }, {
    "id": 373,
    "label": "say_hello_test",
    "parentId": 353
  }, {
    "id": 372,
    "label": "say_hello_test.pic.o",
    "parentId": 373
  }, {
    "id": 374,
    "label": "say_hello_test.pic.d",
    "parentId": 373
  }, {
    "id": 375,
    "label": "say_hello_test-2.params",
    "parentId": 354
  }, {
    "id": 376,
    "label": "say_hello_test",
    "parentId": 354
  }, {
    "id": 377,
    "label": "say_hello_test.stripped",
    "parentId": 354
  }, {
    "id": 378,
    "label": "say_hello_test.dwp",
    "parentId": 354
  }, {
    "id": 379,
    "label": "say_hello_test.runfiles_manifest",
    "parentId": 354
  }, {
    "id": 381,
    "label": "say_hello_test.runfiles",
    "parentId": 354
  }, {
    "id": 380,
    "label": "MANIFEST",
    "parentId": 381
  }, {
    "id": 382,
    "label": "examples_Sremotebuildexecution_Shello_Uworld_Scc_Ssay_Uhello_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 388,
    "label": "examples",
    "parentId": 315
  }, {
    "id": 387,
    "label": "remotebuildexecution",
    "parentId": 388
  }, {
    "id": 386,
    "label": "hello_world",
    "parentId": 387
  }, {
    "id": 385,
    "label": "cc",
    "parentId": 386
  }, {
    "id": 384,
    "label": "say_hello_test",
    "parentId": 385
  }, {
    "id": 383,
    "label": "test.log",
    "parentId": 384
  }, {
    "id": 389,
    "label": "test.cache_status",
    "parentId": 384
  }, {
    "id": 391,
    "label": "rbe_system_check_test",
    "parentId": 332
  }, {
    "id": 390,
    "label": "rbe_system_check.pic.o",
    "parentId": 391
  }, {
    "id": 392,
    "label": "rbe_system_check.pic.d",
    "parentId": 391
  }, {
    "id": 393,
    "label": "rbe_system_check_test-2.params",
    "parentId": 333
  }, {
    "id": 394,
    "label": "rbe_system_check_test",
    "parentId": 333
  }, {
    "id": 395,
    "label": "rbe_system_check_test.stripped",
    "parentId": 333
  }, {
    "id": 396,
    "label": "rbe_system_check_test.dwp",
    "parentId": 333
  }, {
    "id": 397,
    "label": "rbe_system_check_test.runfiles_manifest",
    "parentId": 333
  }, {
    "id": 399,
    "label": "rbe_system_check_test.runfiles",
    "parentId": 333
  }, {
    "id": 398,
    "label": "MANIFEST",
    "parentId": 399
  }, {
    "id": 400,
    "label": "examples_Sremotebuildexecution_Srbe_Usystem_Ucheck_Scc_Srbe_Usystem_Ucheck_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 404,
    "label": "rbe_system_check",
    "parentId": 387
  }, {
    "id": 403,
    "label": "cc",
    "parentId": 404
  }, {
    "id": 402,
    "label": "rbe_system_check_test",
    "parentId": 403
  }, {
    "id": 401,
    "label": "test.log",
    "parentId": 402
  }, {
    "id": 405,
    "label": "test.cache_status",
    "parentId": 402
  }, {
    "id": 406,
    "label": "docker_network_compare_test",
    "parentId": 298
  }, {
    "id": 407,
    "label": "docker_network_compare_test.runfiles_manifest",
    "parentId": 298
  }, {
    "id": 409,
    "label": "docker_network_compare_test.runfiles",
    "parentId": 298
  }, {
    "id": 408,
    "label": "MANIFEST",
    "parentId": 409
  }, {
    "id": 410,
    "label": "tests_Srules_Sexec_Uproperties_Sdocker_Unetwork_Ucompare_Utest-runfiles",
    "parentId": 291
  }, {
    "id": 412,
    "label": "docker_network_compare_test",
    "parentId": 312
  }, {
    "id": 411,
    "label": "test.log",
    "parentId": 412
  }, {
    "id": 413,
    "label": "test.cache_status",
    "parentId": 412
  }, {
    "id": 414,
    "label": "_S_Sexamples_Sremotebuildexecution_Shello_Uworld_Scc_Chello_Uworld-BazelCppSemantics_build_arch_k8-fastbuild",
    "parentId": 291
  }, {
    "id": 415,
    "label": "hello_world.cc",
    "parentId": 348
  }, {
    "id": 417,
    "label": "hello_world",
    "parentId": 353
  }, {
    "id": 416,
    "label": "hello_world.pic.o",
    "parentId": 417
  }, {
    "id": 418,
    "label": "hello_world.pic.d",
    "parentId": 417
  }, {
    "id": 419,
    "label": "hello_world-2.params",
    "parentId": 354
  }, {
    "id": 420,
    "label": "hello_world",
    "parentId": 354
  }, {
    "id": 421,
    "label": "hello_world.stripped",
    "parentId": 354
  }, {
    "id": 422,
    "label": "hello_world.dwp",
    "parentId": 354
  }, {
    "id": 423,
    "label": "hello_world.runfiles_manifest",
    "parentId": 354
  }, {
    "id": 425,
    "label": "hello_world.runfiles",
    "parentId": 354
  }, {
    "id": 424,
    "label": "MANIFEST",
    "parentId": 425
  }, {
    "id": 426,
    "label": "examples_Sremotebuildexecution_Shello_Uworld_Scc_Shello_Uworld-runfiles",
    "parentId": 291
  }]
}
