{
  "artifacts": [{
    "id": 1,
    "pathFragmentId": 1
  }, {
    "id": 2,
    "pathFragmentId": 2
  }, {
    "id": 3,
    "pathFragmentId": 7
  }, {
    "id": 4,
    "pathFragmentId": 8
  }, {
    "id": 5,
    "pathFragmentId": 10
  }, {
    "id": 6,
    "pathFragmentId": 11
  }, {
    "id": 7,
    "pathFragmentId": 13
  }, {
    "id": 8,
    "pathFragmentId": 17
  }, {
    "id": 9,
    "pathFragmentId": 19
  }, {
    "id": 10,
    "pathFragmentId": 21
  }, {
    "id": 11,
    "pathFragmentId": 27
  }, {
    "id": 12,
    "pathFragmentId": 35
  }, {
    "id": 13,
    "pathFragmentId": 38
  }, {
    "id": 14,
    "pathFragmentId": 39
  }, {
    "id": 15,
    "pathFragmentId": 40
  }, {
    "id": 16,
    "pathFragmentId": 41
  }, {
    "id": 17,
    "pathFragmentId": 43
  }, {
    "id": 18,
    "pathFragmentId": 44
  }, {
    "id": 19,
    "pathFragmentId": 46
  }, {
    "id": 20,
    "pathFragmentId": 48
  }, {
    "id": 21,
    "pathFragmentId": 49
  }, {
    "id": 22,
    "pathFragmentId": 51
  }, {
    "id": 23,
    "pathFragmentId": 52
  }, {
    "id": 24,
    "pathFragmentId": 53
  }, {
    "id": 25,
    "pathFragmentId": 54
  }, {
    "id": 26,
    "pathFragmentId": 55
  }, {
    "id": 27,
    "pathFragmentId": 56
  }, {
    "id": 28,
    "pathFragmentId": 57
  }, {
    "id": 29,
    "pathFragmentId": 58
  }, {
    "id": 30,
    "pathFragmentId": 60
  }, {
    "id": 31,
    "pathFragmentId": 62
  }, {
    "id": 32,
    "pathFragmentId": 64
  }, {
    "id": 33,
    "pathFragmentId": 66
  }, {
    "id": 34,
    "pathFragmentId": 67
  }, {
    "id": 35,
    "pathFragmentId": 68
  }, {
    "id": 36,
    "pathFragmentId": 69
  }, {
    "id": 37,
    "pathFragmentId": 71
  }, {
    "id": 38,
    "pathFragmentId": 73
  }, {
    "id": 39,
    "pathFragmentId": 75
  }, {
    "id": 40,
    "pathFragmentId": 80
  }, {
    "id": 41,
    "pathFragmentId": 81
  }, {
    "id": 42,
    "pathFragmentId": 83
  }, {
    "id": 43,
    "pathFragmentId": 85
  }, {
    "id": 44,
    "pathFragmentId": 91
  }, {
    "id": 45,
    "pathFragmentId": 94
  }, {
    "id": 46,
    "pathFragmentId": 106
  }, {
    "id": 47,
    "pathFragmentId": 116
  }, {
    "id": 48,
    "pathFragmentId": 120
  }, {
    "id": 49,
    "pathFragmentId": 121
  }, {
    "id": 50,
    "pathFragmentId": 122
  }, {
    "id": 51,
    "pathFragmentId": 123
  }, {
    "id": 52,
    "pathFragmentId": 124
  }, {
    "id": 53,
    "pathFragmentId": 128
  }, {
    "id": 54,
    "pathFragmentId": 132
  }, {
    "id": 55,
    "pathFragmentId": 136
  }, {
    "id": 56,
    "pathFragmentId": 141
  }, {
    "id": 57,
    "pathFragmentId": 145
  }, {
    "id": 58,
    "pathFragmentId": 150
  }, {
    "id": 59,
    "pathFragmentId": 153
  }, {
    "id": 60,
    "pathFragmentId": 158
  }, {
    "id": 61,
    "pathFragmentId": 163
  }, {
    "id": 62,
    "pathFragmentId": 168
  }, {
    "id": 63,
    "pathFragmentId": 172
  }, {
    "id": 64,
    "pathFragmentId": 179
  }, {
    "id": 65,
    "pathFragmentId": 188
  }, {
    "id": 66,
    "pathFragmentId": 189
  }, {
    "id": 67,
    "pathFragmentId": 190
  }, {
    "id": 68,
    "pathFragmentId": 191
  }, {
    "id": 69,
    "pathFragmentId": 192
  }, {
    "id": 70,
    "pathFragmentId": 194
  }, {
    "id": 71,
    "pathFragmentId": 195
  }, {
    "id": 72,
    "pathFragmentId": 196
  }, {
    "id": 73,
    "pathFragmentId": 197
  }, {
    "id": 74,
    "pathFragmentId": 198
  }, {
    "id": 75,
    "pathFragmentId": 199
  }, {
    "id": 76,
    "pathFragmentId": 200
  }, {
    "id": 77,
    "pathFragmentId": 201
  }, {
    "id": 78,
    "pathFragmentId": 202
  }, {
    "id": 79,
    "pathFragmentId": 203
  }, {
    "id": 80,
    "pathFragmentId": 204
  }, {
    "id": 81,
    "pathFragmentId": 205
  }, {
    "id": 82,
    "pathFragmentId": 206
  }, {
    "id": 83,
    "pathFragmentId": 207
  }, {
    "id": 84,
    "pathFragmentId": 208
  }, {
    "id": 85,
    "pathFragmentId": 209
  }, {
    "id": 86,
    "pathFragmentId": 210
  }, {
    "id": 87,
    "pathFragmentId": 211
  }, {
    "id": 88,
    "pathFragmentId": 212
  }, {
    "id": 89,
    "pathFragmentId": 213
  }, {
    "id": 90,
    "pathFragmentId": 214
  }, {
    "id": 91,
    "pathFragmentId": 215
  }, {
    "id": 92,
    "pathFragmentId": 216
  }, {
    "id": 93,
    "pathFragmentId": 217
  }, {
    "id": 94,
    "pathFragmentId": 218
  }, {
    "id": 95,
    "pathFragmentId": 219
  }, {
    "id": 96,
    "pathFragmentId": 220
  }, {
    "id": 97,
    "pathFragmentId": 221
  }, {
    "id": 98,
    "pathFragmentId": 222
  }, {
    "id": 99,
    "pathFragmentId": 223
  }, {
    "id": 100,
    "pathFragmentId": 224
  }, {
    "id": 101,
    "pathFragmentId": 225
  }, {
    "id": 102,
    "pathFragmentId": 226
  }, {
    "id": 103,
    "pathFragmentId": 227
  }, {
    "id": 104,
    "pathFragmentId": 228
  }, {
    "id": 105,
    "pathFragmentId": 229
  }, {
    "id": 106,
    "pathFragmentId": 230
  }, {
    "id": 107,
    "pathFragmentId": 231
  }, {
    "id": 108,
    "pathFragmentId": 232
  }, {
    "id": 109,
    "pathFragmentId": 233
  }, {
    "id": 110,
    "pathFragmentId": 234
  }, {
    "id": 111,
    "pathFragmentId": 235
  }, {
    "id": 112,
    "pathFragmentId": 236
  }, {
    "id": 113,
    "pathFragmentId": 237
  }, {
    "id": 114,
    "pathFragmentId": 238
  }, {
    "id": 115,
    "pathFragmentId": 239
  }, {
    "id": 116,
    "pathFragmentId": 240
  }, {
    "id": 117,
    "pathFragmentId": 241
  }, {
    "id": 118,
    "pathFragmentId": 242
  }, {
    "id": 119,
    "pathFragmentId": 243
  }, {
    "id": 120,
    "pathFragmentId": 244
  }, {
    "id": 121,
    "pathFragmentId": 245
  }, {
    "id": 122,
    "pathFragmentId": 246
  }, {
    "id": 123,
    "pathFragmentId": 247
  }, {
    "id": 124,
    "pathFragmentId": 248
  }, {
    "id": 125,
    "pathFragmentId": 249
  }, {
    "id": 126,
    "pathFragmentId": 250
  }, {
    "id": 127,
    "pathFragmentId": 251
  }, {
    "id": 128,
    "pathFragmentId": 252
  }, {
    "id": 129,
    "pathFragmentId": 253
  }, {
    "id": 130,
    "pathFragmentId": 254
  }, {
    "id": 131,
    "pathFragmentId": 255
  }, {
    "id": 132,
    "pathFragmentId": 256
  }, {
    "id": 133,
    "pathFragmentId": 257
  }, {
    "id": 134,
    "pathFragmentId": 259
  }, {
    "id": 135,
    "pathFragmentId": 260
  }, {
    "id": 136,
    "pathFragmentId": 261
  }, {
    "id": 137,
    "pathFragmentId": 262
  }, {
    "id": 138,
    "pathFragmentId": 263
  }, {
    "id": 139,
    "pathFragmentId": 265
  }, {
    "id": 140,
    "pathFragmentId": 266
  }, {
    "id": 141,
    "pathFragmentId": 267
  }, {
    "id": 142,
    "pathFragmentId": 268
  }, {
    "id": 143,
    "pathFragmentId": 269
  }, {
    "id": 144,
    "pathFragmentId": 270
  }, {
    "id": 145,
    "pathFragmentId": 271
  }, {
    "id": 146,
    "pathFragmentId": 272
  }, {
    "id": 147,
    "pathFragmentId": 273
  }, {
    "id": 148,
    "pathFragmentId": 274
  }, {
    "id": 149,
    "pathFragmentId": 275
  }, {
    "id": 150,
    "pathFragmentId": 276
  }, {
    "id": 151,
    "pathFragmentId": 277
  }, {
    "id": 152,
    "pathFragmentId": 278
  }, {
    "id": 153,
    "pathFragmentId": 279
  }, {
    "id": 154,
    "pathFragmentId": 280
  }, {
    "id": 155,
    "pathFragmentId": 281
  }, {
    "id": 156,
    "pathFragmentId": 282
  }, {
    "id": 157,
    "pathFragmentId": 283
  }, {
    "id": 158,
    "pathFragmentId": 284
  }, {
    "id": 159,
    "pathFragmentId": 285
  }, {
    "id": 160,
    "pathFragmentId": 286
  }, {
    "id": 161,
    "pathFragmentId": 287
  }, {
    "id": 162,
    "pathFragmentId": 288
  }, {
    "id": 163,
    "pathFragmentId": 289
  }, {
    "id": 164,
    "pathFragmentId": 290
  }, {
    "id": 165,
    "pathFragmentId": 291
  }, {
    "id": 166,
    "pathFragmentId": 292
  }, {
    "id": 167,
    "pathFragmentId": 293
  }, {
    "id": 168,
    "pathFragmentId": 294
  }, {
    "id": 169,
    "pathFragmentId": 296
  }, {
    "id": 170,
    "pathFragmentId": 297
  }, {
    "id": 171,
    "pathFragmentId": 298
  }, {
    "id": 172,
    "pathFragmentId": 299
  }, {
    "id": 173,
    "pathFragmentId": 300
  }, {
    "id": 174,
    "pathFragmentId": 301
  }, {
    "id": 175,
    "pathFragmentId": 302
  }, {
    "id": 176,
    "pathFragmentId": 303
  }, {
    "id": 177,
    "pathFragmentId": 304
  }, {
    "id": 178,
    "pathFragmentId": 305
  }, {
    "id": 179,
    "pathFragmentId": 306
  }, {
    "id": 180,
    "pathFragmentId": 307
  }, {
    "id": 181,
    "pathFragmentId": 313
  }, {
    "id": 182,
    "pathFragmentId": 314
  }, {
    "id": 183,
    "pathFragmentId": 315
  }, {
    "id": 184,
    "pathFragmentId": 316
  }, {
    "id": 185,
    "pathFragmentId": 317
  }, {
    "id": 186,
    "pathFragmentId": 318
  }, {
    "id": 187,
    "pathFragmentId": 319
  }, {
    "id": 188,
    "pathFragmentId": 320
  }, {
    "id": 189,
    "pathFragmentId": 323
  }, {
    "id": 190,
    "pathFragmentId": 324
  }, {
    "id": 191,
    "pathFragmentId": 325
  }, {
    "id": 192,
    "pathFragmentId": 327
  }, {
    "id": 193,
    "pathFragmentId": 328
  }, {
    "id": 194,
    "pathFragmentId": 339
  }, {
    "id": 195,
    "pathFragmentId": 349
  }, {
    "id": 196,
    "pathFragmentId": 353
  }, {
    "id": 197,
    "pathFragmentId": 358
  }, {
    "id": 198,
    "pathFragmentId": 362
  }, {
    "id": 199,
    "pathFragmentId": 367
  }, {
    "id": 200,
    "pathFragmentId": 370
  }, {
    "id": 201,
    "pathFragmentId": 374
  }, {
    "id": 202,
    "pathFragmentId": 379
  }, {
    "id": 203,
    "pathFragmentId": 383
  }, {
    "id": 204,
    "pathFragmentId": 388
  }, {
    "id": 205,
    "pathFragmentId": 393
  }, {
    "id": 206,
    "pathFragmentId": 397
  }, {
    "id": 207,
    "pathFragmentId": 398
  }, {
    "id": 208,
    "pathFragmentId": 401
  }, {
    "id": 209,
    "pathFragmentId": 404
  }, {
    "id": 210,
    "pathFragmentId": 405
  }, {
    "id": 211,
    "pathFragmentId": 406
  }, {
    "id": 212,
    "pathFragmentId": 407
  }, {
    "id": 213,
    "pathFragmentId": 408
  }, {
    "id": 214,
    "pathFragmentId": 409
  }, {
    "id": 215,
    "pathFragmentId": 410
  }, {
    "id": 216,
    "pathFragmentId": 411
  }, {
    "id": 217,
    "pathFragmentId": 412
  }, {
    "id": 218,
    "pathFragmentId": 413
  }, {
    "id": 219,
    "pathFragmentId": 414
  }, {
    "id": 220,
    "pathFragmentId": 415
  }, {
    "id": 221,
    "pathFragmentId": 416
  }, {
    "id": 222,
    "pathFragmentId": 417
  }, {
    "id": 223,
    "pathFragmentId": 418
  }, {
    "id": 224,
    "pathFragmentId": 419
  }, {
    "id": 225,
    "pathFragmentId": 420
  }, {
    "id": 226,
    "pathFragmentId": 421
  }, {
    "id": 227,
    "pathFragmentId": 422
  }, {
    "id": 228,
    "pathFragmentId": 423
  }, {
    "id": 229,
    "pathFragmentId": 424
  }, {
    "id": 230,
    "pathFragmentId": 425
  }, {
    "id": 231,
    "pathFragmentId": 426
  }, {
    "id": 232,
    "pathFragmentId": 427
  }, {
    "id": 233,
    "pathFragmentId": 428
  }, {
    "id": 234,
    "pathFragmentId": 429
  }, {
    "id": 235,
    "pathFragmentId": 430
  }, {
    "id": 236,
    "pathFragmentId": 431
  }, {
    "id": 237,
    "pathFragmentId": 433
  }, {
    "id": 238,
    "pathFragmentId": 434
  }, {
    "id": 239,
    "pathFragmentId": 436
  }, {
    "id": 240,
    "pathFragmentId": 437
  }, {
    "id": 241,
    "pathFragmentId": 438
  }, {
    "id": 242,
    "pathFragmentId": 440
  }, {
    "id": 243,
    "pathFragmentId": 441
  }, {
    "id": 244,
    "pathFragmentId": 442
  }, {
    "id": 245,
    "pathFragmentId": 444
  }, {
    "id": 246,
    "pathFragmentId": 446
  }, {
    "id": 247,
    "pathFragmentId": 447
  }, {
    "id": 248,
    "pathFragmentId": 448
  }, {
    "id": 249,
    "pathFragmentId": 450
  }, {
    "id": 250,
    "pathFragmentId": 451
  }, {
    "id": 251,
    "pathFragmentId": 452
  }, {
    "id": 252,
    "pathFragmentId": 453
  }, {
    "id": 253,
    "pathFragmentId": 455
  }, {
    "id": 254,
    "pathFragmentId": 456
  }, {
    "id": 255,
    "pathFragmentId": 457
  }, {
    "id": 256,
    "pathFragmentId": 458
  }, {
    "id": 257,
    "pathFragmentId": 459
  }, {
    "id": 258,
    "pathFragmentId": 460
  }, {
    "id": 259,
    "pathFragmentId": 462
  }, {
    "id": 260,
    "pathFragmentId": 463
  }, {
    "id": 261,
    "pathFragmentId": 465
  }, {
    "id": 262,
    "pathFragmentId": 466
  }, {
    "id": 263,
    "pathFragmentId": 467
  }, {
    "id": 264,
    "pathFragmentId": 468
  }, {
    "id": 265,
    "pathFragmentId": 470
  }, {
    "id": 266,
    "pathFragmentId": 471
  }, {
    "id": 267,
    "pathFragmentId": 472
  }, {
    "id": 268,
    "pathFragmentId": 473
  }, {
    "id": 269,
    "pathFragmentId": 474
  }, {
    "id": 270,
    "pathFragmentId": 475
  }, {
    "id": 271,
    "pathFragmentId": 476
  }, {
    "id": 272,
    "pathFragmentId": 477
  }, {
    "id": 273,
    "pathFragmentId": 478
  }, {
    "id": 274,
    "pathFragmentId": 479
  }, {
    "id": 275,
    "pathFragmentId": 480
  }, {
    "id": 276,
    "pathFragmentId": 481
  }, {
    "id": 277,
    "pathFragmentId": 482
  }, {
    "id": 278,
    "pathFragmentId": 483
  }, {
    "id": 279,
    "pathFragmentId": 484
  }, {
    "id": 280,
    "pathFragmentId": 485
  }, {
    "id": 281,
    "pathFragmentId": 486
  }, {
    "id": 282,
    "pathFragmentId": 487
  }, {
    "id": 283,
    "pathFragmentId": 488
  }, {
    "id": 284,
    "pathFragmentId": 489
  }, {
    "id": 285,
    "pathFragmentId": 490
  }, {
    "id": 286,
    "pathFragmentId": 491
  }, {
    "id": 287,
    "pathFragmentId": 492
  }, {
    "id": 288,
    "pathFragmentId": 493
  }, {
    "id": 289,
    "pathFragmentId": 494
  }, {
    "id": 290,
    "pathFragmentId": 495
  }, {
    "id": 291,
    "pathFragmentId": 496
  }, {
    "id": 292,
    "pathFragmentId": 497
  }, {
    "id": 293,
    "pathFragmentId": 498
  }, {
    "id": 294,
    "pathFragmentId": 499
  }, {
    "id": 295,
    "pathFragmentId": 500
  }, {
    "id": 296,
    "pathFragmentId": 501
  }, {
    "id": 297,
    "pathFragmentId": 502
  }, {
    "id": 298,
    "pathFragmentId": 503
  }, {
    "id": 299,
    "pathFragmentId": 504
  }, {
    "id": 300,
    "pathFragmentId": 505
  }, {
    "id": 301,
    "pathFragmentId": 506
  }, {
    "id": 302,
    "pathFragmentId": 507
  }, {
    "id": 303,
    "pathFragmentId": 508
  }, {
    "id": 304,
    "pathFragmentId": 509
  }, {
    "id": 305,
    "pathFragmentId": 510
  }, {
    "id": 306,
    "pathFragmentId": 511
  }, {
    "id": 307,
    "pathFragmentId": 512
  }, {
    "id": 308,
    "pathFragmentId": 513
  }, {
    "id": 309,
    "pathFragmentId": 514
  }, {
    "id": 310,
    "pathFragmentId": 515
  }, {
    "id": 311,
    "pathFragmentId": 517
  }, {
    "id": 312,
    "pathFragmentId": 518
  }, {
    "id": 313,
    "pathFragmentId": 519
  }, {
    "id": 314,
    "pathFragmentId": 520
  }, {
    "id": 315,
    "pathFragmentId": 522
  }, {
    "id": 316,
    "pathFragmentId": 523
  }, {
    "id": 317,
    "pathFragmentId": 524
  }, {
    "id": 318,
    "pathFragmentId": 525
  }, {
    "id": 319,
    "pathFragmentId": 526
  }, {
    "id": 320,
    "pathFragmentId": 529
  }, {
    "id": 321,
    "pathFragmentId": 533
  }, {
    "id": 322,
    "pathFragmentId": 534
  }, {
    "id": 323,
    "pathFragmentId": 543
  }, {
    "id": 324,
    "pathFragmentId": 544
  }, {
    "id": 325,
    "pathFragmentId": 545
  }, {
    "id": 326,
    "pathFragmentId": 546
  }, {
    "id": 327,
    "pathFragmentId": 547
  }, {
    "id": 328,
    "pathFragmentId": 548
  }, {
    "id": 329,
    "pathFragmentId": 549
  }, {
    "id": 330,
    "pathFragmentId": 550
  }, {
    "id": 331,
    "pathFragmentId": 551
  }, {
    "id": 332,
    "pathFragmentId": 552
  }, {
    "id": 333,
    "pathFragmentId": 553
  }, {
    "id": 334,
    "pathFragmentId": 555
  }, {
    "id": 335,
    "pathFragmentId": 557
  }, {
    "id": 336,
    "pathFragmentId": 558
  }, {
    "id": 337,
    "pathFragmentId": 559
  }, {
    "id": 338,
    "pathFragmentId": 560
  }, {
    "id": 339,
    "pathFragmentId": 561
  }, {
    "id": 340,
    "pathFragmentId": 562
  }, {
    "id": 341,
    "pathFragmentId": 563
  }, {
    "id": 342,
    "pathFragmentId": 564
  }, {
    "id": 343,
    "pathFragmentId": 565
  }, {
    "id": 344,
    "pathFragmentId": 566
  }, {
    "id": 345,
    "pathFragmentId": 567
  }, {
    "id": 346,
    "pathFragmentId": 568
  }, {
    "id": 347,
    "pathFragmentId": 569
  }, {
    "id": 348,
    "pathFragmentId": 570
  }, {
    "id": 349,
    "pathFragmentId": 571
  }, {
    "id": 350,
    "pathFragmentId": 572
  }, {
    "id": 351,
    "pathFragmentId": 573
  }, {
    "id": 352,
    "pathFragmentId": 575
  }, {
    "id": 353,
    "pathFragmentId": 576
  }, {
    "id": 354,
    "pathFragmentId": 579
  }, {
    "id": 355,
    "pathFragmentId": 580
  }, {
    "id": 356,
    "pathFragmentId": 583
  }, {
    "id": 357,
    "pathFragmentId": 584
  }, {
    "id": 358,
    "pathFragmentId": 586
  }, {
    "id": 359,
    "pathFragmentId": 587
  }, {
    "id": 360,
    "pathFragmentId": 588
  }, {
    "id": 361,
    "pathFragmentId": 589
  }, {
    "id": 362,
    "pathFragmentId": 591
  }, {
    "id": 363,
    "pathFragmentId": 593
  }, {
    "id": 364,
    "pathFragmentId": 595
  }, {
    "id": 365,
    "pathFragmentId": 597
  }, {
    "id": 366,
    "pathFragmentId": 599
  }, {
    "id": 367,
    "pathFragmentId": 600
  }, {
    "id": 368,
    "pathFragmentId": 601
  }, {
    "id": 369,
    "pathFragmentId": 602
  }, {
    "id": 370,
    "pathFragmentId": 603
  }, {
    "id": 371,
    "pathFragmentId": 604
  }, {
    "id": 372,
    "pathFragmentId": 605
  }, {
    "id": 373,
    "pathFragmentId": 606
  }, {
    "id": 374,
    "pathFragmentId": 607
  }, {
    "id": 375,
    "pathFragmentId": 608
  }, {
    "id": 376,
    "pathFragmentId": 610
  }, {
    "id": 377,
    "pathFragmentId": 611
  }, {
    "id": 378,
    "pathFragmentId": 612
  }, {
    "id": 379,
    "pathFragmentId": 613
  }, {
    "id": 380,
    "pathFragmentId": 614
  }, {
    "id": 381,
    "pathFragmentId": 615
  }, {
    "id": 382,
    "pathFragmentId": 616
  }, {
    "id": 383,
    "pathFragmentId": 617
  }, {
    "id": 384,
    "pathFragmentId": 618
  }, {
    "id": 385,
    "pathFragmentId": 619
  }, {
    "id": 386,
    "pathFragmentId": 620
  }, {
    "id": 387,
    "pathFragmentId": 621
  }, {
    "id": 388,
    "pathFragmentId": 622
  }, {
    "id": 389,
    "pathFragmentId": 623
  }, {
    "id": 390,
    "pathFragmentId": 624
  }, {
    "id": 391,
    "pathFragmentId": 625
  }, {
    "id": 392,
    "pathFragmentId": 626
  }, {
    "id": 393,
    "pathFragmentId": 627
  }, {
    "id": 394,
    "pathFragmentId": 628
  }, {
    "id": 395,
    "pathFragmentId": 630
  }, {
    "id": 396,
    "pathFragmentId": 631
  }, {
    "id": 397,
    "pathFragmentId": 632
  }, {
    "id": 398,
    "pathFragmentId": 634
  }, {
    "id": 399,
    "pathFragmentId": 636
  }, {
    "id": 400,
    "pathFragmentId": 637
  }, {
    "id": 401,
    "pathFragmentId": 639
  }, {
    "id": 402,
    "pathFragmentId": 640
  }, {
    "id": 403,
    "pathFragmentId": 642
  }, {
    "id": 404,
    "pathFragmentId": 643
  }, {
    "id": 405,
    "pathFragmentId": 646
  }, {
    "id": 406,
    "pathFragmentId": 647
  }, {
    "id": 407,
    "pathFragmentId": 648
  }, {
    "id": 408,
    "pathFragmentId": 649
  }, {
    "id": 409,
    "pathFragmentId": 651
  }, {
    "id": 410,
    "pathFragmentId": 652
  }, {
    "id": 411,
    "pathFragmentId": 654
  }, {
    "id": 412,
    "pathFragmentId": 655
  }, {
    "id": 413,
    "pathFragmentId": 656
  }, {
    "id": 414,
    "pathFragmentId": 658
  }, {
    "id": 415,
    "pathFragmentId": 659
  }, {
    "id": 416,
    "pathFragmentId": 660
  }, {
    "id": 417,
    "pathFragmentId": 661
  }, {
    "id": 418,
    "pathFragmentId": 662
  }, {
    "id": 419,
    "pathFragmentId": 663
  }, {
    "id": 420,
    "pathFragmentId": 664
  }, {
    "id": 421,
    "pathFragmentId": 665
  }, {
    "id": 422,
    "pathFragmentId": 666
  }, {
    "id": 423,
    "pathFragmentId": 667
  }, {
    "id": 424,
    "pathFragmentId": 669
  }, {
    "id": 425,
    "pathFragmentId": 670
  }, {
    "id": 426,
    "pathFragmentId": 672
  }, {
    "id": 427,
    "pathFragmentId": 673
  }, {
    "id": 428,
    "pathFragmentId": 674
  }, {
    "id": 429,
    "pathFragmentId": 676
  }, {
    "id": 430,
    "pathFragmentId": 678
  }, {
    "id": 431,
    "pathFragmentId": 680
  }, {
    "id": 432,
    "pathFragmentId": 682
  }, {
    "id": 433,
    "pathFragmentId": 683
  }, {
    "id": 434,
    "pathFragmentId": 684
  }, {
    "id": 435,
    "pathFragmentId": 686
  }, {
    "id": 436,
    "pathFragmentId": 687
  }, {
    "id": 437,
    "pathFragmentId": 688
  }, {
    "id": 438,
    "pathFragmentId": 689
  }, {
    "id": 439,
    "pathFragmentId": 690
  }, {
    "id": 440,
    "pathFragmentId": 691
  }, {
    "id": 441,
    "pathFragmentId": 692
  }, {
    "id": 442,
    "pathFragmentId": 693
  }, {
    "id": 443,
    "pathFragmentId": 694
  }, {
    "id": 444,
    "pathFragmentId": 695
  }, {
    "id": 445,
    "pathFragmentId": 697
  }, {
    "id": 446,
    "pathFragmentId": 698
  }, {
    "id": 447,
    "pathFragmentId": 700
  }, {
    "id": 448,
    "pathFragmentId": 701
  }, {
    "id": 449,
    "pathFragmentId": 706
  }, {
    "id": 450,
    "pathFragmentId": 707
  }, {
    "id": 451,
    "pathFragmentId": 709
  }, {
    "id": 452,
    "pathFragmentId": 710
  }, {
    "id": 453,
    "pathFragmentId": 711
  }, {
    "id": 454,
    "pathFragmentId": 713
  }, {
    "id": 455,
    "pathFragmentId": 715
  }, {
    "id": 456,
    "pathFragmentId": 717
  }, {
    "id": 457,
    "pathFragmentId": 719
  }, {
    "id": 458,
    "pathFragmentId": 721
  }, {
    "id": 459,
    "pathFragmentId": 722
  }, {
    "id": 460,
    "pathFragmentId": 734
  }, {
    "id": 461,
    "pathFragmentId": 746
  }, {
    "id": 462,
    "pathFragmentId": 748
  }, {
    "id": 463,
    "pathFragmentId": 753
  }, {
    "id": 464,
    "pathFragmentId": 757
  }, {
    "id": 465,
    "pathFragmentId": 758
  }, {
    "id": 466,
    "pathFragmentId": 762
  }, {
    "id": 467,
    "pathFragmentId": 767
  }, {
    "id": 468,
    "pathFragmentId": 779
  }, {
    "id": 469,
    "pathFragmentId": 789
  }, {
    "id": 470,
    "pathFragmentId": 793
  }, {
    "id": 471,
    "pathFragmentId": 797
  }, {
    "id": 472,
    "pathFragmentId": 799
  }, {
    "id": 473,
    "pathFragmentId": 800
  }, {
    "id": 474,
    "pathFragmentId": 801
  }, {
    "id": 475,
    "pathFragmentId": 802
  }, {
    "id": 476,
    "pathFragmentId": 803
  }, {
    "id": 477,
    "pathFragmentId": 804
  }, {
    "id": 478,
    "pathFragmentId": 805
  }, {
    "id": 479,
    "pathFragmentId": 806
  }, {
    "id": 480,
    "pathFragmentId": 808
  }, {
    "id": 481,
    "pathFragmentId": 810
  }, {
    "id": 482,
    "pathFragmentId": 811
  }, {
    "id": 483,
    "pathFragmentId": 812
  }, {
    "id": 484,
    "pathFragmentId": 814
  }, {
    "id": 485,
    "pathFragmentId": 815
  }, {
    "id": 486,
    "pathFragmentId": 816
  }, {
    "id": 487,
    "pathFragmentId": 817
  }, {
    "id": 488,
    "pathFragmentId": 818
  }, {
    "id": 489,
    "pathFragmentId": 819
  }, {
    "id": 490,
    "pathFragmentId": 820
  }, {
    "id": 491,
    "pathFragmentId": 821
  }, {
    "id": 492,
    "pathFragmentId": 822
  }, {
    "id": 493,
    "pathFragmentId": 823
  }, {
    "id": 494,
    "pathFragmentId": 824
  }, {
    "id": 495,
    "pathFragmentId": 828
  }, {
    "id": 496,
    "pathFragmentId": 829
  }, {
    "id": 497,
    "pathFragmentId": 833
  }, {
    "id": 498,
    "pathFragmentId": 837
  }, {
    "id": 499,
    "pathFragmentId": 840
  }, {
    "id": 500,
    "pathFragmentId": 842
  }, {
    "id": 501,
    "pathFragmentId": 845
  }, {
    "id": 502,
    "pathFragmentId": 846
  }, {
    "id": 503,
    "pathFragmentId": 851
  }, {
    "id": 504,
    "pathFragmentId": 852
  }, {
    "id": 505,
    "pathFragmentId": 856
  }, {
    "id": 506,
    "pathFragmentId": 860
  }, {
    "id": 507,
    "pathFragmentId": 861
  }, {
    "id": 508,
    "pathFragmentId": 862
  }, {
    "id": 509,
    "pathFragmentId": 866
  }, {
    "id": 510,
    "pathFragmentId": 867
  }, {
    "id": 511,
    "pathFragmentId": 872
  }, {
    "id": 512,
    "pathFragmentId": 873
  }, {
    "id": 513,
    "pathFragmentId": 874
  }, {
    "id": 514,
    "pathFragmentId": 875
  }, {
    "id": 515,
    "pathFragmentId": 876
  }, {
    "id": 516,
    "pathFragmentId": 879
  }, {
    "id": 517,
    "pathFragmentId": 880
  }, {
    "id": 518,
    "pathFragmentId": 881
  }, {
    "id": 519,
    "pathFragmentId": 882
  }, {
    "id": 520,
    "pathFragmentId": 883
  }, {
    "id": 521,
    "pathFragmentId": 884
  }, {
    "id": 522,
    "pathFragmentId": 885
  }, {
    "id": 523,
    "pathFragmentId": 886
  }, {
    "id": 524,
    "pathFragmentId": 887
  }, {
    "id": 525,
    "pathFragmentId": 888
  }, {
    "id": 526,
    "pathFragmentId": 889
  }, {
    "id": 527,
    "pathFragmentId": 890
  }, {
    "id": 528,
    "pathFragmentId": 891
  }, {
    "id": 529,
    "pathFragmentId": 892
  }, {
    "id": 530,
    "pathFragmentId": 893
  }, {
    "id": 531,
    "pathFragmentId": 894
  }, {
    "id": 532,
    "pathFragmentId": 895
  }, {
    "id": 533,
    "pathFragmentId": 896
  }, {
    "id": 534,
    "pathFragmentId": 897
  }, {
    "id": 535,
    "pathFragmentId": 898
  }, {
    "id": 536,
    "pathFragmentId": 899
  }, {
    "id": 537,
    "pathFragmentId": 900
  }, {
    "id": 538,
    "pathFragmentId": 901
  }, {
    "id": 539,
    "pathFragmentId": 902
  }, {
    "id": 540,
    "pathFragmentId": 903
  }, {
    "id": 541,
    "pathFragmentId": 904
  }, {
    "id": 542,
    "pathFragmentId": 905
  }, {
    "id": 543,
    "pathFragmentId": 906
  }, {
    "id": 544,
    "pathFragmentId": 907
  }, {
    "id": 545,
    "pathFragmentId": 908
  }, {
    "id": 546,
    "pathFragmentId": 909
  }, {
    "id": 547,
    "pathFragmentId": 910
  }, {
    "id": 548,
    "pathFragmentId": 911
  }, {
    "id": 549,
    "pathFragmentId": 913
  }, {
    "id": 550,
    "pathFragmentId": 915
  }, {
    "id": 551,
    "pathFragmentId": 916
  }, {
    "id": 552,
    "pathFragmentId": 917
  }, {
    "id": 553,
    "pathFragmentId": 918
  }, {
    "id": 554,
    "pathFragmentId": 920
  }, {
    "id": 555,
    "pathFragmentId": 921
  }, {
    "id": 556,
    "pathFragmentId": 923
  }, {
    "id": 557,
    "pathFragmentId": 925
  }, {
    "id": 558,
    "pathFragmentId": 926
  }, {
    "id": 559,
    "pathFragmentId": 927
  }, {
    "id": 560,
    "pathFragmentId": 929
  }, {
    "id": 561,
    "pathFragmentId": 930
  }, {
    "id": 562,
    "pathFragmentId": 931
  }, {
    "id": 563,
    "pathFragmentId": 933
  }, {
    "id": 564,
    "pathFragmentId": 934
  }, {
    "id": 565,
    "pathFragmentId": 935
  }, {
    "id": 566,
    "pathFragmentId": 936
  }, {
    "id": 567,
    "pathFragmentId": 937
  }, {
    "id": 568,
    "pathFragmentId": 938
  }, {
    "id": 569,
    "pathFragmentId": 940
  }, {
    "id": 570,
    "pathFragmentId": 941
  }, {
    "id": 571,
    "pathFragmentId": 943
  }, {
    "id": 572,
    "pathFragmentId": 944
  }, {
    "id": 573,
    "pathFragmentId": 945
  }, {
    "id": 574,
    "pathFragmentId": 947
  }, {
    "id": 575,
    "pathFragmentId": 948
  }, {
    "id": 576,
    "pathFragmentId": 950
  }, {
    "id": 577,
    "pathFragmentId": 951
  }, {
    "id": 578,
    "pathFragmentId": 952
  }, {
    "id": 579,
    "pathFragmentId": 953
  }, {
    "id": 580,
    "pathFragmentId": 954
  }, {
    "id": 581,
    "pathFragmentId": 955
  }, {
    "id": 582,
    "pathFragmentId": 956
  }, {
    "id": 583,
    "pathFragmentId": 957
  }, {
    "id": 584,
    "pathFragmentId": 958
  }, {
    "id": 585,
    "pathFragmentId": 959
  }, {
    "id": 586,
    "pathFragmentId": 960
  }, {
    "id": 587,
    "pathFragmentId": 961
  }, {
    "id": 588,
    "pathFragmentId": 962
  }, {
    "id": 589,
    "pathFragmentId": 963
  }, {
    "id": 590,
    "pathFragmentId": 964
  }, {
    "id": 591,
    "pathFragmentId": 965
  }, {
    "id": 592,
    "pathFragmentId": 966
  }, {
    "id": 593,
    "pathFragmentId": 967
  }, {
    "id": 594,
    "pathFragmentId": 968
  }, {
    "id": 595,
    "pathFragmentId": 969
  }, {
    "id": 596,
    "pathFragmentId": 970
  }, {
    "id": 597,
    "pathFragmentId": 971
  }, {
    "id": 598,
    "pathFragmentId": 972
  }, {
    "id": 599,
    "pathFragmentId": 973
  }, {
    "id": 600,
    "pathFragmentId": 974
  }, {
    "id": 601,
    "pathFragmentId": 975
  }, {
    "id": 602,
    "pathFragmentId": 976
  }, {
    "id": 603,
    "pathFragmentId": 977
  }, {
    "id": 604,
    "pathFragmentId": 978
  }, {
    "id": 605,
    "pathFragmentId": 979
  }, {
    "id": 606,
    "pathFragmentId": 980
  }, {
    "id": 607,
    "pathFragmentId": 981
  }, {
    "id": 608,
    "pathFragmentId": 982
  }, {
    "id": 609,
    "pathFragmentId": 983
  }, {
    "id": 610,
    "pathFragmentId": 984
  }, {
    "id": 611,
    "pathFragmentId": 985
  }, {
    "id": 612,
    "pathFragmentId": 986
  }, {
    "id": 613,
    "pathFragmentId": 987
  }, {
    "id": 614,
    "pathFragmentId": 988
  }, {
    "id": 615,
    "pathFragmentId": 989
  }, {
    "id": 616,
    "pathFragmentId": 990
  }, {
    "id": 617,
    "pathFragmentId": 991
  }, {
    "id": 618,
    "pathFragmentId": 992
  }, {
    "id": 619,
    "pathFragmentId": 994
  }, {
    "id": 620,
    "pathFragmentId": 995
  }, {
    "id": 621,
    "pathFragmentId": 996
  }, {
    "id": 622,
    "pathFragmentId": 997
  }, {
    "id": 623,
    "pathFragmentId": 999
  }, {
    "id": 624,
    "pathFragmentId": 1000
  }, {
    "id": 625,
    "pathFragmentId": 1001
  }, {
    "id": 626,
    "pathFragmentId": 1002
  }, {
    "id": 627,
    "pathFragmentId": 1003
  }, {
    "id": 628,
    "pathFragmentId": 1004
  }, {
    "id": 629,
    "pathFragmentId": 1006
  }, {
    "id": 630,
    "pathFragmentId": 1007
  }, {
    "id": 631,
    "pathFragmentId": 1011
  }, {
    "id": 632,
    "pathFragmentId": 1012
  }, {
    "id": 633,
    "pathFragmentId": 1013
  }, {
    "id": 634,
    "pathFragmentId": 1014
  }, {
    "id": 635,
    "pathFragmentId": 1015
  }, {
    "id": 636,
    "pathFragmentId": 1016
  }, {
    "id": 637,
    "pathFragmentId": 1017
  }, {
    "id": 638,
    "pathFragmentId": 1018
  }, {
    "id": 639,
    "pathFragmentId": 1019
  }, {
    "id": 640,
    "pathFragmentId": 1020
  }, {
    "id": 641,
    "pathFragmentId": 1021
  }, {
    "id": 642,
    "pathFragmentId": 1022
  }, {
    "id": 643,
    "pathFragmentId": 1023
  }, {
    "id": 644,
    "pathFragmentId": 1024
  }, {
    "id": 645,
    "pathFragmentId": 1025
  }, {
    "id": 646,
    "pathFragmentId": 1026
  }, {
    "id": 647,
    "pathFragmentId": 1027
  }, {
    "id": 648,
    "pathFragmentId": 1028
  }, {
    "id": 649,
    "pathFragmentId": 1029
  }, {
    "id": 650,
    "pathFragmentId": 1030
  }, {
    "id": 651,
    "pathFragmentId": 1031
  }, {
    "id": 652,
    "pathFragmentId": 1032
  }, {
    "id": 653,
    "pathFragmentId": 1033
  }, {
    "id": 654,
    "pathFragmentId": 1034
  }, {
    "id": 655,
    "pathFragmentId": 1035
  }, {
    "id": 656,
    "pathFragmentId": 1036
  }, {
    "id": 657,
    "pathFragmentId": 1037
  }, {
    "id": 658,
    "pathFragmentId": 1038
  }, {
    "id": 659,
    "pathFragmentId": 1039
  }, {
    "id": 660,
    "pathFragmentId": 1040
  }, {
    "id": 661,
    "pathFragmentId": 1041
  }, {
    "id": 662,
    "pathFragmentId": 1042
  }, {
    "id": 663,
    "pathFragmentId": 1043
  }, {
    "id": 664,
    "pathFragmentId": 1044
  }, {
    "id": 665,
    "pathFragmentId": 1045
  }, {
    "id": 666,
    "pathFragmentId": 1046
  }, {
    "id": 667,
    "pathFragmentId": 1048
  }, {
    "id": 668,
    "pathFragmentId": 1049
  }, {
    "id": 669,
    "pathFragmentId": 1051
  }, {
    "id": 670,
    "pathFragmentId": 1052
  }, {
    "id": 671,
    "pathFragmentId": 1053
  }, {
    "id": 672,
    "pathFragmentId": 1055
  }, {
    "id": 673,
    "pathFragmentId": 1056
  }, {
    "id": 674,
    "pathFragmentId": 1057
  }, {
    "id": 675,
    "pathFragmentId": 1059
  }, {
    "id": 676,
    "pathFragmentId": 1060
  }, {
    "id": 677,
    "pathFragmentId": 1061
  }, {
    "id": 678,
    "pathFragmentId": 1062
  }, {
    "id": 679,
    "pathFragmentId": 1063
  }, {
    "id": 680,
    "pathFragmentId": 1064
  }, {
    "id": 681,
    "pathFragmentId": 1065
  }, {
    "id": 682,
    "pathFragmentId": 1067
  }, {
    "id": 683,
    "pathFragmentId": 1068
  }, {
    "id": 684,
    "pathFragmentId": 1069
  }, {
    "id": 685,
    "pathFragmentId": 1071
  }, {
    "id": 686,
    "pathFragmentId": 1072
  }, {
    "id": 687,
    "pathFragmentId": 1073
  }, {
    "id": 688,
    "pathFragmentId": 1074
  }, {
    "id": 689,
    "pathFragmentId": 1075
  }, {
    "id": 690,
    "pathFragmentId": 1077
  }, {
    "id": 691,
    "pathFragmentId": 1078
  }, {
    "id": 692,
    "pathFragmentId": 1079
  }, {
    "id": 693,
    "pathFragmentId": 1081
  }, {
    "id": 694,
    "pathFragmentId": 1084
  }, {
    "id": 695,
    "pathFragmentId": 1096
  }, {
    "id": 696,
    "pathFragmentId": 1098
  }, {
    "id": 697,
    "pathFragmentId": 1099
  }, {
    "id": 698,
    "pathFragmentId": 1100
  }, {
    "id": 699,
    "pathFragmentId": 1101
  }, {
    "id": 700,
    "pathFragmentId": 1102
  }, {
    "id": 701,
    "pathFragmentId": 1103
  }, {
    "id": 702,
    "pathFragmentId": 1104
  }, {
    "id": 703,
    "pathFragmentId": 1105
  }, {
    "id": 704,
    "pathFragmentId": 1107
  }, {
    "id": 705,
    "pathFragmentId": 1108
  }, {
    "id": 706,
    "pathFragmentId": 1109
  }, {
    "id": 707,
    "pathFragmentId": 1110
  }, {
    "id": 708,
    "pathFragmentId": 1113
  }, {
    "id": 709,
    "pathFragmentId": 1114
  }, {
    "id": 710,
    "pathFragmentId": 1115
  }, {
    "id": 711,
    "pathFragmentId": 1116
  }, {
    "id": 712,
    "pathFragmentId": 1117
  }, {
    "id": 713,
    "pathFragmentId": 1118
  }, {
    "id": 714,
    "pathFragmentId": 1119
  }, {
    "id": 715,
    "pathFragmentId": 1120
  }, {
    "id": 716,
    "pathFragmentId": 1121
  }, {
    "id": 717,
    "pathFragmentId": 1122
  }, {
    "id": 718,
    "pathFragmentId": 1123
  }, {
    "id": 719,
    "pathFragmentId": 1125
  }, {
    "id": 720,
    "pathFragmentId": 1126
  }, {
    "id": 721,
    "pathFragmentId": 1128
  }, {
    "id": 722,
    "pathFragmentId": 1129
  }, {
    "id": 723,
    "pathFragmentId": 1130
  }, {
    "id": 724,
    "pathFragmentId": 1132
  }, {
    "id": 725,
    "pathFragmentId": 1133
  }, {
    "id": 726,
    "pathFragmentId": 1134
  }, {
    "id": 727,
    "pathFragmentId": 1135
  }, {
    "id": 728,
    "pathFragmentId": 1137
  }, {
    "id": 729,
    "pathFragmentId": 1138
  }, {
    "id": 730,
    "pathFragmentId": 1139
  }, {
    "id": 731,
    "pathFragmentId": 1140
  }, {
    "id": 732,
    "pathFragmentId": 1141
  }, {
    "id": 733,
    "pathFragmentId": 1142
  }, {
    "id": 734,
    "pathFragmentId": 1143
  }, {
    "id": 735,
    "pathFragmentId": 1144
  }, {
    "id": 736,
    "pathFragmentId": 1145
  }, {
    "id": 737,
    "pathFragmentId": 1146
  }, {
    "id": 738,
    "pathFragmentId": 1148
  }, {
    "id": 739,
    "pathFragmentId": 1149
  }, {
    "id": 740,
    "pathFragmentId": 1150
  }, {
    "id": 741,
    "pathFragmentId": 1151
  }, {
    "id": 742,
    "pathFragmentId": 1153
  }, {
    "id": 743,
    "pathFragmentId": 1154
  }, {
    "id": 744,
    "pathFragmentId": 1155
  }, {
    "id": 745,
    "pathFragmentId": 1156
  }, {
    "id": 746,
    "pathFragmentId": 1157
  }, {
    "id": 747,
    "pathFragmentId": 1158
  }, {
    "id": 748,
    "pathFragmentId": 1159
  }, {
    "id": 749,
    "pathFragmentId": 1160
  }, {
    "id": 750,
    "pathFragmentId": 1161
  }, {
    "id": 751,
    "pathFragmentId": 1162
  }, {
    "id": 752,
    "pathFragmentId": 1163
  }, {
    "id": 753,
    "pathFragmentId": 1164
  }, {
    "id": 754,
    "pathFragmentId": 1165
  }, {
    "id": 755,
    "pathFragmentId": 1166
  }, {
    "id": 756,
    "pathFragmentId": 1167
  }, {
    "id": 757,
    "pathFragmentId": 1168
  }, {
    "id": 758,
    "pathFragmentId": 1170
  }, {
    "id": 759,
    "pathFragmentId": 1173
  }, {
    "id": 760,
    "pathFragmentId": 1174
  }, {
    "id": 761,
    "pathFragmentId": 1175
  }, {
    "id": 762,
    "pathFragmentId": 1176
  }, {
    "id": 763,
    "pathFragmentId": 1178
  }, {
    "id": 764,
    "pathFragmentId": 1179
  }, {
    "id": 765,
    "pathFragmentId": 1181
  }, {
    "id": 766,
    "pathFragmentId": 1182
  }, {
    "id": 767,
    "pathFragmentId": 1183
  }, {
    "id": 768,
    "pathFragmentId": 1184
  }, {
    "id": 769,
    "pathFragmentId": 1185
  }, {
    "id": 770,
    "pathFragmentId": 1186
  }, {
    "id": 771,
    "pathFragmentId": 1187
  }, {
    "id": 772,
    "pathFragmentId": 1188
  }, {
    "id": 773,
    "pathFragmentId": 1189
  }, {
    "id": 774,
    "pathFragmentId": 1191
  }, {
    "id": 775,
    "pathFragmentId": 1192
  }, {
    "id": 776,
    "pathFragmentId": 1193
  }, {
    "id": 777,
    "pathFragmentId": 1194
  }, {
    "id": 778,
    "pathFragmentId": 1196
  }, {
    "id": 779,
    "pathFragmentId": 1197
  }, {
    "id": 780,
    "pathFragmentId": 1198
  }, {
    "id": 781,
    "pathFragmentId": 1199
  }, {
    "id": 782,
    "pathFragmentId": 1201
  }, {
    "id": 783,
    "pathFragmentId": 1202
  }, {
    "id": 784,
    "pathFragmentId": 1203
  }, {
    "id": 785,
    "pathFragmentId": 1204
  }, {
    "id": 786,
    "pathFragmentId": 1206
  }, {
    "id": 787,
    "pathFragmentId": 1207
  }, {
    "id": 788,
    "pathFragmentId": 1209
  }, {
    "id": 789,
    "pathFragmentId": 1210
  }, {
    "id": 790,
    "pathFragmentId": 1211
  }, {
    "id": 791,
    "pathFragmentId": 1212
  }, {
    "id": 792,
    "pathFragmentId": 1214
  }, {
    "id": 793,
    "pathFragmentId": 1215
  }, {
    "id": 794,
    "pathFragmentId": 1216
  }, {
    "id": 795,
    "pathFragmentId": 1217
  }, {
    "id": 796,
    "pathFragmentId": 1218
  }, {
    "id": 797,
    "pathFragmentId": 1219
  }, {
    "id": 798,
    "pathFragmentId": 1220
  }, {
    "id": 799,
    "pathFragmentId": 1221
  }, {
    "id": 800,
    "pathFragmentId": 1222
  }, {
    "id": 801,
    "pathFragmentId": 1223
  }, {
    "id": 802,
    "pathFragmentId": 1225
  }, {
    "id": 803,
    "pathFragmentId": 1226
  }, {
    "id": 804,
    "pathFragmentId": 1228
  }, {
    "id": 805,
    "pathFragmentId": 1229
  }, {
    "id": 806,
    "pathFragmentId": 1231
  }, {
    "id": 807,
    "pathFragmentId": 1232
  }, {
    "id": 808,
    "pathFragmentId": 1233
  }, {
    "id": 809,
    "pathFragmentId": 1234
  }, {
    "id": 810,
    "pathFragmentId": 1235
  }, {
    "id": 811,
    "pathFragmentId": 1236
  }, {
    "id": 812,
    "pathFragmentId": 1237
  }, {
    "id": 813,
    "pathFragmentId": 1238
  }, {
    "id": 814,
    "pathFragmentId": 1239
  }, {
    "id": 815,
    "pathFragmentId": 1240
  }, {
    "id": 816,
    "pathFragmentId": 1242
  }, {
    "id": 817,
    "pathFragmentId": 1243
  }, {
    "id": 818,
    "pathFragmentId": 1244
  }, {
    "id": 819,
    "pathFragmentId": 1246
  }, {
    "id": 820,
    "pathFragmentId": 1247
  }, {
    "id": 821,
    "pathFragmentId": 1248
  }, {
    "id": 822,
    "pathFragmentId": 1250
  }, {
    "id": 823,
    "pathFragmentId": 1251
  }, {
    "id": 824,
    "pathFragmentId": 1252
  }, {
    "id": 825,
    "pathFragmentId": 1253
  }, {
    "id": 826,
    "pathFragmentId": 1254
  }, {
    "id": 827,
    "pathFragmentId": 1255
  }, {
    "id": 828,
    "pathFragmentId": 1256
  }, {
    "id": 829,
    "pathFragmentId": 1257
  }, {
    "id": 830,
    "pathFragmentId": 1258
  }, {
    "id": 831,
    "pathFragmentId": 1259
  }, {
    "id": 832,
    "pathFragmentId": 1261
  }, {
    "id": 833,
    "pathFragmentId": 1262
  }, {
    "id": 834,
    "pathFragmentId": 1264
  }, {
    "id": 835,
    "pathFragmentId": 1265
  }, {
    "id": 836,
    "pathFragmentId": 1266
  }, {
    "id": 837,
    "pathFragmentId": 1267
  }, {
    "id": 838,
    "pathFragmentId": 1268
  }, {
    "id": 839,
    "pathFragmentId": 1269
  }, {
    "id": 840,
    "pathFragmentId": 1270
  }, {
    "id": 841,
    "pathFragmentId": 1271
  }, {
    "id": 842,
    "pathFragmentId": 1272
  }, {
    "id": 843,
    "pathFragmentId": 1273
  }, {
    "id": 844,
    "pathFragmentId": 1274
  }, {
    "id": 845,
    "pathFragmentId": 1276
  }, {
    "id": 846,
    "pathFragmentId": 1277
  }, {
    "id": 847,
    "pathFragmentId": 1278
  }, {
    "id": 848,
    "pathFragmentId": 1279
  }, {
    "id": 849,
    "pathFragmentId": 1281
  }, {
    "id": 850,
    "pathFragmentId": 1282
  }, {
    "id": 851,
    "pathFragmentId": 1283
  }, {
    "id": 852,
    "pathFragmentId": 1284
  }, {
    "id": 853,
    "pathFragmentId": 1285
  }, {
    "id": 854,
    "pathFragmentId": 1286
  }, {
    "id": 855,
    "pathFragmentId": 1287
  }, {
    "id": 856,
    "pathFragmentId": 1288
  }, {
    "id": 857,
    "pathFragmentId": 1289
  }, {
    "id": 858,
    "pathFragmentId": 1290
  }, {
    "id": 859,
    "pathFragmentId": 1291
  }, {
    "id": 860,
    "pathFragmentId": 1292
  }, {
    "id": 861,
    "pathFragmentId": 1294
  }, {
    "id": 862,
    "pathFragmentId": 1295
  }, {
    "id": 863,
    "pathFragmentId": 1297
  }, {
    "id": 864,
    "pathFragmentId": 1298
  }, {
    "id": 865,
    "pathFragmentId": 1300,
    "isTreeArtifact": true
  }, {
    "id": 866,
    "pathFragmentId": 1301
  }, {
    "id": 867,
    "pathFragmentId": 1303
  }, {
    "id": 868,
    "pathFragmentId": 1304
  }, {
    "id": 869,
    "pathFragmentId": 1305
  }, {
    "id": 870,
    "pathFragmentId": 1306
  }, {
    "id": 871,
    "pathFragmentId": 1307
  }, {
    "id": 872,
    "pathFragmentId": 1308
  }, {
    "id": 873,
    "pathFragmentId": 1309
  }, {
    "id": 874,
    "pathFragmentId": 1310
  }, {
    "id": 875,
    "pathFragmentId": 1311
  }, {
    "id": 876,
    "pathFragmentId": 1312
  }, {
    "id": 877,
    "pathFragmentId": 1313
  }, {
    "id": 878,
    "pathFragmentId": 1314
  }, {
    "id": 879,
    "pathFragmentId": 1315
  }, {
    "id": 880,
    "pathFragmentId": 1316
  }, {
    "id": 881,
    "pathFragmentId": 1317
  }, {
    "id": 882,
    "pathFragmentId": 1318
  }, {
    "id": 883,
    "pathFragmentId": 1319
  }, {
    "id": 884,
    "pathFragmentId": 1320
  }, {
    "id": 885,
    "pathFragmentId": 1321
  }, {
    "id": 886,
    "pathFragmentId": 1322
  }, {
    "id": 887,
    "pathFragmentId": 1323
  }, {
    "id": 888,
    "pathFragmentId": 1324
  }, {
    "id": 889,
    "pathFragmentId": 1325
  }, {
    "id": 890,
    "pathFragmentId": 1327
  }, {
    "id": 891,
    "pathFragmentId": 1328
  }, {
    "id": 892,
    "pathFragmentId": 1049
  }, {
    "id": 893,
    "pathFragmentId": 1329
  }, {
    "id": 894,
    "pathFragmentId": 1330
  }, {
    "id": 895,
    "pathFragmentId": 1331
  }, {
    "id": 896,
    "pathFragmentId": 1333
  }, {
    "id": 897,
    "pathFragmentId": 1337
  }, {
    "id": 898,
    "pathFragmentId": 1340
  }, {
    "id": 899,
    "pathFragmentId": 1344
  }, {
    "id": 900,
    "pathFragmentId": 1347
  }, {
    "id": 901,
    "pathFragmentId": 1350
  }, {
    "id": 902,
    "pathFragmentId": 1351
  }, {
    "id": 903,
    "pathFragmentId": 1353
  }, {
    "id": 904,
    "pathFragmentId": 1354
  }, {
    "id": 905,
    "pathFragmentId": 1355
  }, {
    "id": 906,
    "pathFragmentId": 1356
  }, {
    "id": 907,
    "pathFragmentId": 1357
  }, {
    "id": 908,
    "pathFragmentId": 1358
  }, {
    "id": 909,
    "pathFragmentId": 1359
  }, {
    "id": 910,
    "pathFragmentId": 1360
  }, {
    "id": 911,
    "pathFragmentId": 1361
  }, {
    "id": 912,
    "pathFragmentId": 1362
  }, {
    "id": 913,
    "pathFragmentId": 1363
  }, {
    "id": 914,
    "pathFragmentId": 1364
  }, {
    "id": 915,
    "pathFragmentId": 1365
  }, {
    "id": 916,
    "pathFragmentId": 1366
  }, {
    "id": 917,
    "pathFragmentId": 1367
  }, {
    "id": 918,
    "pathFragmentId": 1368
  }, {
    "id": 919,
    "pathFragmentId": 1369
  }, {
    "id": 920,
    "pathFragmentId": 1370
  }, {
    "id": 921,
    "pathFragmentId": 1371
  }, {
    "id": 922,
    "pathFragmentId": 1373
  }, {
    "id": 923,
    "pathFragmentId": 1374
  }, {
    "id": 924,
    "pathFragmentId": 1375
  }, {
    "id": 925,
    "pathFragmentId": 1376
  }, {
    "id": 926,
    "pathFragmentId": 1377
  }, {
    "id": 927,
    "pathFragmentId": 1378
  }, {
    "id": 928,
    "pathFragmentId": 1379
  }, {
    "id": 929,
    "pathFragmentId": 1381
  }, {
    "id": 930,
    "pathFragmentId": 1382
  }, {
    "id": 931,
    "pathFragmentId": 1391
  }, {
    "id": 932,
    "pathFragmentId": 1392
  }, {
    "id": 933,
    "pathFragmentId": 1393
  }, {
    "id": 934,
    "pathFragmentId": 1394
  }, {
    "id": 935,
    "pathFragmentId": 1395
  }, {
    "id": 936,
    "pathFragmentId": 1396
  }, {
    "id": 937,
    "pathFragmentId": 1397
  }, {
    "id": 938,
    "pathFragmentId": 1398
  }, {
    "id": 939,
    "pathFragmentId": 1399
  }, {
    "id": 940,
    "pathFragmentId": 1400
  }, {
    "id": 941,
    "pathFragmentId": 1401
  }, {
    "id": 942,
    "pathFragmentId": 1402
  }, {
    "id": 943,
    "pathFragmentId": 1403
  }, {
    "id": 944,
    "pathFragmentId": 1404
  }, {
    "id": 945,
    "pathFragmentId": 1405
  }, {
    "id": 946,
    "pathFragmentId": 1406
  }, {
    "id": 947,
    "pathFragmentId": 1407
  }, {
    "id": 948,
    "pathFragmentId": 1408
  }, {
    "id": 949,
    "pathFragmentId": 1413
  }, {
    "id": 950,
    "pathFragmentId": 1417
  }, {
    "id": 951,
    "pathFragmentId": 1420
  }, {
    "id": 952,
    "pathFragmentId": 1423
  }, {
    "id": 953,
    "pathFragmentId": 1426
  }, {
    "id": 954,
    "pathFragmentId": 1429
  }, {
    "id": 955,
    "pathFragmentId": 1434
  }, {
    "id": 956,
    "pathFragmentId": 1437
  }, {
    "id": 957,
    "pathFragmentId": 1441
  }, {
    "id": 958,
    "pathFragmentId": 1445
  }, {
    "id": 959,
    "pathFragmentId": 1449
  }, {
    "id": 960,
    "pathFragmentId": 1453
  }, {
    "id": 961,
    "pathFragmentId": 1456
  }, {
    "id": 962,
    "pathFragmentId": 1463
  }, {
    "id": 963,
    "pathFragmentId": 1464
  }, {
    "id": 964,
    "pathFragmentId": 1465
  }, {
    "id": 965,
    "pathFragmentId": 1466
  }, {
    "id": 966,
    "pathFragmentId": 1467
  }, {
    "id": 967,
    "pathFragmentId": 1468
  }, {
    "id": 968,
    "pathFragmentId": 1469
  }, {
    "id": 969,
    "pathFragmentId": 1470
  }, {
    "id": 970,
    "pathFragmentId": 1471
  }, {
    "id": 971,
    "pathFragmentId": 1472
  }, {
    "id": 972,
    "pathFragmentId": 1473
  }, {
    "id": 973,
    "pathFragmentId": 1483
  }, {
    "id": 974,
    "pathFragmentId": 1484
  }, {
    "id": 975,
    "pathFragmentId": 1485
  }, {
    "id": 976,
    "pathFragmentId": 1486
  }, {
    "id": 977,
    "pathFragmentId": 1487
  }, {
    "id": 978,
    "pathFragmentId": 1488
  }, {
    "id": 979,
    "pathFragmentId": 1489
  }, {
    "id": 980,
    "pathFragmentId": 1490
  }, {
    "id": 981,
    "pathFragmentId": 1491
  }, {
    "id": 982,
    "pathFragmentId": 1492
  }, {
    "id": 983,
    "pathFragmentId": 1493
  }, {
    "id": 984,
    "pathFragmentId": 1494
  }, {
    "id": 985,
    "pathFragmentId": 1495
  }, {
    "id": 986,
    "pathFragmentId": 1496
  }, {
    "id": 987,
    "pathFragmentId": 1497
  }, {
    "id": 988,
    "pathFragmentId": 1498
  }, {
    "id": 989,
    "pathFragmentId": 1499
  }, {
    "id": 990,
    "pathFragmentId": 1500
  }, {
    "id": 991,
    "pathFragmentId": 1501
  }, {
    "id": 992,
    "pathFragmentId": 1502
  }, {
    "id": 993,
    "pathFragmentId": 1503
  }, {
    "id": 994,
    "pathFragmentId": 1504
  }, {
    "id": 995,
    "pathFragmentId": 1505
  }, {
    "id": 996,
    "pathFragmentId": 1506
  }, {
    "id": 997,
    "pathFragmentId": 1507
  }, {
    "id": 998,
    "pathFragmentId": 1509
  }, {
    "id": 999,
    "pathFragmentId": 1510
  }, {
    "id": 1000,
    "pathFragmentId": 1511
  }, {
    "id": 1001,
    "pathFragmentId": 1512
  }, {
    "id": 1002,
    "pathFragmentId": 1513
  }, {
    "id": 1003,
    "pathFragmentId": 1514
  }, {
    "id": 1004,
    "pathFragmentId": 1515
  }, {
    "id": 1005,
    "pathFragmentId": 1516
  }, {
    "id": 1006,
    "pathFragmentId": 1517
  }, {
    "id": 1007,
    "pathFragmentId": 1522
  }, {
    "id": 1008,
    "pathFragmentId": 1525
  }, {
    "id": 1009,
    "pathFragmentId": 1529
  }, {
    "id": 1010,
    "pathFragmentId": 1534
  }, {
    "id": 1011,
    "pathFragmentId": 1538
  }, {
    "id": 1012,
    "pathFragmentId": 1541
  }, {
    "id": 1013,
    "pathFragmentId": 1544
  }, {
    "id": 1014,
    "pathFragmentId": 1548
  }, {
    "id": 1015,
    "pathFragmentId": 1551
  }, {
    "id": 1016,
    "pathFragmentId": 1556
  }, {
    "id": 1017,
    "pathFragmentId": 1559
  }, {
    "id": 1018,
    "pathFragmentId": 1562
  }, {
    "id": 1019,
    "pathFragmentId": 1565
  }, {
    "id": 1020,
    "pathFragmentId": 1570
  }, {
    "id": 1021,
    "pathFragmentId": 1573
  }, {
    "id": 1022,
    "pathFragmentId": 1576
  }, {
    "id": 1023,
    "pathFragmentId": 1579
  }, {
    "id": 1024,
    "pathFragmentId": 1583
  }, {
    "id": 1025,
    "pathFragmentId": 1584
  }, {
    "id": 1026,
    "pathFragmentId": 1585
  }, {
    "id": 1027,
    "pathFragmentId": 1587
  }, {
    "id": 1028,
    "pathFragmentId": 1588
  }, {
    "id": 1029,
    "pathFragmentId": 1589
  }, {
    "id": 1030,
    "pathFragmentId": 1590
  }, {
    "id": 1031,
    "pathFragmentId": 1591
  }, {
    "id": 1032,
    "pathFragmentId": 1592
  }, {
    "id": 1033,
    "pathFragmentId": 1593
  }, {
    "id": 1034,
    "pathFragmentId": 1594
  }, {
    "id": 1035,
    "pathFragmentId": 1595
  }, {
    "id": 1036,
    "pathFragmentId": 1596
  }, {
    "id": 1037,
    "pathFragmentId": 1597
  }, {
    "id": 1038,
    "pathFragmentId": 1598
  }, {
    "id": 1039,
    "pathFragmentId": 1599
  }, {
    "id": 1040,
    "pathFragmentId": 1600
  }, {
    "id": 1041,
    "pathFragmentId": 1601
  }, {
    "id": 1042,
    "pathFragmentId": 1602
  }, {
    "id": 1043,
    "pathFragmentId": 1603
  }, {
    "id": 1044,
    "pathFragmentId": 1604
  }, {
    "id": 1045,
    "pathFragmentId": 1605
  }, {
    "id": 1046,
    "pathFragmentId": 1606
  }, {
    "id": 1047,
    "pathFragmentId": 1607
  }, {
    "id": 1048,
    "pathFragmentId": 1608
  }, {
    "id": 1049,
    "pathFragmentId": 1610
  }, {
    "id": 1050,
    "pathFragmentId": 1611
  }, {
    "id": 1051,
    "pathFragmentId": 1612
  }, {
    "id": 1052,
    "pathFragmentId": 1613
  }, {
    "id": 1053,
    "pathFragmentId": 1614
  }, {
    "id": 1054,
    "pathFragmentId": 1615
  }, {
    "id": 1055,
    "pathFragmentId": 1616
  }, {
    "id": 1056,
    "pathFragmentId": 1617
  }, {
    "id": 1057,
    "pathFragmentId": 1618
  }, {
    "id": 1058,
    "pathFragmentId": 1620
  }, {
    "id": 1059,
    "pathFragmentId": 1621
  }, {
    "id": 1060,
    "pathFragmentId": 1622
  }, {
    "id": 1061,
    "pathFragmentId": 1623
  }, {
    "id": 1062,
    "pathFragmentId": 1624
  }, {
    "id": 1063,
    "pathFragmentId": 1625
  }, {
    "id": 1064,
    "pathFragmentId": 1626
  }, {
    "id": 1065,
    "pathFragmentId": 1627
  }, {
    "id": 1066,
    "pathFragmentId": 1628
  }, {
    "id": 1067,
    "pathFragmentId": 1630
  }, {
    "id": 1068,
    "pathFragmentId": 1631
  }, {
    "id": 1069,
    "pathFragmentId": 1632
  }, {
    "id": 1070,
    "pathFragmentId": 1633
  }, {
    "id": 1071,
    "pathFragmentId": 1634
  }, {
    "id": 1072,
    "pathFragmentId": 1635
  }, {
    "id": 1073,
    "pathFragmentId": 1636
  }, {
    "id": 1074,
    "pathFragmentId": 1637
  }, {
    "id": 1075,
    "pathFragmentId": 1638
  }, {
    "id": 1076,
    "pathFragmentId": 1639
  }, {
    "id": 1077,
    "pathFragmentId": 1640
  }, {
    "id": 1078,
    "pathFragmentId": 1641
  }, {
    "id": 1079,
    "pathFragmentId": 1642
  }, {
    "id": 1080,
    "pathFragmentId": 1643
  }, {
    "id": 1081,
    "pathFragmentId": 1644
  }, {
    "id": 1082,
    "pathFragmentId": 1645
  }, {
    "id": 1083,
    "pathFragmentId": 1646
  }, {
    "id": 1084,
    "pathFragmentId": 1647
  }, {
    "id": 1085,
    "pathFragmentId": 1648
  }, {
    "id": 1086,
    "pathFragmentId": 1649
  }, {
    "id": 1087,
    "pathFragmentId": 1650
  }, {
    "id": 1088,
    "pathFragmentId": 1651
  }, {
    "id": 1089,
    "pathFragmentId": 1652
  }, {
    "id": 1090,
    "pathFragmentId": 1653
  }, {
    "id": 1091,
    "pathFragmentId": 1654
  }, {
    "id": 1092,
    "pathFragmentId": 1655
  }, {
    "id": 1093,
    "pathFragmentId": 1656
  }, {
    "id": 1094,
    "pathFragmentId": 1657
  }, {
    "id": 1095,
    "pathFragmentId": 1658
  }, {
    "id": 1096,
    "pathFragmentId": 1660
  }, {
    "id": 1097,
    "pathFragmentId": 1661
  }, {
    "id": 1098,
    "pathFragmentId": 1662
  }, {
    "id": 1099,
    "pathFragmentId": 1663
  }, {
    "id": 1100,
    "pathFragmentId": 1664
  }, {
    "id": 1101,
    "pathFragmentId": 1665
  }, {
    "id": 1102,
    "pathFragmentId": 1666
  }, {
    "id": 1103,
    "pathFragmentId": 1667
  }, {
    "id": 1104,
    "pathFragmentId": 1668
  }, {
    "id": 1105,
    "pathFragmentId": 1669
  }, {
    "id": 1106,
    "pathFragmentId": 1670
  }, {
    "id": 1107,
    "pathFragmentId": 1671
  }, {
    "id": 1108,
    "pathFragmentId": 1672
  }, {
    "id": 1109,
    "pathFragmentId": 1674
  }, {
    "id": 1110,
    "pathFragmentId": 1675
  }, {
    "id": 1111,
    "pathFragmentId": 1676
  }, {
    "id": 1112,
    "pathFragmentId": 1677
  }, {
    "id": 1113,
    "pathFragmentId": 1678
  }, {
    "id": 1114,
    "pathFragmentId": 1679
  }, {
    "id": 1115,
    "pathFragmentId": 1680
  }, {
    "id": 1116,
    "pathFragmentId": 1681
  }, {
    "id": 1117,
    "pathFragmentId": 1682
  }, {
    "id": 1118,
    "pathFragmentId": 1683
  }, {
    "id": 1119,
    "pathFragmentId": 1684
  }, {
    "id": 1120,
    "pathFragmentId": 1685
  }, {
    "id": 1121,
    "pathFragmentId": 1686
  }, {
    "id": 1122,
    "pathFragmentId": 1687
  }, {
    "id": 1123,
    "pathFragmentId": 1688
  }, {
    "id": 1124,
    "pathFragmentId": 1689
  }, {
    "id": 1125,
    "pathFragmentId": 1690
  }, {
    "id": 1126,
    "pathFragmentId": 1691
  }, {
    "id": 1127,
    "pathFragmentId": 1692
  }, {
    "id": 1128,
    "pathFragmentId": 1693
  }, {
    "id": 1129,
    "pathFragmentId": 1694
  }, {
    "id": 1130,
    "pathFragmentId": 1695
  }, {
    "id": 1131,
    "pathFragmentId": 1696
  }, {
    "id": 1132,
    "pathFragmentId": 1697
  }, {
    "id": 1133,
    "pathFragmentId": 1698
  }, {
    "id": 1134,
    "pathFragmentId": 1699
  }, {
    "id": 1135,
    "pathFragmentId": 1700
  }, {
    "id": 1136,
    "pathFragmentId": 1701
  }, {
    "id": 1137,
    "pathFragmentId": 1702
  }, {
    "id": 1138,
    "pathFragmentId": 1703
  }, {
    "id": 1139,
    "pathFragmentId": 1704
  }, {
    "id": 1140,
    "pathFragmentId": 1705
  }, {
    "id": 1141,
    "pathFragmentId": 1706
  }, {
    "id": 1142,
    "pathFragmentId": 1707
  }, {
    "id": 1143,
    "pathFragmentId": 1708
  }, {
    "id": 1144,
    "pathFragmentId": 1709
  }, {
    "id": 1145,
    "pathFragmentId": 1710
  }, {
    "id": 1146,
    "pathFragmentId": 1711
  }, {
    "id": 1147,
    "pathFragmentId": 1712
  }, {
    "id": 1148,
    "pathFragmentId": 1713
  }, {
    "id": 1149,
    "pathFragmentId": 1714
  }, {
    "id": 1150,
    "pathFragmentId": 1715
  }, {
    "id": 1151,
    "pathFragmentId": 1716
  }, {
    "id": 1152,
    "pathFragmentId": 1717
  }, {
    "id": 1153,
    "pathFragmentId": 1718
  }, {
    "id": 1154,
    "pathFragmentId": 1719
  }, {
    "id": 1155,
    "pathFragmentId": 1720
  }, {
    "id": 1156,
    "pathFragmentId": 1721
  }, {
    "id": 1157,
    "pathFragmentId": 1722
  }, {
    "id": 1158,
    "pathFragmentId": 1723
  }, {
    "id": 1159,
    "pathFragmentId": 1724
  }, {
    "id": 1160,
    "pathFragmentId": 1725
  }, {
    "id": 1161,
    "pathFragmentId": 1726
  }, {
    "id": 1162,
    "pathFragmentId": 1727
  }, {
    "id": 1163,
    "pathFragmentId": 1728
  }, {
    "id": 1164,
    "pathFragmentId": 1729
  }, {
    "id": 1165,
    "pathFragmentId": 1730
  }, {
    "id": 1166,
    "pathFragmentId": 1731
  }, {
    "id": 1167,
    "pathFragmentId": 1732
  }, {
    "id": 1168,
    "pathFragmentId": 1734
  }, {
    "id": 1169,
    "pathFragmentId": 1735
  }, {
    "id": 1170,
    "pathFragmentId": 1736
  }, {
    "id": 1171,
    "pathFragmentId": 1737
  }, {
    "id": 1172,
    "pathFragmentId": 1738
  }, {
    "id": 1173,
    "pathFragmentId": 1739
  }, {
    "id": 1174,
    "pathFragmentId": 1743
  }, {
    "id": 1175,
    "pathFragmentId": 1746
  }, {
    "id": 1176,
    "pathFragmentId": 1747
  }, {
    "id": 1177,
    "pathFragmentId": 1748
  }, {
    "id": 1178,
    "pathFragmentId": 1749
  }, {
    "id": 1179,
    "pathFragmentId": 1750
  }, {
    "id": 1180,
    "pathFragmentId": 1751
  }, {
    "id": 1181,
    "pathFragmentId": 1752
  }, {
    "id": 1182,
    "pathFragmentId": 1753
  }, {
    "id": 1183,
    "pathFragmentId": 1754
  }, {
    "id": 1184,
    "pathFragmentId": 1755
  }, {
    "id": 1185,
    "pathFragmentId": 1756
  }, {
    "id": 1186,
    "pathFragmentId": 1757
  }, {
    "id": 1187,
    "pathFragmentId": 1758
  }, {
    "id": 1188,
    "pathFragmentId": 1759
  }, {
    "id": 1189,
    "pathFragmentId": 1760
  }, {
    "id": 1190,
    "pathFragmentId": 1761
  }, {
    "id": 1191,
    "pathFragmentId": 1763
  }, {
    "id": 1192,
    "pathFragmentId": 1764
  }, {
    "id": 1193,
    "pathFragmentId": 1765
  }, {
    "id": 1194,
    "pathFragmentId": 1768
  }, {
    "id": 1195,
    "pathFragmentId": 1769
  }, {
    "id": 1196,
    "pathFragmentId": 1770
  }, {
    "id": 1197,
    "pathFragmentId": 1771
  }, {
    "id": 1198,
    "pathFragmentId": 1772
  }, {
    "id": 1199,
    "pathFragmentId": 1773
  }, {
    "id": 1200,
    "pathFragmentId": 1776
  }, {
    "id": 1201,
    "pathFragmentId": 1778
  }, {
    "id": 1202,
    "pathFragmentId": 1781
  }, {
    "id": 1203,
    "pathFragmentId": 1782
  }, {
    "id": 1204,
    "pathFragmentId": 1783
  }, {
    "id": 1205,
    "pathFragmentId": 1784
  }, {
    "id": 1206,
    "pathFragmentId": 1785
  }, {
    "id": 1207,
    "pathFragmentId": 1786
  }, {
    "id": 1208,
    "pathFragmentId": 1787
  }, {
    "id": 1209,
    "pathFragmentId": 1788
  }, {
    "id": 1210,
    "pathFragmentId": 1793
  }, {
    "id": 1211,
    "pathFragmentId": 1795
  }, {
    "id": 1212,
    "pathFragmentId": 1798
  }, {
    "id": 1213,
    "pathFragmentId": 1800
  }, {
    "id": 1214,
    "pathFragmentId": 1801
  }, {
    "id": 1215,
    "pathFragmentId": 1802
  }, {
    "id": 1216,
    "pathFragmentId": 1807
  }, {
    "id": 1217,
    "pathFragmentId": 1810
  }, {
    "id": 1218,
    "pathFragmentId": 1811
  }, {
    "id": 1219,
    "pathFragmentId": 1815
  }, {
    "id": 1220,
    "pathFragmentId": 1816
  }, {
    "id": 1221,
    "pathFragmentId": 1817
  }, {
    "id": 1222,
    "pathFragmentId": 1818
  }, {
    "id": 1223,
    "pathFragmentId": 1819
  }, {
    "id": 1224,
    "pathFragmentId": 1820
  }, {
    "id": 1225,
    "pathFragmentId": 1825
  }, {
    "id": 1226,
    "pathFragmentId": 1826
  }, {
    "id": 1227,
    "pathFragmentId": 1828
  }, {
    "id": 1228,
    "pathFragmentId": 1829
  }, {
    "id": 1229,
    "pathFragmentId": 1830
  }, {
    "id": 1230,
    "pathFragmentId": 1832
  }, {
    "id": 1231,
    "pathFragmentId": 1834
  }, {
    "id": 1232,
    "pathFragmentId": 1835
  }, {
    "id": 1233,
    "pathFragmentId": 1836
  }, {
    "id": 1234,
    "pathFragmentId": 1837
  }, {
    "id": 1235,
    "pathFragmentId": 1838
  }, {
    "id": 1236,
    "pathFragmentId": 1839
  }, {
    "id": 1237,
    "pathFragmentId": 1840
  }, {
    "id": 1238,
    "pathFragmentId": 1841
  }, {
    "id": 1239,
    "pathFragmentId": 1843
  }, {
    "id": 1240,
    "pathFragmentId": 1844
  }, {
    "id": 1241,
    "pathFragmentId": 1845
  }, {
    "id": 1242,
    "pathFragmentId": 1846
  }, {
    "id": 1243,
    "pathFragmentId": 1848
  }, {
    "id": 1244,
    "pathFragmentId": 1850
  }, {
    "id": 1245,
    "pathFragmentId": 1852
  }, {
    "id": 1246,
    "pathFragmentId": 1854
  }, {
    "id": 1247,
    "pathFragmentId": 1855
  }, {
    "id": 1248,
    "pathFragmentId": 1856
  }, {
    "id": 1249,
    "pathFragmentId": 1857
  }, {
    "id": 1250,
    "pathFragmentId": 1858
  }, {
    "id": 1251,
    "pathFragmentId": 1859
  }, {
    "id": 1252,
    "pathFragmentId": 1860
  }, {
    "id": 1253,
    "pathFragmentId": 1861
  }, {
    "id": 1254,
    "pathFragmentId": 1862
  }, {
    "id": 1255,
    "pathFragmentId": 1865
  }, {
    "id": 1256,
    "pathFragmentId": 1866
  }, {
    "id": 1257,
    "pathFragmentId": 1869
  }, {
    "id": 1258,
    "pathFragmentId": 1880
  }, {
    "id": 1259,
    "pathFragmentId": 1890
  }, {
    "id": 1260,
    "pathFragmentId": 1894
  }, {
    "id": 1261,
    "pathFragmentId": 1899
  }, {
    "id": 1262,
    "pathFragmentId": 1903
  }, {
    "id": 1263,
    "pathFragmentId": 1908
  }, {
    "id": 1264,
    "pathFragmentId": 1911
  }, {
    "id": 1265,
    "pathFragmentId": 1915
  }, {
    "id": 1266,
    "pathFragmentId": 1919
  }, {
    "id": 1267,
    "pathFragmentId": 1922
  }, {
    "id": 1268,
    "pathFragmentId": 1927
  }, {
    "id": 1269,
    "pathFragmentId": 1928
  }, {
    "id": 1270,
    "pathFragmentId": 1929
  }, {
    "id": 1271,
    "pathFragmentId": 1930
  }, {
    "id": 1272,
    "pathFragmentId": 1931
  }, {
    "id": 1273,
    "pathFragmentId": 1932
  }, {
    "id": 1274,
    "pathFragmentId": 1933
  }, {
    "id": 1275,
    "pathFragmentId": 1934
  }, {
    "id": 1276,
    "pathFragmentId": 1935
  }, {
    "id": 1277,
    "pathFragmentId": 1936
  }, {
    "id": 1278,
    "pathFragmentId": 1937
  }, {
    "id": 1279,
    "pathFragmentId": 1938
  }, {
    "id": 1280,
    "pathFragmentId": 1939
  }, {
    "id": 1281,
    "pathFragmentId": 1940
  }, {
    "id": 1282,
    "pathFragmentId": 1941
  }, {
    "id": 1283,
    "pathFragmentId": 1942
  }, {
    "id": 1284,
    "pathFragmentId": 1943
  }, {
    "id": 1285,
    "pathFragmentId": 1944
  }, {
    "id": 1286,
    "pathFragmentId": 1945
  }, {
    "id": 1287,
    "pathFragmentId": 1946
  }, {
    "id": 1288,
    "pathFragmentId": 1947
  }, {
    "id": 1289,
    "pathFragmentId": 1948
  }, {
    "id": 1290,
    "pathFragmentId": 1949
  }, {
    "id": 1291,
    "pathFragmentId": 1950
  }, {
    "id": 1292,
    "pathFragmentId": 1954
  }, {
    "id": 1293,
    "pathFragmentId": 1955
  }, {
    "id": 1294,
    "pathFragmentId": 1956
  }, {
    "id": 1295,
    "pathFragmentId": 1957
  }, {
    "id": 1296,
    "pathFragmentId": 1958
  }, {
    "id": 1297,
    "pathFragmentId": 1959
  }, {
    "id": 1298,
    "pathFragmentId": 1960
  }, {
    "id": 1299,
    "pathFragmentId": 1961
  }, {
    "id": 1300,
    "pathFragmentId": 1962
  }, {
    "id": 1301,
    "pathFragmentId": 1963
  }, {
    "id": 1302,
    "pathFragmentId": 1964
  }, {
    "id": 1303,
    "pathFragmentId": 1965
  }, {
    "id": 1304,
    "pathFragmentId": 1966
  }, {
    "id": 1305,
    "pathFragmentId": 1967
  }, {
    "id": 1306,
    "pathFragmentId": 1968
  }, {
    "id": 1307,
    "pathFragmentId": 1969
  }, {
    "id": 1308,
    "pathFragmentId": 1970
  }, {
    "id": 1309,
    "pathFragmentId": 1971
  }, {
    "id": 1310,
    "pathFragmentId": 1972
  }, {
    "id": 1311,
    "pathFragmentId": 1973
  }, {
    "id": 1312,
    "pathFragmentId": 1974
  }, {
    "id": 1313,
    "pathFragmentId": 1975
  }, {
    "id": 1314,
    "pathFragmentId": 1976
  }, {
    "id": 1315,
    "pathFragmentId": 1977
  }, {
    "id": 1316,
    "pathFragmentId": 1978
  }, {
    "id": 1317,
    "pathFragmentId": 1979
  }, {
    "id": 1318,
    "pathFragmentId": 1980
  }, {
    "id": 1319,
    "pathFragmentId": 1981
  }, {
    "id": 1320,
    "pathFragmentId": 1982
  }, {
    "id": 1321,
    "pathFragmentId": 1983
  }, {
    "id": 1322,
    "pathFragmentId": 1984
  }, {
    "id": 1323,
    "pathFragmentId": 1985
  }, {
    "id": 1324,
    "pathFragmentId": 1986
  }, {
    "id": 1325,
    "pathFragmentId": 1987
  }, {
    "id": 1326,
    "pathFragmentId": 1988
  }, {
    "id": 1327,
    "pathFragmentId": 1989
  }, {
    "id": 1328,
    "pathFragmentId": 1990
  }, {
    "id": 1329,
    "pathFragmentId": 1991
  }, {
    "id": 1330,
    "pathFragmentId": 1993
  }, {
    "id": 1331,
    "pathFragmentId": 1994
  }, {
    "id": 1332,
    "pathFragmentId": 1995
  }, {
    "id": 1333,
    "pathFragmentId": 1998
  }, {
    "id": 1334,
    "pathFragmentId": 1999
  }, {
    "id": 1335,
    "pathFragmentId": 2000
  }, {
    "id": 1336,
    "pathFragmentId": 2001
  }, {
    "id": 1337,
    "pathFragmentId": 2002
  }, {
    "id": 1338,
    "pathFragmentId": 2003
  }, {
    "id": 1339,
    "pathFragmentId": 2004
  }, {
    "id": 1340,
    "pathFragmentId": 2005
  }, {
    "id": 1341,
    "pathFragmentId": 2006
  }, {
    "id": 1342,
    "pathFragmentId": 2007
  }, {
    "id": 1343,
    "pathFragmentId": 2008
  }, {
    "id": 1344,
    "pathFragmentId": 2009
  }, {
    "id": 1345,
    "pathFragmentId": 2010
  }, {
    "id": 1346,
    "pathFragmentId": 2011
  }, {
    "id": 1347,
    "pathFragmentId": 2014
  }, {
    "id": 1348,
    "pathFragmentId": 2018
  }, {
    "id": 1349,
    "pathFragmentId": 2029
  }, {
    "id": 1350,
    "pathFragmentId": 2031
  }, {
    "id": 1351,
    "pathFragmentId": 2032
  }, {
    "id": 1352,
    "pathFragmentId": 2033
  }, {
    "id": 1353,
    "pathFragmentId": 2035
  }, {
    "id": 1354,
    "pathFragmentId": 2037
  }, {
    "id": 1355,
    "pathFragmentId": 2042
  }, {
    "id": 1356,
    "pathFragmentId": 2043
  }, {
    "id": 1357,
    "pathFragmentId": 2046
  }, {
    "id": 1358,
    "pathFragmentId": 2047
  }, {
    "id": 1359,
    "pathFragmentId": 2048
  }, {
    "id": 1360,
    "pathFragmentId": 2049
  }, {
    "id": 1361,
    "pathFragmentId": 2054
  }, {
    "id": 1362,
    "pathFragmentId": 2062
  }, {
    "id": 1363,
    "pathFragmentId": 2063
  }, {
    "id": 1364,
    "pathFragmentId": 2064
  }, {
    "id": 1365,
    "pathFragmentId": 2065
  }, {
    "id": 1366,
    "pathFragmentId": 2066
  }, {
    "id": 1367,
    "pathFragmentId": 2067
  }, {
    "id": 1368,
    "pathFragmentId": 2068
  }, {
    "id": 1369,
    "pathFragmentId": 2069
  }, {
    "id": 1370,
    "pathFragmentId": 2070
  }, {
    "id": 1371,
    "pathFragmentId": 2072
  }, {
    "id": 1372,
    "pathFragmentId": 2073
  }, {
    "id": 1373,
    "pathFragmentId": 2074
  }, {
    "id": 1374,
    "pathFragmentId": 2075
  }, {
    "id": 1375,
    "pathFragmentId": 2076
  }, {
    "id": 1376,
    "pathFragmentId": 2077
  }, {
    "id": 1377,
    "pathFragmentId": 2078
  }, {
    "id": 1378,
    "pathFragmentId": 2079
  }, {
    "id": 1379,
    "pathFragmentId": 2080
  }, {
    "id": 1380,
    "pathFragmentId": 2081
  }, {
    "id": 1381,
    "pathFragmentId": 2082
  }, {
    "id": 1382,
    "pathFragmentId": 2083
  }, {
    "id": 1383,
    "pathFragmentId": 2084
  }, {
    "id": 1384,
    "pathFragmentId": 2085
  }, {
    "id": 1385,
    "pathFragmentId": 2086
  }, {
    "id": 1386,
    "pathFragmentId": 2087
  }, {
    "id": 1387,
    "pathFragmentId": 2088
  }, {
    "id": 1388,
    "pathFragmentId": 2089
  }, {
    "id": 1389,
    "pathFragmentId": 2090
  }, {
    "id": 1390,
    "pathFragmentId": 2091
  }, {
    "id": 1391,
    "pathFragmentId": 2092
  }, {
    "id": 1392,
    "pathFragmentId": 2093
  }, {
    "id": 1393,
    "pathFragmentId": 2094
  }, {
    "id": 1394,
    "pathFragmentId": 2095
  }, {
    "id": 1395,
    "pathFragmentId": 2100
  }, {
    "id": 1396,
    "pathFragmentId": 2105
  }, {
    "id": 1397,
    "pathFragmentId": 2110
  }, {
    "id": 1398,
    "pathFragmentId": 2113
  }, {
    "id": 1399,
    "pathFragmentId": 2117
  }, {
    "id": 1400,
    "pathFragmentId": 2122
  }, {
    "id": 1401,
    "pathFragmentId": 2125
  }, {
    "id": 1402,
    "pathFragmentId": 2129
  }, {
    "id": 1403,
    "pathFragmentId": 2132
  }, {
    "id": 1404,
    "pathFragmentId": 2135
  }, {
    "id": 1405,
    "pathFragmentId": 2140
  }, {
    "id": 1406,
    "pathFragmentId": 2143
  }, {
    "id": 1407,
    "pathFragmentId": 2147
  }, {
    "id": 1408,
    "pathFragmentId": 2151
  }, {
    "id": 1409,
    "pathFragmentId": 2155
  }, {
    "id": 1410,
    "pathFragmentId": 2159
  }, {
    "id": 1411,
    "pathFragmentId": 2162
  }, {
    "id": 1412,
    "pathFragmentId": 2169
  }, {
    "id": 1413,
    "pathFragmentId": 2170
  }, {
    "id": 1414,
    "pathFragmentId": 2171
  }, {
    "id": 1415,
    "pathFragmentId": 2172
  }, {
    "id": 1416,
    "pathFragmentId": 2173
  }, {
    "id": 1417,
    "pathFragmentId": 2175
  }, {
    "id": 1418,
    "pathFragmentId": 2176
  }, {
    "id": 1419,
    "pathFragmentId": 2181
  }, {
    "id": 1420,
    "pathFragmentId": 2185
  }, {
    "id": 1421,
    "pathFragmentId": 2187
  }, {
    "id": 1422,
    "pathFragmentId": 2191
  }, {
    "id": 1423,
    "pathFragmentId": 2194
  }, {
    "id": 1424,
    "pathFragmentId": 2204
  }, {
    "id": 1425,
    "pathFragmentId": 2206
  }, {
    "id": 1426,
    "pathFragmentId": 2208
  }, {
    "id": 1427,
    "pathFragmentId": 2209
  }, {
    "id": 1428,
    "pathFragmentId": 2210
  }, {
    "id": 1429,
    "pathFragmentId": 2211
  }, {
    "id": 1430,
    "pathFragmentId": 2212
  }, {
    "id": 1431,
    "pathFragmentId": 2216
  }, {
    "id": 1432,
    "pathFragmentId": 2217
  }, {
    "id": 1433,
    "pathFragmentId": 2218
  }, {
    "id": 1434,
    "pathFragmentId": 2219
  }, {
    "id": 1435,
    "pathFragmentId": 2220
  }, {
    "id": 1436,
    "pathFragmentId": 2232
  }, {
    "id": 1437,
    "pathFragmentId": 2233
  }, {
    "id": 1438,
    "pathFragmentId": 2234
  }, {
    "id": 1439,
    "pathFragmentId": 2235
  }, {
    "id": 1440,
    "pathFragmentId": 2236
  }, {
    "id": 1441,
    "pathFragmentId": 2237
  }, {
    "id": 1442,
    "pathFragmentId": 2246
  }, {
    "id": 1443,
    "pathFragmentId": 2249
  }, {
    "id": 1444,
    "pathFragmentId": 2252
  }, {
    "id": 1445,
    "pathFragmentId": 2256
  }, {
    "id": 1446,
    "pathFragmentId": 2267
  }, {
    "id": 1447,
    "pathFragmentId": 2272
  }, {
    "id": 1448,
    "pathFragmentId": 2275
  }, {
    "id": 1449,
    "pathFragmentId": 2286
  }, {
    "id": 1450,
    "pathFragmentId": 2289
  }, {
    "id": 1451,
    "pathFragmentId": 2290
  }, {
    "id": 1452,
    "pathFragmentId": 2291
  }, {
    "id": 1453,
    "pathFragmentId": 2292
  }, {
    "id": 1454,
    "pathFragmentId": 2295
  }, {
    "id": 1455,
    "pathFragmentId": 2296
  }, {
    "id": 1456,
    "pathFragmentId": 2297
  }, {
    "id": 1457,
    "pathFragmentId": 2298
  }, {
    "id": 1458,
    "pathFragmentId": 2299
  }, {
    "id": 1459,
    "pathFragmentId": 2300
  }, {
    "id": 1460,
    "pathFragmentId": 2301
  }, {
    "id": 1461,
    "pathFragmentId": 2302
  }, {
    "id": 1462,
    "pathFragmentId": 2303
  }, {
    "id": 1463,
    "pathFragmentId": 2304
  }, {
    "id": 1464,
    "pathFragmentId": 2305
  }, {
    "id": 1465,
    "pathFragmentId": 2306
  }, {
    "id": 1466,
    "pathFragmentId": 2307
  }, {
    "id": 1467,
    "pathFragmentId": 2308
  }, {
    "id": 1468,
    "pathFragmentId": 2309
  }, {
    "id": 1469,
    "pathFragmentId": 2310
  }, {
    "id": 1470,
    "pathFragmentId": 2311
  }, {
    "id": 1471,
    "pathFragmentId": 2312
  }, {
    "id": 1472,
    "pathFragmentId": 2313
  }, {
    "id": 1473,
    "pathFragmentId": 2314
  }, {
    "id": 1474,
    "pathFragmentId": 2315
  }, {
    "id": 1475,
    "pathFragmentId": 2316
  }, {
    "id": 1476,
    "pathFragmentId": 2319
  }, {
    "id": 1477,
    "pathFragmentId": 2322
  }, {
    "id": 1478,
    "pathFragmentId": 2333
  }, {
    "id": 1479,
    "pathFragmentId": 2343
  }, {
    "id": 1480,
    "pathFragmentId": 2344
  }, {
    "id": 1481,
    "pathFragmentId": 2345
  }, {
    "id": 1482,
    "pathFragmentId": 2346
  }, {
    "id": 1483,
    "pathFragmentId": 2347
  }, {
    "id": 1484,
    "pathFragmentId": 2348
  }, {
    "id": 1485,
    "pathFragmentId": 2349
  }, {
    "id": 1486,
    "pathFragmentId": 2350
  }, {
    "id": 1487,
    "pathFragmentId": 2354
  }, {
    "id": 1488,
    "pathFragmentId": 2364
  }, {
    "id": 1489,
    "pathFragmentId": 2372
  }, {
    "id": 1490,
    "pathFragmentId": 2373
  }, {
    "id": 1491,
    "pathFragmentId": 2377
  }, {
    "id": 1492,
    "pathFragmentId": 2378
  }, {
    "id": 1493,
    "pathFragmentId": 2379
  }, {
    "id": 1494,
    "pathFragmentId": 2380
  }, {
    "id": 1495,
    "pathFragmentId": 2381
  }, {
    "id": 1496,
    "pathFragmentId": 2382
  }, {
    "id": 1497,
    "pathFragmentId": 2385
  }, {
    "id": 1498,
    "pathFragmentId": 2396
  }, {
    "id": 1499,
    "pathFragmentId": 2401
  }, {
    "id": 1500,
    "pathFragmentId": 2405
  }, {
    "id": 1501,
    "pathFragmentId": 2410
  }, {
    "id": 1502,
    "pathFragmentId": 2411
  }, {
    "id": 1503,
    "pathFragmentId": 2412
  }, {
    "id": 1504,
    "pathFragmentId": 2413
  }, {
    "id": 1505,
    "pathFragmentId": 2414
  }, {
    "id": 1506,
    "pathFragmentId": 2415
  }, {
    "id": 1507,
    "pathFragmentId": 2416
  }, {
    "id": 1508,
    "pathFragmentId": 2417
  }, {
    "id": 1509,
    "pathFragmentId": 2419
  }, {
    "id": 1510,
    "pathFragmentId": 2420
  }, {
    "id": 1511,
    "pathFragmentId": 2421
  }, {
    "id": 1512,
    "pathFragmentId": 2424
  }, {
    "id": 1513,
    "pathFragmentId": 2428
  }, {
    "id": 1514,
    "pathFragmentId": 2431
  }, {
    "id": 1515,
    "pathFragmentId": 2432
  }, {
    "id": 1516,
    "pathFragmentId": 2434
  }, {
    "id": 1517,
    "pathFragmentId": 2436
  }, {
    "id": 1518,
    "pathFragmentId": 2439
  }, {
    "id": 1519,
    "pathFragmentId": 2440
  }, {
    "id": 1520,
    "pathFragmentId": 2441
  }, {
    "id": 1521,
    "pathFragmentId": 2442
  }, {
    "id": 1522,
    "pathFragmentId": 2443
  }, {
    "id": 1523,
    "pathFragmentId": 2444
  }, {
    "id": 1524,
    "pathFragmentId": 2445
  }, {
    "id": 1525,
    "pathFragmentId": 2446
  }, {
    "id": 1526,
    "pathFragmentId": 2447
  }, {
    "id": 1527,
    "pathFragmentId": 2448
  }, {
    "id": 1528,
    "pathFragmentId": 2449
  }, {
    "id": 1529,
    "pathFragmentId": 2450
  }, {
    "id": 1530,
    "pathFragmentId": 2451
  }, {
    "id": 1531,
    "pathFragmentId": 2452
  }, {
    "id": 1532,
    "pathFragmentId": 2453
  }, {
    "id": 1533,
    "pathFragmentId": 2454
  }, {
    "id": 1534,
    "pathFragmentId": 2455
  }, {
    "id": 1535,
    "pathFragmentId": 2456
  }, {
    "id": 1536,
    "pathFragmentId": 2457
  }, {
    "id": 1537,
    "pathFragmentId": 2458
  }, {
    "id": 1538,
    "pathFragmentId": 2459
  }, {
    "id": 1539,
    "pathFragmentId": 2461
  }, {
    "id": 1540,
    "pathFragmentId": 2462
  }, {
    "id": 1541,
    "pathFragmentId": 2464
  }, {
    "id": 1542,
    "pathFragmentId": 2465
  }, {
    "id": 1543,
    "pathFragmentId": 2466
  }, {
    "id": 1544,
    "pathFragmentId": 2467
  }, {
    "id": 1545,
    "pathFragmentId": 2478
  }, {
    "id": 1546,
    "pathFragmentId": 2482
  }, {
    "id": 1547,
    "pathFragmentId": 2483
  }, {
    "id": 1548,
    "pathFragmentId": 2484
  }, {
    "id": 1549,
    "pathFragmentId": 2485
  }, {
    "id": 1550,
    "pathFragmentId": 2486
  }, {
    "id": 1551,
    "pathFragmentId": 2487
  }, {
    "id": 1552,
    "pathFragmentId": 2488
  }, {
    "id": 1553,
    "pathFragmentId": 2489
  }, {
    "id": 1554,
    "pathFragmentId": 2490
  }, {
    "id": 1555,
    "pathFragmentId": 2491
  }],
  "actions": [{
    "targetId": 1,
    "actionKey": "e135ae95b7341878532f6a9644c0728981ab5f25520521b66b8c51a615e08cff",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [1],
    "outputIds": [2],
    "primaryOutputId": 2,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "247d4b9d5f82e6248b6b87bdc0d007d770af88cdc1c1bcdd8bc443c4e36c8714",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [2],
    "outputIds": [4],
    "primaryOutputId": 4,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "9ffbffe311cbc1741746eda28b8347907663eb9b64ad57c5017fa92c6cd097b6",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [5],
    "primaryOutputId": 5,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "1c5d8f24a8a4bc04bd21b4fc96cd12d28c287fa601b34d0c6e1c7ccc36cb2ef8",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [3],
    "outputIds": [13],
    "primaryOutputId": 13,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "c280d2b6d1e1da2dc6695373be10fd6e293f4b5af719d32b8385311c06005449",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [14],
    "primaryOutputId": 14,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "5498c5849afcaba6e7b66971a53175eb8895ecca5853f86bdc907b4f894a2058",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [7],
    "outputIds": [9],
    "primaryOutputId": 9,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "4c75208c688b9990201220cbcdc5c215f185ba4878730c8c1e80713e395c3709",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [20],
    "primaryOutputId": 20,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 5,
    "actionKey": "e50e753fbd4f84530881f99e616f3241bd48c202cbe19bd833b8a25917048414",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [9],
    "outputIds": [6],
    "primaryOutputId": 6,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "a7dad957a6f656cc44a1aeedcc037fe8e265a39e557bfc265e09cb9e12f9163d",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [33],
    "primaryOutputId": 33,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "82fdd30bed096e778a1b6ae608f4496893128339df99d71e586a3630803ff179",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [11],
    "outputIds": [7],
    "primaryOutputId": 7,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "b80f8c1aa9f114ddbf2d74ff1472662ce68054b143bf127eb62b3dff4a8097c3",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [40],
    "primaryOutputId": 40,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "0031c771f7a9fdf448e93019233dad7e155aa3c6eda4acceb3a4c814a8e61d81",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [13],
    "outputIds": [8],
    "primaryOutputId": 8,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "3c1dba579a3e5ee26613294f6f60ba7432f2cdba8f0b4056216d08e1b2618d93",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [15],
    "outputIds": [178, 179],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 178,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "94928d1aed8f08471ceef9ca583a949bd40633ccd1cff71badb8af952d29c9fb",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [28],
    "outputIds": [181],
    "primaryOutputId": 181,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "151ca934d4b249a4a9bade6b8907ea145907bf8880d777a44c4270bff4fcea71",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [29],
    "outputIds": [185],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 185,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "e037d1d3335be2e2f4ddcbd7c0391af0fc9e7352cfcc384431b294185bdf909e",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [33],
    "outputIds": [186],
    "primaryOutputId": 186,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "4eef50031fc701660585f0e60a763048b9feb821b1d6af555d12fc9ba67dee90",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [34],
    "outputIds": [187],
    "primaryOutputId": 187,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "aee79bfc837868a0349c6e1aec423bd865161d7c76bdaa8b19ca135205badd9a",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [189],
    "primaryOutputId": 189,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/KotlinJvmAssociatesBasicVisibilityTest.jar:${RUNPATH}src/test/data/jvm/basic/test_associates_library.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/assertion_test_case.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-test.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.KotlinJvmAssociatesBasicVisibilityTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 8,
    "actionKey": "60d21e57ce2f37abc73b92dca72a5ace97d3053b869baff49097102d176ff175",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [190],
    "primaryOutputId": 190,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "5e63425973699c34fe2867215a7ee12c6a5809ffde8b33f24e8850b9e208bb07",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [36],
    "outputIds": [191],
    "primaryOutputId": 191,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [37],
    "outputIds": [319],
    "primaryOutputId": 319,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [49],
    "outputIds": [322, 323],
    "primaryOutputId": 322,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "927272a4e12b3c551c55851db57314025dd5a5f2053ed269c5e692401b048e6e",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [50],
    "outputIds": [325, 326],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 325,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "8bfd71f58d3ea3c60f7a69b900b2338fadacec3b224bc9764b2af6e22786ff60",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [54],
    "outputIds": [327],
    "primaryOutputId": 327,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "62b720e2ce971a983bd673720ca805772b685cf60d8e47656eaccb772f6d0190",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [55],
    "outputIds": [328],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 328,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "91b5acf61d3ec04009d994ef6d76bdb64a6900a37b2ddbd62336e3c8476e269b",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [59],
    "outputIds": [329],
    "primaryOutputId": 329,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "fbcab5ffe9eb8ef48d67cf75cfc5f34ef29502714bed5e9bb0c539825325961d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [60],
    "outputIds": [330],
    "primaryOutputId": 330,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "6bcb9ab5bd96045c5229563c83c7cd6ba7444b8634f580ae58c0096c3e2269f2",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [331],
    "primaryOutputId": 331,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/KotlinJvmKaptAssertionTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/assertion_test_case.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-test.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.KotlinJvmKaptAssertionTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 9,
    "actionKey": "3cbdb55beec09fe024aea00d0622a6482e931f89a37e4a91b7173607067f7360",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [332],
    "primaryOutputId": 332,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "e47eedee90122ff319e9a9de7100075223cf28749b671bdc9294fe1ae0ddad0b",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [61],
    "outputIds": [333],
    "primaryOutputId": 333,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [62],
    "outputIds": [350],
    "primaryOutputId": 350,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [76],
    "outputIds": [351, 352],
    "primaryOutputId": 351,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "c37076dd80d4e0ce8e7ed308d2a48267d8f10217b8d283f7917ce5f86333ac8e",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [77],
    "outputIds": [37],
    "primaryOutputId": 37,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 11,
    "actionKey": "829d57e41f0f981e3d6bac7fc852e6fc2b56549bab1df89ec23fe825eb1152a0",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [78],
    "outputIds": [36],
    "primaryOutputId": 36,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 12,
    "actionKey": "00fceb2f063721e29d09f6a79c89ee91c03ea5da01f7c5310ee0647b0669b610",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [79],
    "outputIds": [41],
    "primaryOutputId": 41,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "ff0c2d8b5712f5a20417534c531093f481b296483c67e4b48ca52d6a10010686",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [356],
    "primaryOutputId": 356,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "23bc039b026578e163cd82149601d90be10b50e939dd7b14317a5f82a846cd0b",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [80],
    "outputIds": [31],
    "primaryOutputId": 31,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "29171fd194dd7224140a949c91d776fe94572648d3e292b397527bb44159a1ef",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [82],
    "outputIds": [367, 368],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 367,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "efb844bdbdd1fd18718d4e1b3348ad49d5cf76b216dabe9016f90bc8dc30f9bc",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [86],
    "outputIds": [369],
    "primaryOutputId": 369,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "bdd0e9ef5cb1b8cffb45b97ae75f6d9071f0b1d1a2ae8acffa333893c916bf4f",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [87],
    "outputIds": [370],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 370,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "3685ef723197c4bd940b310bac3002dded2741ed52e08ff7c16673beb4511c5c",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [91],
    "outputIds": [371],
    "primaryOutputId": 371,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "596c4d98ca60b9974b1127d99b333c9897db2da1ab1025d7494c90d6ff8f43f5",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [92],
    "outputIds": [372],
    "primaryOutputId": 372,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "27d088e2c92679ca6166c6495579bb7e57e429f96ab2b44f33c032e58f3fe730",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [373],
    "primaryOutputId": 373,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/KotlinNormalizationAssertionTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/assertion_test_case.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-test.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.KotlinNormalizationAssertionTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 14,
    "actionKey": "81b69f496a00ac289620d96b643a355cbd4b7e10391d87192f3d210fc0cc3f4f",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [374],
    "primaryOutputId": 374,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "f946d18905775caf3ba48498aabc67dda37bffb9eca2acc000bb3731b105e69f",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [93],
    "outputIds": [375],
    "primaryOutputId": 375,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [94],
    "outputIds": [393],
    "primaryOutputId": 393,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [107],
    "outputIds": [394, 395],
    "primaryOutputId": 394,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 15,
    "actionKey": "e020e6d29189a45da7ad8ff16547807e152c5133037ef3011a5017c2d28c0cf9",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [396],
    "primaryOutputId": 396,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 15,
    "actionKey": "409b8a6dfbbd7031576ee451c9bffc225387668deb7ec47555d1c96373f4fe89",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [108],
    "outputIds": [39],
    "primaryOutputId": 39,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 16,
    "actionKey": "8e537b45138799969aef017d9d61a94e05fba45698b8a4796522625acb999f26",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [110],
    "outputIds": [18],
    "primaryOutputId": 18,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "894c68dc924de9e33ece19d6fb7453f19dd96bff80fbc294c1fa34762dc4b303",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [400],
    "primaryOutputId": 400,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "398586f10a8d4d0265f2aabddaaf22897ed6b7b7846362e3057b7f6fe8fc84b2",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [401],
    "primaryOutputId": 401,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "7a5854efc4cf6894bd5648594ccf85ba65533b5916a787d19bf7a1fa83189f3f",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [111],
    "outputIds": [402],
    "primaryOutputId": 402,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [112],
    "outputIds": [403],
    "primaryOutputId": 403,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [113],
    "outputIds": [404, 405],
    "primaryOutputId": 404,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "894c68dc924de9e33ece19d6fb7453f19dd96bff80fbc294c1fa34762dc4b303",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [406],
    "primaryOutputId": 406,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "2cbfdb0a8ec941fc5d2b5baeea8699e51118e8b3da0eb638354cab3756c0d6aa",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [407],
    "primaryOutputId": 407,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "065b48eb45da6dffdc741bf5ebd0a8274052ef74c070dbeebf4e1b3d17abefe4",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [114],
    "outputIds": [408],
    "primaryOutputId": 408,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [115],
    "outputIds": [409],
    "primaryOutputId": 409,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [116],
    "outputIds": [410, 411],
    "primaryOutputId": 410,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 19,
    "actionKey": "f9503a33f60646b52115d614b0704f7f909dd19007b980febd75280022276d01",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [412],
    "primaryOutputId": 412,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 19,
    "actionKey": "ce0ad983a015b0c943119c6d2053fdb2812e1af47a52de30c7f492f2e2e2f023",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [117],
    "outputIds": [32],
    "primaryOutputId": 32,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "523ed4433827737f1523fc8cde5e60dbe9774a62c77ca03f419c151438abf17c",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [119],
    "outputIds": [415, 416],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 415,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "e1e5c5e57e9f590edd37ecbc787a6a36a2067f8e3595cb99c70c1e02f3988b31",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [123],
    "outputIds": [417],
    "primaryOutputId": 417,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "b6011e77c18df5717e5efa94293bd43fe1e41a6a98243dc6eb08c2df0a22ab48",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [124],
    "outputIds": [418],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 418,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "245ee2a83d21c8d81b352fb01bdf5c41bcf7689c60a0708debd54dc36490db2b",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [128],
    "outputIds": [419],
    "primaryOutputId": 419,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "8ef572f8ed562c51d923d96b48d234915b43c8ced27a67e2882fea033e09a85d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [129],
    "outputIds": [420],
    "primaryOutputId": 420,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "43caeb3573a8e6ef483dece04084b36d886b7ceeac21a41bea152e6c3d05b1bd",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [421],
    "primaryOutputId": 421,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/KotlinJvmBasicAssertionTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/assertion_test_case.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-test.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.KotlinJvmBasicAssertionTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 20,
    "actionKey": "78f2310cc2a39652f8190d037dd44ef8526db9ee16a7dbb705610453e4eb6034",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [422],
    "primaryOutputId": 422,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "17e08fc39fe8b777a5022265374d17e98da721c46c13ce740f66730cd07d21e2",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [130],
    "outputIds": [423],
    "primaryOutputId": 423,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [131],
    "outputIds": [424],
    "primaryOutputId": 424,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [137],
    "outputIds": [425, 426],
    "primaryOutputId": 425,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 21,
    "actionKey": "0da288bf7134b9f1903b6c8634b2c2b95aa2b238a839b859b86c7653d4c6a2ac",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [427],
    "primaryOutputId": 427,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 21,
    "actionKey": "8f6f5d2bdc4fca306a20ad84c56f292899a43cff560c55c937ab65542d4286d1",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [138],
    "outputIds": [42],
    "primaryOutputId": 42,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 22,
    "actionKey": "98dcc2c8386646344dc9c61bfda4f0164459cb8b725f25c6c4c8016f52cc02e1",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [140],
    "outputIds": [19],
    "primaryOutputId": 19,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 23,
    "actionKey": "0023adb5e1c69d0e09f33cbc9d4e9d65ceb4ced54d89ac581bd691b2b7d74181",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [141],
    "outputIds": [30],
    "primaryOutputId": 30,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 24,
    "actionKey": "3278163dcc97fb232485c3eb818b2b917b055b4a6fcf644df21f10238a8c853f",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [142],
    "outputIds": [38],
    "primaryOutputId": 38,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "63f7d1ca6537b537ebb67748a1c3e5c3eea8932c7bb368a9199c279a238ec111",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [143],
    "outputIds": [436, 437],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 436,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "7fec341fe70522cbb8aea8de9c3dd194b00814aec4ae4f2738e3b4f5406ff651",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [147],
    "outputIds": [438],
    "primaryOutputId": 438,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "0af366de87a0e9f558b202797dd36fc945696137621b18fe1f38c6e66c509761",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [148],
    "outputIds": [439],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 439,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "7e79eb32c3370d94880a2d7c8f1919ba906fe5b1b1e24fc351b5c46f3a7c5869",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [152],
    "outputIds": [440],
    "primaryOutputId": 440,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "a70f48af28064886141feccee9899245dd38b1f14de8045485d62584f649c9e8",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [153],
    "outputIds": [441],
    "primaryOutputId": 441,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "79a5e4f8c100c950a0bfaf24837302f8777fc702250fcb21e0c8d4e9b281b806",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [442],
    "primaryOutputId": 442,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/KotlinJvm13Test.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/assertion_test_case.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-test.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.KotlinJvm13Test"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 25,
    "actionKey": "8f1e183e9892246e8a52652aa26662b3a88b962d06f5432a6fdcb603f28502c9",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [443],
    "primaryOutputId": 443,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "69e2c626c7de248f17b2a4437bb24b24679b5b987f573c7b3808fab9e38c9bf7",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [154],
    "outputIds": [444],
    "primaryOutputId": 444,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [155],
    "outputIds": [445],
    "primaryOutputId": 445,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [161],
    "outputIds": [446, 447],
    "primaryOutputId": 446,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 26,
    "actionKey": "ca4f47c0908ad19f1835d8c9c857c1893a8aa85f90f5624a33672e3a7af75cf8",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [162],
    "outputIds": [29],
    "primaryOutputId": 29,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 27,
    "actionKey": "db09d8b413d6dec5be669c043feb54b946cef292f16355d76ac3732031ccfb9d",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [163],
    "outputIds": [398],
    "primaryOutputId": 398,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 28,
    "actionKey": "faca8217b6c71ed0eb24dc9d0db0731ab7aeafbee2b48d5edbbe1eef61414866",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [449],
    "primaryOutputId": 449,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 28,
    "actionKey": "d85c17353a207546221795b837f7c176a43af2b1e6a255db7c0892914bb05064",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [164],
    "outputIds": [431],
    "primaryOutputId": 431,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 29,
    "actionKey": "d2eeb458a6d6f81d4197cd291694ac28c0de3ff52c1be5195b238a5fbd798b53",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [166],
    "outputIds": [413],
    "primaryOutputId": 413,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "ee9a161d5d0bcfa501c63d34c9d95ba41fe4057833dcf459aad6effe4391d7b3",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [167],
    "outputIds": [471, 472],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 471,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "83d13b5ab15286d86485efc22b5aa45f62db806ecd4ac0a169f51d04413dcd9e",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [179],
    "outputIds": [473],
    "primaryOutputId": 473,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "25fe0b0d9e1c50d967c80f68f17837148ee24f087e0410f4131c72ef20950cfe",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [180],
    "outputIds": [474],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 474,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "0558eaab9c3183c195b31142f43baad1268c888dcb2fe5ffd5e1e0ed08bd461b",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [184],
    "outputIds": [475],
    "primaryOutputId": 475,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "ce09503b3ad5279b6c0f6a36f62f93e8ce8f42f2dbbd011828945049a998171e",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [185],
    "outputIds": [476],
    "primaryOutputId": 476,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "e3fb278d6563e95beea2e77daafabaa0932ed185d35bbd0bfca213622dec892a",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [477],
    "primaryOutputId": 477,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmJdepsTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmJdepsTest -D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -D.JdepsParserTestFixtures\u003dio_bazel_rules_kotlin/src/test/kotlin/io/bazel/kotlin/builder/tasks/libJdepsParserTestFixtures.jar"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 30,
    "actionKey": "98e32722418ab6d92dad5705bf1774637b38dcc4fb24ec5a299c6dbb71abcf6d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [478],
    "primaryOutputId": 478,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "46307f042912f0771cd8eca55175a5447ab20204d9314ba1e3230307f58b9ca6",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [186],
    "outputIds": [479],
    "primaryOutputId": 479,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [187],
    "outputIds": [507],
    "primaryOutputId": 507,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "fec6e3a563409a6251d7903c54a79a6130129a9ee23e66a964b494099fda56f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [230],
    "outputIds": [508, 509],
    "primaryOutputId": 508,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "9584c80f7ef569e0033d976baff623e6cc0af20ee487f9e15a316d49fa922b88",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [231],
    "outputIds": [511, 512],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 511,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "77bfe42c2a4518d487110624246e56a17d9748a729aefd550292679f7408c5d3",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [236],
    "outputIds": [52],
    "primaryOutputId": 52,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "9e29f435db5b6f60f9e941feeeaf1301b5d0d23cff8e05e66c33d8f55f80ebf0",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [237],
    "outputIds": [513],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 513,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "e63ad6c483c10e8c58c22f61214642c4e96c4d49eaf3b3ea6e4eab6be537d293",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [240],
    "outputIds": [192],
    "primaryOutputId": 192,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "58d2dedea3e57a94b623562735ef5c6a65945d17863543c9634ec449bc64393f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [241],
    "outputIds": [514],
    "primaryOutputId": 514,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "10c37356c4439893e28295c17c2549658b7956877da69eb512925cc8c5baa8e4",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [242],
    "outputIds": [635, 636, 637, 638],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/JdepsParserTest.jdeps"
    }],
    "primaryOutputId": 635,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "c9c8bda18c0cc2fe0a3f72db26604c00b46e303b63bef75c53dfa2cd59caddf9",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [255],
    "outputIds": [639],
    "primaryOutputId": 639,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "cdeb300fbc42015ca29ddc2e8930c2b2e8f6a596854e0929d25ddc2c8d87e73a",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [640],
    "primaryOutputId": 640,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/JdepsParserTest.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.JdepsParserTest"
    }]
  }, {
    "targetId": 32,
    "actionKey": "60093d9c8124e4523cb64be472e119d684dcd7fce43fb7109c1c75f09e206013",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [256],
    "outputIds": [664],
    "primaryOutputId": 664,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "5b03a2a5a39a040e9f123eaa396e7fe5ef527fd7f06bb4a79e50e729b51fbf4d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [665],
    "primaryOutputId": 665,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "3b00bbc327bdc10987ce2dee7e8e1bf4e05e188e541c83a7329094452871f47a",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [269],
    "outputIds": [666],
    "primaryOutputId": 666,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [270],
    "outputIds": [667],
    "primaryOutputId": 667,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "740f95925fb93c241a5cb0acaf01305ee2b47b0c20b80349b3b733db7b7eb875",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [280],
    "outputIds": [669],
    "primaryOutputId": 669,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [670],
    "primaryOutputId": 670,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "f178911ab5cedfbf93fc8813dfbc8faf9b5aa5d825cc5e519e934707d5d403aa",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [282],
    "outputIds": [671, 672],
    "primaryOutputId": 671,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 33,
    "actionKey": "038f2668122e95f003cc9c0025f20b2d2fd4220145cca90cb80d15689509d111",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [673],
    "primaryOutputId": 673,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 33,
    "actionKey": "670ec6c58d080dce440ba75255453ea450263eb92af0e6c7f0195158c5ce3e51",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [283],
    "outputIds": [363],
    "primaryOutputId": 363,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 34,
    "actionKey": "d21f5807f58f648269dc43c7306b75bfde16d88fb5831aa4552a2310f30d0bb0",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [285],
    "outputIds": [34],
    "primaryOutputId": 34,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 35,
    "actionKey": "d92bca747059170701e0c740fa45f1d31b584cd96651406eeddebea0fb7c23aa",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [289],
    "outputIds": [35],
    "primaryOutputId": 35,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "3dd1c9eabe69d11aa2ab3dabbb731aa780e921ac39c5a08d23e68d4f4f106637",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [688],
    "primaryOutputId": 688,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "67b18f6147ab71938b5315bc41c13fe65e8ffeda65e376628ead3b3d64a0f83c",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [291],
    "outputIds": [362],
    "primaryOutputId": 362,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "2b78bf85752e39a2b5fd36f08de1af6960549e27098338745588250c27fd7b97",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [293],
    "outputIds": [695, 696, 697, 698],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/utils/SourceJarCreatorTest.jdeps"
    }],
    "primaryOutputId": 695,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "464c4195b677579c7bd20b51f5b2f154f8ac8e2f8478609adcd132a55947cc58",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [299],
    "outputIds": [699],
    "primaryOutputId": 699,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "a96ad23a29002be2269323e93f4486fc2add4097383d8b0cf9d36b2b72434f8c",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [700],
    "primaryOutputId": 700,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/utils/SourceJarCreatorTest.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.utils.jars.SourceJarCreatorTest"
    }]
  }, {
    "targetId": 37,
    "actionKey": "385188b4479f87375104f05bc1d66c6c1d49f31137a0f0554de48d5bd66bd03e",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [300],
    "outputIds": [701],
    "primaryOutputId": 701,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "77ba9aeb2c33a6b6808a9e34d16b73a1e7619cfdeefe26a739776481cbd01f30",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [702],
    "primaryOutputId": 702,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "c295ba64f04b9ac3d3800721c4a48a31abd7de4f54a8f7f5b221e01d973a0459",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [302],
    "outputIds": [703],
    "primaryOutputId": 703,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [303],
    "outputIds": [704],
    "primaryOutputId": 704,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "eec249b8e6a389bd6da8a53cc2e471560bbf5e7db0fbb494dc5997eb9baf05f0",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [308],
    "outputIds": [705],
    "primaryOutputId": 705,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [706],
    "primaryOutputId": 706,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "f178911ab5cedfbf93fc8813dfbc8faf9b5aa5d825cc5e519e934707d5d403aa",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [310],
    "outputIds": [707, 708],
    "primaryOutputId": 707,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "470785aa91108e252892b9312f669e172e3ad5651aab25915c751f6bfe38fd0f",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [311],
    "outputIds": [710, 711],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 710,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "e3c63662da731ce10f13ce471370cf6b087b97d3f58a45c806bae53b17b19ee5",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [315],
    "outputIds": [712],
    "primaryOutputId": 712,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "eb03b9cc67b1d135317c55dfd90f4198833d755a102424d7a409d80f0efc2e52",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [316],
    "outputIds": [713],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 713,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "f20f5741e3a3f74ab0a72419ea1572ae0000788cd89b406c62ff59974e8656e6",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [320],
    "outputIds": [714],
    "primaryOutputId": 714,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "dc251631ae6a452a930fdc48f569abbeb48c9406b21b660a1004b753138e7f23",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [321],
    "outputIds": [715],
    "primaryOutputId": 715,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "95e8762b42b51bc9969818b2ca482b336372f879d331af1d59933b9606b91063",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [716],
    "primaryOutputId": 716,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmStrictDepsTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmStrictDepsTest -D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 38,
    "actionKey": "5f03a69bb377df311400ce7d596f62e9d349e148b4d05649457274a4f1d7d848",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [717],
    "primaryOutputId": 717,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "1b6f91c61c9e626116bc233a53838be2a379b59a3ec12c25480b98a83d7aaea4",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [322],
    "outputIds": [718],
    "primaryOutputId": 718,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [323],
    "outputIds": [719],
    "primaryOutputId": 719,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "fec6e3a563409a6251d7903c54a79a6130129a9ee23e66a964b494099fda56f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [329],
    "outputIds": [720, 721],
    "primaryOutputId": 720,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 39,
    "actionKey": "af89110e42859a4125802cfa7ab8f411e7c77bff78f6ab5b62d4982ab2e75d4d",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [722],
    "primaryOutputId": 722,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 39,
    "actionKey": "d6427fe1615f19c4c685cf4dd9c1232731d4a6b0bdc48fac467b3d7ccbdbdc70",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [330],
    "outputIds": [365],
    "primaryOutputId": 365,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "2d599f0ecc6ad500ca2cd6a4d0d77593506cddb119e56ec4b494186d69108fb9",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [332],
    "outputIds": [729, 730, 731, 732],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmBasicTest.jdeps"
    }],
    "primaryOutputId": 729,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "a7a0ec8a027fb689e665163c24fe50c5a05c62ca16c99e9662511d466e5e8743",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [338],
    "outputIds": [733],
    "primaryOutputId": 733,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "308e534dffc162252567ddc1171522a3b2fd7afe0748c6165efa151601af5f8f",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [734],
    "primaryOutputId": 734,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmBasicTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmBasicTest"
    }]
  }, {
    "targetId": 40,
    "actionKey": "7073305b8b1fe15e46fbcac7f6d1f893cf43edb17a7df1e3b173ad1c18024aed",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [339],
    "outputIds": [735],
    "primaryOutputId": 735,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "0b64d9bd7da268ce03feacc4c286c2c5d8b1eb699ab9471ed0d0ef76dbafa22b",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [736],
    "primaryOutputId": 736,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "db7761cb34cf8b9ba404913317fb2092f1201f8eebce7e6c997362b5798d3671",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [341],
    "outputIds": [737],
    "primaryOutputId": 737,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [342],
    "outputIds": [738],
    "primaryOutputId": 738,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "4be64ded2cd778d09f5fd9f0fc9dd5cec8f897dabd5e41827d1213a1da69d71c",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [347],
    "outputIds": [739],
    "primaryOutputId": 739,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [740],
    "primaryOutputId": 740,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "d3804e7f5ad4e42d9fea7ea5a12b8f12f494cab9126abda2240f1f2428340433",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [349],
    "outputIds": [741, 742],
    "primaryOutputId": 741,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "dad9e2fd7bff2f9047be3e13ab3d3f563f6f5bda7748bf8ceba7cc7ab41006e2",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [350],
    "outputIds": [744, 745],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 744,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "0bfb3d75ade9da6c2edf51e31e7c0de76e262f38141212f3b4709e595eb90516",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [354],
    "outputIds": [43],
    "primaryOutputId": 43,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "9b6d55a316d45c784ac10c0ce4ef426ba7492f5676163de2cd4a873bd0dd7328",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [355],
    "outputIds": [746],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 746,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "23207843c993c0de7a858176dd9fde00e447637d527ae705aa2988d5d032f4c5",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [359],
    "outputIds": [206],
    "primaryOutputId": 206,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "e5080064595d7a39cc3a2c942ec0adfd033809bdc8227ca6376259afe67e0af8",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [360],
    "outputIds": [747],
    "primaryOutputId": 747,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "369cdc5efbadc14fbd1050869de92379d0ce7f9e723115bee70dbe25eec2f112",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [361],
    "outputIds": [749, 750, 751, 752],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmKaptTest.jdeps"
    }],
    "primaryOutputId": 749,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "d99882ad4b1a527da2cded0362cd2ee71b01bb950755ec383ed249349126e9fc",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [367],
    "outputIds": [753],
    "primaryOutputId": 753,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "79fd09a8906c4e3d105318594d2f81ffeb5e3d2e8f0b41154e99f64ca42e17a1",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [754],
    "primaryOutputId": 754,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmKaptTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -Dauto_value\u003dkotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value/1.10.1/auto-value-1.10.1.jar -Dauto_value_annotations\u003dkotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmKaptTest"
    }]
  }, {
    "targetId": 42,
    "actionKey": "e3d4edd668f9a5dc0a4fc3dc3bfe2ccffbd6092502c647726179184db16dea1f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [368],
    "outputIds": [755],
    "primaryOutputId": 755,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "0c9facf8ff16a415e1a8e33298569c38fb8003cbbfbfcd3c9c06e81968e6532a",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [756],
    "primaryOutputId": 756,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "d440d82751c6fa91478bd8e81b8818b8a524bee2b3198540351906a7af74a4ab",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [370],
    "outputIds": [757],
    "primaryOutputId": 757,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [371],
    "outputIds": [759],
    "primaryOutputId": 759,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "5473de591a5b0340d6bda251908b9e9455b2509d2f66e6f43918a1d582f006b1",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [376],
    "outputIds": [760],
    "primaryOutputId": 760,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [761],
    "primaryOutputId": 761,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 42,
    "actionKey": "f178911ab5cedfbf93fc8813dfbc8faf9b5aa5d825cc5e519e934707d5d403aa",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [378],
    "outputIds": [762, 763],
    "primaryOutputId": 762,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "c57b1e00e5e9e52f99f22c5599eca0351997e93435822846b8c40d5419298cf2",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [379],
    "outputIds": [765, 766, 767, 768],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJsTest.jdeps"
    }],
    "primaryOutputId": 765,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "9197c061103c2177a707c94c3a1c8980553f8de331c498a5009179cdea66de03",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [385],
    "outputIds": [769],
    "primaryOutputId": 769,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "8e3aef2d2bd12b704ebcd477e1db74996764750c0b9b42ba1546e91b78355dbc",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [770],
    "primaryOutputId": 770,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJsTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.js.KotlinBuilderJsTest"
    }]
  }, {
    "targetId": 43,
    "actionKey": "5140b527b530e90a6eeb806dbf537af5f12a4b70f2394664e2ad06c381e78bfa",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [386],
    "outputIds": [771],
    "primaryOutputId": 771,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "be6104017a759e88d65ebe115c84ead4966905d0984d9dba40c13c29ccd31364",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [772],
    "primaryOutputId": 772,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "fcdf985f9ff52d0d1b521832a0a6d90df6930a2d179fbcefd47572d183cb8b2b",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [388],
    "outputIds": [773],
    "primaryOutputId": 773,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [389],
    "outputIds": [774],
    "primaryOutputId": 774,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "99f919465d1fa25be4255177ddfce6a7b778cec3d3c66959d7e91634aebb729d",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [394],
    "outputIds": [775],
    "primaryOutputId": 775,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [776],
    "primaryOutputId": 776,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 43,
    "actionKey": "f178911ab5cedfbf93fc8813dfbc8faf9b5aa5d825cc5e519e934707d5d403aa",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [396],
    "outputIds": [777, 778],
    "primaryOutputId": 777,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 44,
    "actionKey": "b6fe8c60e3b467d2117d97c69cb865efb458b4b6998c06c6ff1166ab960ae787",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [397],
    "outputIds": [361],
    "primaryOutputId": 361,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 45,
    "actionKey": "420f2d4bdf74a87ff5e664abdc8b1829d06a01332f83314011c6fdc507a94d12",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [780],
    "primaryOutputId": 780,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 45,
    "actionKey": "d139e9a442e887bac384e451653f58d0cbef3657ba9af3bf419e786958482077",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [398],
    "outputIds": [364],
    "primaryOutputId": 364,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 46,
    "actionKey": "3ccc6022c8f049cc370530b0ac1ff3e8605ca0db04b06581de2b40d86e644253",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [400],
    "outputIds": [397],
    "primaryOutputId": 397,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 47,
    "actionKey": "ed0eff970bb32c0f86f158623e5686bfdf33d1e821cd4a850d1daf58fe823634",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [786],
    "primaryOutputId": 786,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 47,
    "actionKey": "066ba88cf78763f718d3549f5a0749cf889879012fe60fcc2b479dc32455c07e",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [401],
    "outputIds": [430],
    "primaryOutputId": 430,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "b90a85d04e30328c0db335775afccd5f7b907766eadd9586adbd96e4228c7f56",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [403],
    "outputIds": [793, 794],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 793,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "40c38070752a53187a6e210d6e9bdea12cfc052ec1e61a4209441c5ccbd78b17",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [407],
    "outputIds": [795],
    "primaryOutputId": 795,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "48f2500d77a50443941d70a834891b5912a9237780942e43aeabeb59a988eab3",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [408],
    "outputIds": [796],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 796,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "9c88354f7a74bfd89a7928fb6cb601ca158193cd5017076e21223fa9b0cb4e1b",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [412],
    "outputIds": [797],
    "primaryOutputId": 797,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "9a566bfe49336c2309bf1f88f71fdbc04c07a64c1742ef05f1b4ebc49c2c2a8c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [413],
    "outputIds": [798],
    "primaryOutputId": 798,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "f21b15bcae5ceae713eab62522c8173084d794ff0c36a15c5455f0c5365ac65e",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [799],
    "primaryOutputId": 799,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/utils/ArgMapTest.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.utils.ArgMapTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 48,
    "actionKey": "2bf36253b65e1165fe4450bd4a939db70d33614412f640125abe60a73c1bca2c",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [800],
    "primaryOutputId": 800,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "9c3a827f10672a695db5772f3037c0a485c925f993ab09b34070a9d64fe9d27d",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [414],
    "outputIds": [801],
    "primaryOutputId": 801,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [415],
    "outputIds": [802],
    "primaryOutputId": 802,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 48,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [421],
    "outputIds": [803, 804],
    "primaryOutputId": 803,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "75d6ca9d189b774f14f41dfcc84f8633a86d8240373a81e9dd3b8b0ba6abf446",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [422],
    "outputIds": [807, 808],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 807,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "1052799188df285dbee073c0a5ad38f8f34fc50b1097ac3586ffd5897b3b839e",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [427],
    "outputIds": [809],
    "primaryOutputId": 809,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "4ddd9a2554a96ecf7088267f59b28f013e82d6b93dd4d6bb4a788d6dd80b643d",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [428],
    "outputIds": [810],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 810,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "9c597c99d88f646e88d6479d11202978b9986253abf6dec094e5df140f961a78",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [432],
    "outputIds": [811],
    "primaryOutputId": 811,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "ecd92ba70d61f73059b1b934e80401dd5b5b72a02e3f9d8a8bcceff84e653ae5",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [433],
    "outputIds": [812],
    "primaryOutputId": 812,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "794b3105a41df3e463dec6d0dda2a014d0820aad42a478409e5d6227f37887b9",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [813],
    "primaryOutputId": 813,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/utils/JarCreatorTest.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/test/kotlin/io/bazel/testing/testing.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.utils.jars.JarCreatorTest"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 49,
    "actionKey": "c216bc19b252b9915e3c60ddd1b321b73dfc92ce643ca53a001f2f58a02b5ad5",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [814],
    "primaryOutputId": 814,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "89fe7940e375c19472f8267e13f89e0d07ed2d9ff0073acec5523bbddbf18155",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [434],
    "outputIds": [815],
    "primaryOutputId": 815,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [435],
    "outputIds": [817],
    "primaryOutputId": 817,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 49,
    "actionKey": "9749500cfbb9195856d026859fa88e341dc04681ede6d228d6830e7ef8d12088",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [442],
    "outputIds": [818, 819],
    "primaryOutputId": 818,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 50,
    "actionKey": "635633298b250586f0dcc4b19faa9fd950746187a5ac257754b7feb2e2b0fccb",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [443],
    "outputIds": [15],
    "primaryOutputId": 15,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "9c0e0196aebc25c13bf6889e2052f422da5d4fce75a69cd60e4326407f79939c",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [444],
    "outputIds": [823, 824],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 823,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "c4d043516ca598ded697e272b9b2448c4aadd9f7ed8e139f76aab8ac87c05818",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [448],
    "outputIds": [825],
    "primaryOutputId": 825,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "744164c340d9b821958e918fd55c7e02ed2ca89b902b2ff33bdc7748856247f8",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [449],
    "outputIds": [826],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 826,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "dfbec947cacbcddcf877b64477a5a874ec045271cd23667d6a876a0836ab19aa",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [453],
    "outputIds": [827],
    "primaryOutputId": 827,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "15298145e9e17d2e8597630313b634c5b902a62c50b82331483046d47253b620",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [454],
    "outputIds": [828],
    "primaryOutputId": 828,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "7c848418e851dcaaa32ff2dc4097c19ea21ccf4000108a8499caab74ace747c3",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [829],
    "primaryOutputId": 829,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmCoverageTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmCoverageTest -D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 51,
    "actionKey": "a870ea6003536cad4de168ef6a24f49aaef7df70c1fd6116ca51da67405c88cb",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [830],
    "primaryOutputId": 830,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "ca4f35a6f89af9a48e9d155ee48499a37ccfeaab976761ef496ecb46297c1504",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [455],
    "outputIds": [831],
    "primaryOutputId": 831,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [456],
    "outputIds": [832],
    "primaryOutputId": 832,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 51,
    "actionKey": "fec6e3a563409a6251d7903c54a79a6130129a9ee23e66a964b494099fda56f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [462],
    "outputIds": [833, 834],
    "primaryOutputId": 833,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "40f82582fd5d56d0fec0458d9b23d8278ff43f0aeb6b42b61af261934c2721a9",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [463],
    "outputIds": [836, 837, 838, 839],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmAbiTest.jdeps"
    }],
    "primaryOutputId": 836,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "6e84cfcc77609a1d47cd8495fed839d176d6f756255afae6164f3aae1dcf43e4",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [469],
    "outputIds": [840],
    "primaryOutputId": 840,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "3be0131c4ede514ead427ae12e6d2744a027ef3e2f9ab841791954db8e8ee616",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [841],
    "primaryOutputId": 841,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/KotlinBuilderJvmAbiTest.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%jvm_flags%",
      "value": "-D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.KotlinBuilderJvmAbiTest"
    }]
  }, {
    "targetId": 52,
    "actionKey": "bea471ece960a7d06ba859593223316b01b393e0e3bb4e7a025d08d66972f026",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [470],
    "outputIds": [842],
    "primaryOutputId": 842,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "ed2fd10cc9b657508543d3c2c59984c8434b413ad08903959209f8e7ed7f25ef",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [843],
    "primaryOutputId": 843,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "475501bd76ce6522fd59c89ef530360bc4b1a78f799643a71119a80c0ee1aa5b",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [472],
    "outputIds": [844],
    "primaryOutputId": 844,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [473],
    "outputIds": [845],
    "primaryOutputId": 845,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "fe0ab2d116c162ccc14b49c3b324b9e0c1d61b2c00353dfb810ef870b0b9b3ca",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [478],
    "outputIds": [846],
    "primaryOutputId": 846,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [847],
    "primaryOutputId": 847,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 52,
    "actionKey": "f178911ab5cedfbf93fc8813dfbc8faf9b5aa5d825cc5e519e934707d5d403aa",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [480],
    "outputIds": [848, 849],
    "primaryOutputId": 848,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 53,
    "actionKey": "cac3e6e43681cfee4ff529780949112025bf929d3ce0a009b57fec15cfadb1ad",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [481],
    "outputIds": [429],
    "primaryOutputId": 429,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "ab4997ef3b9595aa5e943d5875085aa57acde97802b720398fef06b72e312bec",
    "mnemonic": "KotlinCompile",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [482],
    "outputIds": [852, 853],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 852,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "aa4c84c84d9aadc1debaa4c4986ac310de2958a4c78d8e4a9728c535925036c3",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 2,
    "inputDepSetIds": [486],
    "outputIds": [854],
    "primaryOutputId": 854,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "c0fb58dde5ebbc2691f6ebcbb685f28df7570e803ddf7ccfd422b174582a897e",
    "mnemonic": "JdepsMerge",
    "configurationId": 2,
    "inputDepSetIds": [487],
    "outputIds": [855],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 855,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "5403a995dc0e755f4aefc40c9ac7b5d0446f36b70557d89b760b83670f688656",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 2,
    "inputDepSetIds": [491],
    "outputIds": [856],
    "primaryOutputId": 856,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "ce920f56c491dbb8c6f0f7ee45fc26e9e3f5c25b97cb16f757422e3af39fd24d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [492],
    "outputIds": [857],
    "primaryOutputId": 857,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "a56c311332587dd9adcc29e275c740faf2705369a511abd6b30a47adaac984f5",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "inputDepSetIds": [35],
    "outputIds": [858],
    "primaryOutputId": 858,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/tasks/JdepsMergerTest.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/tasks/tasks.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/toolchain/toolchain.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/utils.jar:${RUNPATH}src/main/protobuf/libkotlin_model_proto-speed.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/librunfiles.jar:${RUNPATH}../bazel_tools/tools/java/runfiles/libauto_bazel_repository.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java-util/3.6.0/protobuf-java-util-3.6.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/gson/gson/2.7/gson-2.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/guava/guava/31.0.1-jre/guava-31.0.1-jre.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.7.1/error_prone_annotations-2.7.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.12.0/checker-qual-3.12.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-preloader.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker.jar:${RUNPATH}src/main/kotlin/io/bazel/worker/worker_proto_bundle_bin_deploy.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/dagger/dagger/2.43.2/dagger-2.43.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/annotations-13.0.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/truth/truth/0.45/truth-0.45.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/googlecode/java-diff-utils/diffutils/1.3.0/diffutils-1.3.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/repo1.maven.org/maven2/com/google/auto/value/auto-value-annotations/1.10.1/auto-value-annotations-1.10.1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:${RUNPATH}../remote_java_tools/java_tools/JacocoCoverage_jarjar_deploy.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-reflect.jar:${RUNPATH}../remote_java_tools/java_tools/Runner_deploy.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "com.google.testing.junit.runner.BazelTestRunner"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%",
      "value": "-ea -Dbazel.test_suite\u003dio.bazel.kotlin.builder.tasks.jvm.JdepsMergerTest -D..src.main.kotlin.io.bazel.kotlin.compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D..src.main.kotlin.skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D..src.main.kotlin.jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -D@com_github_jetbrains_kotlin...annotations\u003dcom_github_jetbrains_kotlin/lib/annotations-13.0.jar -D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk7\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk7.jar -D@com_github_jetbrains_kotlin...kotlin-stdlib-jdk8\u003dcom_github_jetbrains_kotlin/lib/kotlin-stdlib-jdk8.jar -D@com_github_jetbrains_kotlin...kotlin-annotation-processing\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 54,
    "actionKey": "8711df43ea69797ee2169196c39d9919e35c4e975d78cdddc3ad4a553e1249f7",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [859],
    "primaryOutputId": 859,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "24a7880b27dca7c3661af132de6a4a540462c0848f9f8cde2dd564c276715b27",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [493],
    "outputIds": [860],
    "primaryOutputId": 860,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [494],
    "outputIds": [861],
    "primaryOutputId": 861,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 54,
    "actionKey": "8ffa9a197a4ceb253e421bb21072728de0c16182c6b577f6c27313d8305ff5f3",
    "mnemonic": "TestRunner",
    "configurationId": 2,
    "inputDepSetIds": [500],
    "outputIds": [862, 863],
    "primaryOutputId": 862,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 55,
    "actionKey": "2f3a863f327f414adefc58983df6562303fa3390523344a04c6ada87e6b39d69",
    "mnemonic": "JavaToolchainCompileClasses",
    "configurationId": 1,
    "inputDepSetIds": [501],
    "outputIds": [865],
    "primaryOutputId": 865,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 55,
    "actionKey": "7afcf4a01a960f29b2a3c74d4931272634d2c95fda72faebacb19b1835893623",
    "mnemonic": "JavaToolchainCompileBootClasspath",
    "configurationId": 1,
    "inputDepSetIds": [502],
    "outputIds": [628],
    "primaryOutputId": 628,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 56,
    "actionKey": "48af6efac71e54a6973ebd13901467b09f5ae094f2b044b0b150b8e02428bb7f",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [503],
    "outputIds": [506, 873, 874, 875],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/libJdepsParserTestFixtures.jdeps"
    }],
    "primaryOutputId": 506,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 56,
    "actionKey": "37bafe65e4947c7bc3004bbfe4770cd5103df9fa57d328d9fcaceaddd15e338a",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [505],
    "outputIds": [877, 878],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/tasks/libJdepsParserTestFixtures-hjar.jdeps"
    }],
    "primaryOutputId": 877,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 56,
    "actionKey": "814531b4985135a3b35cf4af13c51964fc4614546e9f5ad624e20dac3f02f73b",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [506],
    "outputIds": [879],
    "primaryOutputId": 879,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 57,
    "actionKey": "48522db3cb71f7db0905119ec94aa4a3f9cde0b398a1a0d67bd5d6347798c53a",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [508],
    "outputIds": [681],
    "primaryOutputId": 681,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 58,
    "actionKey": "681e9da6d8e6169f25d34ce14b9ac6d7e05cf3cdda4f5734627070f4c9dded9d",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [509],
    "outputIds": [785],
    "primaryOutputId": 785,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "8c55ee20a973bb583de3bbd49d8299235eea8f11e1ac46a529c74894e3f718c0",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [510],
    "outputIds": [882, 883, 884],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 882,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "e5b35503b014423305c295f7c4b32a5b5f412971b04c127c90a911a0efe32eeb",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [885],
    "primaryOutputId": 885,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "e588bd846c1cea752fa8aac2d95d99c7e75fe2e1741c142bd59ad012eb9ccbc6",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [886],
    "primaryOutputId": 886,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/cmd/merge_jdeps_jarjar.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "io.bazel.kotlin.builder.cmd.MergeJdeps"
    }, {
      "key": "%jvm_flags%",
      "value": "-XX:+IgnoreUnrecognizedVMOptions --add-opens\u003djava.base/java.nio\u003dALL-UNNAMED --add-opens\u003djava.base/java.lang\u003dALL-UNNAMED --add-opens\u003djdk.jdeps/com.sun.tools.jdeps\u003dALL-UNNAMED"
    }]
  }, {
    "targetId": 59,
    "actionKey": "07cf76a70c548c9fdfa754a0751879831b6f79738d78bed7245b49814b34c88a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [513],
    "outputIds": [887],
    "primaryOutputId": 887,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "8cca95424b2d97dfc180a44bced08c7e12a5dbb9e5af36ca97e7e4ec19d0d62c",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [888],
    "primaryOutputId": 888,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "ae04a7ba6ce4ad11320815958eff4672d638ec7ae3aa87c5863a77963a2bf622",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [514],
    "outputIds": [889],
    "primaryOutputId": 889,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [515],
    "outputIds": [891],
    "primaryOutputId": 891,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "d878adcf062138e2b63195ad2899d97c2d2b461bb22c11c92176683097de5b41",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [519],
    "outputIds": [353],
    "primaryOutputId": 353,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 59,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [893],
    "primaryOutputId": 893,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 60,
    "actionKey": "f1e0900b025df51d951bfb3e39579a5e4eb02c717ce0a6fcdeaec992fea6bcbf",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [521],
    "outputIds": [454],
    "primaryOutputId": 454,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 61,
    "actionKey": "53f1c259ec5d40cd078c3ce4d6bd48cfbbb5edc2cd0ff3f07887acdd52459845",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [522],
    "outputIds": [467],
    "primaryOutputId": 467,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "abee7538e649a18e365a7048849fc5c37740f7672e02a107a0d30596b8ba9245",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [523],
    "outputIds": [904, 905, 906],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 904,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "f762a728058de2aede12e56441e216092577d96fc35897d6af46e6c020900aa9",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [532],
    "outputIds": [907, 908],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 907,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "c8f9a6b9c5cf564d06e6dc07b1af788f9bffb7b25fcea6ecd3657366b7c13684",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [535],
    "outputIds": [912],
    "primaryOutputId": 912,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "c1ed66ccd8b43b33b75ccfd9e8e2685b05897a9641996812df75da4ce1231f78",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [537],
    "outputIds": [910, 913, 914, 915, 909],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_inherit_plugin_via_exported_deps-java.jdeps"
    }],
    "primaryOutputId": 910,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "ea53bc1a0d03b0fbb476400ed3a167f18a033073bd0304df9237707177742fc3",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [542],
    "outputIds": [916, 917],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-hjar.jdeps"
    }],
    "primaryOutputId": 916,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "b4547ff3c4ac7fc7b4f9c3a85f773ded98badeb5d551ca65bf4e8bb920f2e40a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [544],
    "outputIds": [918],
    "primaryOutputId": 918,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "7be93530b6aa5c80c58fc7ceb582342c2cecc75f6d5170405065c90807b4db2c",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [548],
    "outputIds": [919],
    "primaryOutputId": 919,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "0e131e5d656398f709374b10b265bc64a29e77113d62c5051a777025654a8857",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [550],
    "outputIds": [337],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 337,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "3b6a35044d67ce5b76413a6dcd6d7d389d8146261b67eabfe173690d95a2a4b4",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [554],
    "outputIds": [336],
    "primaryOutputId": 336,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 62,
    "actionKey": "731b9e84b54d475c267d61595147ee3bb48027acb4b0765715c561a4397aedc1",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [556],
    "outputIds": [920],
    "primaryOutputId": 920,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "6a1cfeae12ee152764c4c798eb2b0574629ee4b3f8174087eaa82bcfee2a360d",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [559],
    "outputIds": [922, 923],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 922,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "93105944432069dfba999fc0adb50b795472aad41497e4a3ef332c203dc0d852",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [563],
    "outputIds": [924],
    "primaryOutputId": 924,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "80d87bd5ea536423279c6aabfde7de92673c2b59010d1c0998c6c1309d12ffbe",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [564],
    "outputIds": [385],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 385,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "8cb94e710cbb95c098f3f5eec213011cf5bc7b84b50572f7986d11e03b04d75a",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [567],
    "outputIds": [384],
    "primaryOutputId": 384,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "0ac8928fafcc74abbbaa1db18881cde87666904769f22e60ad572b7a45241540",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [568],
    "outputIds": [925],
    "primaryOutputId": 925,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "fd94bdca05be829b7782b11cd418b35536785eb30907205a228d08697b83d835",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "inputDepSetIds": [35],
    "outputIds": [926],
    "primaryOutputId": 926,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: external/kt_java_stub_template/file/downloaded",
    "substitutions": [{
      "key": "%classpath%",
      "value": "${RUNPATH}src/test/data/jvm/basic/test_module_name_bin.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar"
    }, {
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%java_start_class%",
      "value": "helloworld.Main"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003dexternal/local_jdk/bin/java"
    }, {
      "key": "%jvm_flags%"
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%set_java_coverage_new_implementation%",
      "value": "export JAVA_COVERAGE_NEW_IMPLEMENTATION\u003dNO"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%test_runtime_classpath_file%",
      "value": "export TEST_RUNTIME_CLASSPATH_FILE\u003d${JAVA_RUNFILES}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }]
  }, {
    "targetId": 63,
    "actionKey": "5207f2b4a60a4c76e846ac4135015c98c5cb34dd43ce6d5339946aac2bdf356a",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [927],
    "primaryOutputId": 927,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "1d00320c8e1e1ec82918c5343ed959cad273c71fc29b826f9cf05f04628067c7",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [569],
    "outputIds": [928],
    "primaryOutputId": 928,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 63,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [570],
    "outputIds": [929],
    "primaryOutputId": 929,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 64,
    "actionKey": "ebf729ed07a55a53b1614b3fd42ec77c52ab6d7a3e1c8a0aaa3f72a197014b8b",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [574],
    "outputIds": [47],
    "primaryOutputId": 47,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "72e4c4b895a6bb9eed6044a8c6cd03c9364aba6af49d433bfd5a5276e22d1928",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [577],
    "outputIds": [935, 936],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 935,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "ead22ed4aaaa985fe2526205983b89a2c4985ea6b1ddb6310210ef3caf38be24",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [581],
    "outputIds": [937, 938, 939, 940],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_no_plugin-java.jdeps"
    }],
    "primaryOutputId": 937,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "2fc2e7cbdfc9f2847388613eee3671d883f5ff8915462b89bf6360c061c4eeec",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [585],
    "outputIds": [941, 942],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_no_plugin-java-hjar.jdeps"
    }],
    "primaryOutputId": 941,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "20a4f8e1d1b45b642c126a2f856584c2fa8d2a2e45b7957ea16c441848a8aee3",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [586],
    "outputIds": [943],
    "primaryOutputId": 943,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "9c684f348301641cf8e8445a81606bed81ee1d5214203645d666cb089805c304",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [587],
    "outputIds": [944],
    "primaryOutputId": 944,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "0bf18ac809d589652a18dad170d258be54890881940d679ec8e395499abf7e95",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [589],
    "outputIds": [343],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 343,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "c9e95783809a20ca05ace5e62d3b9fa0e3b149e757231d87a2627f78a7b68785",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [593],
    "outputIds": [342],
    "primaryOutputId": 342,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 65,
    "actionKey": "6eedd2d0f92276487529aebaf9a6643d8492ff7d0ec92449bb9c3c842e58c401",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [595],
    "outputIds": [945],
    "primaryOutputId": 945,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 66,
    "actionKey": "b358800cac55838be029231af2bb3839091e85611d6a498152a6e155390d9a2b",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [597],
    "outputIds": [947],
    "primaryOutputId": 947,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 66,
    "actionKey": "3b955fa7edaded7bbe380314be6cb3e27c7b45a8a40cae9019d4597a5636b312",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [599],
    "outputIds": [492, 969, 970, 971, 946],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/libtest_lib.jdeps"
    }],
    "primaryOutputId": 492,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 66,
    "actionKey": "5b794895905e1db28bfe55ee7ab2c962d3af433aa70841052415167330ad772b",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [618],
    "outputIds": [457, 634],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/kotlin/io/bazel/kotlin/builder/libtest_lib-hjar.jdeps"
    }],
    "primaryOutputId": 457,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 66,
    "actionKey": "e03a732b2928be07efc86e2ab167662732c268427de948c225fc4dd7268e99c6",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [621],
    "outputIds": [663],
    "primaryOutputId": 663,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 67,
    "actionKey": "811b9edb5dd13d5d7845d1865bdece1bbe0f9447a6488791f2de821f7f086b25",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [624],
    "outputIds": [972],
    "primaryOutputId": 972,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 68,
    "actionKey": "8b110b731c7ee87e0ac38bbe99da8ad49c23304a6fc63abc5d328873aea28722",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [625],
    "outputIds": [692],
    "primaryOutputId": 692,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "d94d4d59a8341b5d417f2b481b2ed4c32e96b2bf9d6a4d101af95a53b16368e7",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [626],
    "outputIds": [974, 975, 976],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 974,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "91d6f2ad88a386366c0ac7374b94afe2ad871312129f3dad7c1eca71ea118776",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [630],
    "outputIds": [977, 978],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 977,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "9a262b10d5753a020d9957e28ac988326bc0151248f3b7d1bc0f6f78f517bf1f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [633],
    "outputIds": [981],
    "primaryOutputId": 981,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "cdb85eda97ba93e0d18b67b96ca5f173771945a7b0aa1e7a9df9215a68ed75a1",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [635],
    "outputIds": [980, 982, 983, 984, 979],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed-java.jdeps"
    }],
    "primaryOutputId": 980,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "ae2191db9c575bee288c490b55feba0bbbec357c00f1f60837caf18b1f6db313",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [639],
    "outputIds": [985, 986],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed-java-hjar.jdeps"
    }],
    "primaryOutputId": 985,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "23ef1ade5ddc281e6a59f8b758a827996d7493050992f15d517b0354baf4706e",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [641],
    "outputIds": [987],
    "primaryOutputId": 987,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "47964e2818089340e90da77f3ee13cdbdcba0374fa899219ee16c632ad0ba9da",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [644],
    "outputIds": [988],
    "primaryOutputId": 988,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "b756c7b1c0362cd6070189533e29dd0c3325f85628eefb21f1afbad2ed3ccfad",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [646],
    "outputIds": [335],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 335,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "092db75ecf115ac864bc191e82f09181315442533c4986693ff30b8a91bb2a29",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [650],
    "outputIds": [334],
    "primaryOutputId": 334,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 69,
    "actionKey": "a3429736018b5e31f9a5b74d0f439a5aa0d044e9f3e417a5ff30b1cd0cd9625f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [652],
    "outputIds": [989],
    "primaryOutputId": 989,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 70,
    "actionKey": "223ec4940fbbecd3bf309e7ee788e1103f346f448a43c54246de0699eed990d9",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [655],
    "outputIds": [46],
    "primaryOutputId": 46,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "06dd11e3d17e494e150b72a567d38626db5b510574edf3f4ee5eddc3b1c6146e",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [656],
    "outputIds": [990, 991, 992],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 990,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "b5af5ec5f9edaf871b526ec6a1f80b37c80db54fe3423e3c82e7d8a31fdb9edc",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [993],
    "primaryOutputId": 993,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "7e06d73efbd820279f8d012b1ccee78e161e78266e0502705fa7c44f7da24207",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [994],
    "primaryOutputId": 994,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/cmd/build_jarjar.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "io.bazel.kotlin.builder.cmd.Build"
    }, {
      "key": "%jvm_flags%",
      "value": "-D@com_github_jetbrains_kotlin...jvm-abi-gen\u003dcom_github_jetbrains_kotlin/lib/jvm-abi-gen.jar -D@com_github_jetbrains_kotlin...kotlin-compiler\u003dcom_github_jetbrains_kotlin/lib/kotlin-compiler.jar -D@com_github_jetbrains_kotlin...kapt\u003dcom_github_jetbrains_kotlin/lib/kotlin-annotation-processing.jar -D@rules_kotlin...jdeps-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/jdeps-gen.jar -D@rules_kotlin...skip-code-gen\u003dio_bazel_rules_kotlin/src/main/kotlin/skip-code-gen.jar -D@rules_kotlin...compiler\u003dio_bazel_rules_kotlin/src/main/kotlin/io/bazel/kotlin/compiler/compiler.jar -D@com_github_google_ksp...symbol-processing-api\u003dcom_github_google_ksp/symbol-processing-api.jar -D@com_github_google_ksp...symbol-processing-cmdline\u003dcom_github_google_ksp/symbol-processing-cmdline.jar -XX:-MaxFDLimit -XX:+IgnoreUnrecognizedVMOptions --add-opens\u003djava.base/java.nio\u003dALL-UNNAMED --add-opens\u003djava.base/java.lang\u003dALL-UNNAMED --add-opens\u003djdk.jdeps/com.sun.tools.jdeps\u003dALL-UNNAMED"
    }]
  }, {
    "targetId": 71,
    "actionKey": "10253bcf5f5177c92db1a115d639bd62813b878cbf3710c76e9c128eebb04e8c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [658],
    "outputIds": [995],
    "primaryOutputId": 995,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "502ece0e02a7804a0e2188df0bb4a3232fc6c71c0a75ccae43b0f58cecf2666d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [996],
    "primaryOutputId": 996,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "64c5b792369730e349580a30f377170812aa6a79fb4d63c2858cf979ba4e7ff5",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [659],
    "outputIds": [997],
    "primaryOutputId": 997,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [660],
    "outputIds": [999],
    "primaryOutputId": 999,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "93b6fe5e0719e64a119bcdc5efd390f67df559374e8dd5ac1e06b1b4224f990e",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [663],
    "outputIds": [354],
    "primaryOutputId": 354,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 71,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1000],
    "primaryOutputId": 1000,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 72,
    "actionKey": "1dbc43e5acd48f04987c255fac4b8c73287438e46b161219bbe88259c9e102db",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [665],
    "outputIds": [45],
    "primaryOutputId": 45,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "2aee184c56ab5993a577059d29d0515af5037db98997a3ca6e8b267e54496cae",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [666],
    "outputIds": [1001, 1002, 1003],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1001,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "5aa1b9b5d4e3e5330e417c1b1207b50f2245144f4dc8f045c2bf51df3d62bd70",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1004],
    "primaryOutputId": 1004,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "c0f54b3b94dcc9fa7f4f11e77ab11d19141500b10ca8ac02f6027c4b3c7ba229",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [1005],
    "primaryOutputId": 1005,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/pantsbuild/jarjar/1.7.2/jarjar-1.7.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/ant/ant/1.9.9/ant-1.9.9.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/ant/ant-launcher/1.9.9/ant-launcher-1.9.9.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/maven/maven-plugin-api/3.3.9/maven-plugin-api-3.3.9.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/maven/maven-artifact/3.3.9/maven-artifact-3.3.9.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/codehaus/plexus/plexus-utils/3.0.22/plexus-utils-3.0.22.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/apache/maven/maven-model/3.3.9/maven-model-3.3.9.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/eclipse/sisu/org.eclipse.sisu.plexus/0.3.2/org.eclipse.sisu.plexus-0.3.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/javax/inject/javax.inject/1/javax.inject-1.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.2/org.eclipse.sisu.inject-0.3.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/codehaus/plexus/plexus-classworlds/2.5.2/plexus-classworlds-2.5.2.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/ow2/asm/asm/7.0/asm-7.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/ow2/asm/asm-commons/7.0/asm-commons-7.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/ow2/asm/asm-analysis/7.0/asm-analysis-7.0.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/ow2/asm/asm-tree/7.0/asm-tree-7.0.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "org.pantsbuild.jarjar.Main"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 73,
    "actionKey": "5e2fa1b5e25af9c9e62d3fc5333152600f60a5213a966237e5ac0bacccf3d75f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [668],
    "outputIds": [1024],
    "primaryOutputId": 1024,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "4552f7bba0758f9153e41c8578fcc5fe8b93d0e725076ccc2f8419750fc2e29d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1025],
    "primaryOutputId": 1025,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "d7a3a79933c4f05195e3efddacd3770d72d2529aca2fc2c7689cf9b25bb93f1f",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [680],
    "outputIds": [1026],
    "primaryOutputId": 1026,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [681],
    "outputIds": [1045],
    "primaryOutputId": 1045,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "e95072ba1ae32d01dcd75bacc8aa420347352670301bf6063c95458ad581ce63",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [694],
    "outputIds": [399],
    "primaryOutputId": 399,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 73,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1046],
    "primaryOutputId": 1046,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 74,
    "actionKey": "fe996304316d2323d2bb836ad25fcb918c23c0d764ede4265d0b6df7e067151e",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1047],
    "primaryOutputId": 1047,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 74,
    "actionKey": "8391fd990b330e1fe61e76b01d82cc6aa1f2c77d839b4fed2bea6bdf060e71b6",
    "mnemonic": "PackageTar",
    "configurationId": 1,
    "inputDepSetIds": [696],
    "outputIds": [455],
    "primaryOutputId": 455,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "a8fc090eed983ce8c8a19a076a56f54473c4b0519c4d270f24121de3f63b783f",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [698],
    "outputIds": [378, 1059, 1060, 1061],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/basic/propagation_rt_via_export_consumer.jdeps"
    }],
    "primaryOutputId": 378,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "d545f3e383328d6f9433c0c3e2c774072b4d42ce03b19ea826674611cf98cf32",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [704],
    "outputIds": [1062],
    "primaryOutputId": 1062,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "2fcd8a1263bd15c599300d124ae3d44fe8f836656ff61bb3d6a0f294d47dc001",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [379],
    "primaryOutputId": 379,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/data/jvm/basic/propagation_rt_via_export_consumer.jar:${RUNPATH}src/test/data/jvm/basic/propagation_test_exporter_lib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "testing.RuntimeDependent"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 75,
    "actionKey": "62a35fe82ff188b33c8acf775d199752fc67e586afc3324c3554c4ebf78a1e66",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [705],
    "outputIds": [1064],
    "primaryOutputId": 1064,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "cab609afc94cab86b0ff8fcc08866558582689cf4d0d8aa2ce64e561c4111137",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1065],
    "primaryOutputId": 1065,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "e762de72647ab9b1a9175872554bd1ffd7761d76623fbf90f3784332a0801a36",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [708],
    "outputIds": [1066],
    "primaryOutputId": 1066,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [709],
    "outputIds": [1068],
    "primaryOutputId": 1068,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "20311bf7965bc6a35c5588f8d650a4e88cc974a08e5761fd1b4ab8d5b597f5f3",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [713],
    "outputIds": [1069],
    "primaryOutputId": 1069,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 75,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1070],
    "primaryOutputId": 1070,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "68222ab558a15d37365d8e85abf12d767b1e2e837a4a25d3577c7855af6c1280",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [715],
    "outputIds": [1071, 1072, 1073],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 1071,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "ccf1d6bc514de9d75e627efa63826c1ec315e3096c4712ec1275b2eb957a8301",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [720],
    "outputIds": [1074, 1075],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1074,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "7c978e7406a0413442e03078a3112f1bb3b23beaea731120de640cfb54d7f6cb",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [723],
    "outputIds": [1078],
    "primaryOutputId": 1078,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "3e210a5f27fecd14f4345d2cad8717b776656a2f53f50322e52c6e8631a9f341",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [725],
    "outputIds": [1077, 1079, 1080, 1081, 1076],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java.jdeps"
    }],
    "primaryOutputId": 1077,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "09088b9b2883c64f6ceee579b03d6e95856d575293e070766de940f874ee89c9",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [730],
    "outputIds": [1082, 1083],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-hjar.jdeps"
    }],
    "primaryOutputId": 1082,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "019f4b2368c4e8c62e34fd830ca31eb7e6b83eaaf949e18ed11e8c4ed5291d4d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [731],
    "outputIds": [1084],
    "primaryOutputId": 1084,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "9dc6c147100621a174d5279756e1c29d8dce00b2d911acc37f8e2f1d0e6daf9d",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [735],
    "outputIds": [1085],
    "primaryOutputId": 1085,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "7122de97ef3475bc5de4e2336f3b98609179f27c98c480bf04a466ff0f1ddfd5",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [737],
    "outputIds": [341],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 341,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "25126dae1a0a8ed3424ae149858283f3d6b054484fdd85725dc051bea7152c5a",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [741],
    "outputIds": [340],
    "primaryOutputId": 340,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 76,
    "actionKey": "03aaede1dc9013f5f559a62268ea0897886abb514d6bd2ee180d9138e0f723ca",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [743],
    "outputIds": [1086],
    "primaryOutputId": 1086,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "2dec75fbfca81757bf2610efbe3ed862f320f6b9309bd8708a8a547bb766af49",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [746],
    "outputIds": [380, 1088, 1089, 1090],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/basic/propagation_rt_via_runtime_deps_consumer.jdeps"
    }],
    "primaryOutputId": 380,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "fd0e8d51796c304455ac830dfacc0b51d8faf2979d913e66fa4611e0ed154512",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [751],
    "outputIds": [1091],
    "primaryOutputId": 1091,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "9dab342a8ae34052e0cd5df083bda0c7cfa4a98be07af4065e1848ca80f674bc",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [381],
    "primaryOutputId": 381,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/data/jvm/basic/propagation_rt_via_runtime_deps_consumer.jar:${RUNPATH}src/test/data/jvm/basic/propagation_test_runtime_lib.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "testing.RuntimeDependent"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 77,
    "actionKey": "1b04ce2624c800784b25705ceabaf0f20fae5f339179118746c29dae5ee24303",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [752],
    "outputIds": [1093],
    "primaryOutputId": 1093,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "45d6010a426891f54eded0b7bfe975b8d84177e5f86e82d2c0c73d002754f18c",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1094],
    "primaryOutputId": 1094,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "3abd118dbae832c1ac4dd13aba27de78b91db038564712bc874811e6b6d42adb",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [755],
    "outputIds": [1095],
    "primaryOutputId": 1095,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [756],
    "outputIds": [1097],
    "primaryOutputId": 1097,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "7d6b920d92a7f3c8f3496119b713fd526e4adb74201179ab0a122240e0e7ffcf",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [760],
    "outputIds": [1098],
    "primaryOutputId": 1098,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 77,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1099],
    "primaryOutputId": 1099,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 78,
    "actionKey": "1fc97eae43bd7ac26a99851c2521a244d17b92f692ca63e400eacc3758aa1f6e",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [762],
    "outputIds": [791],
    "primaryOutputId": 791,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 79,
    "actionKey": "bb1b019e9ead1bd0bec6bfab8d41010d0fcb9ccfb7fa8e9c0ea465b75bb219ef",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [763],
    "outputIds": [694],
    "primaryOutputId": 694,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "2e3d1e373822abbf10e17f7e29f5a3356e66c97bf1c3d96d3a132311ae9831c7",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [764],
    "outputIds": [376, 1102, 1103, 1104],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/basic/propagation_ct_consumer.jdeps"
    }],
    "primaryOutputId": 376,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "21b79e814df1bc1cbdedd0490b929a23f0263fb87e60db20e77a2f3e080bf66a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [768],
    "outputIds": [1105],
    "primaryOutputId": 1105,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "2c5e36c36228bdcca147ee42e2ee306dfc5f47a5f205777975b146d577efe99f",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [377],
    "primaryOutputId": 377,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/test/data/jvm/basic/propagation_ct_consumer.jar:${RUNPATH}src/test/data/jvm/basic/propagation_test_exporter_lib.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/junit/junit/4.13-beta-3/junit-4.13-beta-3.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:${RUNPATH}../com_github_jetbrains_kotlin/lib/kotlin-stdlib.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "testing.CompileTimeDependent"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 80,
    "actionKey": "060d85fc4843647898d509c9336062f9e6d5ccef0394a77c9902062951146b0c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [769],
    "outputIds": [1106],
    "primaryOutputId": 1106,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "3d52dcd6c4a615f8ca46bfe154acccba99b55b201d66262a3afac0ec72990c8d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1107],
    "primaryOutputId": 1107,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "c6933d694e8fef4e0cd0456d75c9ddb7a2ce9fa641f5d9070af3ab6067143027",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [771],
    "outputIds": [1108],
    "primaryOutputId": 1108,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [772],
    "outputIds": [1109],
    "primaryOutputId": 1109,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "8fbaf8d41e8ad6824b369ed5f194a032afcbe47bce64ebeaca441c0e650629c6",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [775],
    "outputIds": [1110],
    "primaryOutputId": 1110,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 80,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1111],
    "primaryOutputId": 1111,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 81,
    "actionKey": "f64cffce6864d879401be687af30a99b9778484e29d78ba0640494cb8e410e9c",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [777],
    "outputIds": [1112, 1113],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1112,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 81,
    "actionKey": "c6a007ebc19bbf2da2148a472c1db356be903b7f4560d906e29a41ef8f9b3607",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [781],
    "outputIds": [1114],
    "primaryOutputId": 1114,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 81,
    "actionKey": "68b0894f11036ef7496449e399d84018f808f888bfe8b7a2e66347bccf568e1e",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [782],
    "outputIds": [387],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 387,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 81,
    "actionKey": "c8e00fc4bfac9f17841b57b32c920f506c1e493be52e0499de24f8369546d42c",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [785],
    "outputIds": [386],
    "primaryOutputId": 386,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 81,
    "actionKey": "a2f6238c8ca197c925e213128c46078b6dbff5744742c0667f4ff1f8f5c544bd",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [786],
    "outputIds": [392],
    "primaryOutputId": 392,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "015c107e483a07029165dd499d1c56913e3c2b47ea1d6eea4e5725073515ca05",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [787],
    "outputIds": [1115, 1116, 1117],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 1115,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "cd71e276cad1f259dade12f0cbc7cd0f992fc3983b1cdda91a3f796f9bfc13d7",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [791],
    "outputIds": [1118, 1119],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1118,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "69011b2bdfb4106593259249922d2af8777409b78ca1dbf3cf128050c23aa69f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [794],
    "outputIds": [1122],
    "primaryOutputId": 1122,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "abb8f84475a1da8f6d98f1cff52a0a34e2216ba1f117ba2ab56c23b26f06a488",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [796],
    "outputIds": [1121, 1123, 1124, 1125, 1120],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_resources_mixed-java.jdeps"
    }],
    "primaryOutputId": 1121,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "787faeea3b0b8d530bbc8eec343bf5f3c042de17a9e60725afc166f515a1b99a",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [800],
    "outputIds": [1126, 1127],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_resources_mixed-java-hjar.jdeps"
    }],
    "primaryOutputId": 1126,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "9c6945a25df53756cbe903099f2ead93a415c201fec7280fdac9ea1809cffb24",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [801],
    "outputIds": [1128],
    "primaryOutputId": 1128,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "e27afb9e4dd4854dcf33b85cbb48481be302a82072d1ce3964b2e26fcdb437ba",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [804],
    "outputIds": [1129],
    "primaryOutputId": 1129,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "be6ceca40bca1fe2282af9d22a02b1a1813ff3e764f3c953111d89ee6202db98",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [806],
    "outputIds": [347],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 347,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "e0c79f74b400175824959b6acace13d8356b9ebdff65e8aaf70ac2f76011a7d7",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [810],
    "outputIds": [346],
    "primaryOutputId": 346,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 82,
    "actionKey": "5f3f2c99777c68ba7d62cb4a27d6dfbd18160d0c8dce4d36c4b95bf925464e6a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [812],
    "outputIds": [1130],
    "primaryOutputId": 1130,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "0cd345fe69fff7e3e4fa8a5c90a2ca54bc6e564f2bd7121664be6e1495d09013",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [815],
    "outputIds": [1131, 1132, 1133],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 1131,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "c48c5f9bbd42ef81d5d2daf55db2a257c79c11b607a29e88e4e3f2c553abe96a",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [820],
    "outputIds": [1134, 1135],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1134,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "098f3d489afd81589f4fa31230433b19278e12121e508ea3695ade1f1a57043d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [823],
    "outputIds": [1138],
    "primaryOutputId": 1138,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "263da299799dc59e4c8e59dc8af105aeb5f998a10b92cf7e40a2c113ce8f6592",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [825],
    "outputIds": [1137, 1139, 1140, 1141, 1136],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_multiple_plugins-java.jdeps"
    }],
    "primaryOutputId": 1137,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "c5a548653f4a2bdefa898c33a81512dda62e42f808ed5885d6e9d0e1da113938",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [830],
    "outputIds": [1142, 1143],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_mixed_multiple_plugins-java-hjar.jdeps"
    }],
    "primaryOutputId": 1142,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "56a64bd956d2041debed50c945031f3b760d291d462e8450828a723d2ca3bb6d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [832],
    "outputIds": [1144],
    "primaryOutputId": 1144,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "a1ab8a039c7dd19798222cd21260e486cb6bb496e01644eac89f3d4bcd5b8036",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [836],
    "outputIds": [1145],
    "primaryOutputId": 1145,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "c539654936d8443826f6884a334bb9dd905a4174b7efd3401e3b90e28dba5aad",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [838],
    "outputIds": [339],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 339,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "15988adaf454639a7f24ecc795c90d1872827443cf6110de514cc7f0dde901e3",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [842],
    "outputIds": [338],
    "primaryOutputId": 338,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 83,
    "actionKey": "08c4f3b0c402b2e39389a137d7f85d1444e4a5c46b0c040f4f8e55a5738f805b",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [844],
    "outputIds": [349],
    "primaryOutputId": 349,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "4075d0bca834cefaa34cad51cd56489f81f3ab658872c5a2b84e5ab16f34423a",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [847],
    "outputIds": [1146, 1147, 1148],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 1146,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "9d868d961b338f62767f991b23f0404adcbc9f364ddfec1512ed980db7053053",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [851],
    "outputIds": [1149, 1150],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1149,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "6c3f0f6fde16613a020de31cb25427f0622fed64b9460a01a1fe48886c023ad7",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [854],
    "outputIds": [1153],
    "primaryOutputId": 1153,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "f8e8b7378f4b879e7d4fd791c0da76a90bcf54d7e396d741c060739bb9419643",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [856],
    "outputIds": [1152, 1154, 1155, 1156, 1151],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_resources-java.jdeps"
    }],
    "primaryOutputId": 1152,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "d944297ec550717d2d1706782f8facf23f1b488f08cc4298a25d60bcdd7b32f6",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [860],
    "outputIds": [1157, 1158],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin_resources-java-hjar.jdeps"
    }],
    "primaryOutputId": 1157,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "f1220561f482ef0ed93e6f1c96d1e966797bbb75f8f90b5772b1c75fbab1b66a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [861],
    "outputIds": [1159],
    "primaryOutputId": 1159,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "19d6456fcf8ad7545d8fc27f6d30da040cc649c344d89555d51e90eb36474a53",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [863],
    "outputIds": [1160],
    "primaryOutputId": 1160,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "d5af75c61a14f9b42531c6b2abc335f5f63d15b8a6ff4e838b570e7c2b28c36f",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [865],
    "outputIds": [345],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 345,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "3398b56349073076cd5f217e3bb5155d2f9679bae02899cb3b47cc06b28f684f",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [869],
    "outputIds": [344],
    "primaryOutputId": 344,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 84,
    "actionKey": "3122075efd5f98db0bb3a1a598bdb4ddbd327a6a57dbae8c2faaa435be5f8292",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [871],
    "outputIds": [1161],
    "primaryOutputId": 1161,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 85,
    "actionKey": "5187fcdceb2495775a46642b3cad21d5f5a078711d3caa84cc11807a42f54db8",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [873],
    "outputIds": [460],
    "primaryOutputId": 460,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 86,
    "actionKey": "26a7f3e22a71331633d0a24ab7cda5811a89a65d537b934a4c051b73eb60d411",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [874],
    "outputIds": [1162, 1163],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1162,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 86,
    "actionKey": "2116c7167a613d35c7f9df8ab0e55e0f58c9f37b49c636054afbb6186b42d97c",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [878],
    "outputIds": [1164],
    "primaryOutputId": 1164,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 86,
    "actionKey": "4c3737bd8ae3ceb9954585747ac3b7a2af66a9e13a9094a68e955b2ba281a4fe",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [879],
    "outputIds": [383],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 383,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 86,
    "actionKey": "4090939a61de4add1f66d0a83214766a6083f8c11a6129a5aab3901a40050de6",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [882],
    "outputIds": [382],
    "primaryOutputId": 382,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 86,
    "actionKey": "a3d31e36fb58bdd2e017feceb9a0788caab60014280f06ac2bbf2a0178feb98c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [883],
    "outputIds": [1165],
    "primaryOutputId": 1165,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 87,
    "actionKey": "27b15365c32b64411c999d716534e912a7fb8670c3a972c4f7a154af3d382731",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [884],
    "outputIds": [453],
    "primaryOutputId": 453,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 88,
    "actionKey": "9b40ecd89b431833bfc8111a99952119c0a8391be6071c8d00672d47e88ac457",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [885],
    "outputIds": [1168, 1169],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1168,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 88,
    "actionKey": "75811410ca08cfddc57be33cf279d3aeff5e4a1ec1b07d202f39203153531efe",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [889],
    "outputIds": [805],
    "primaryOutputId": 805,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 88,
    "actionKey": "04f878e6c405c31fab483e79f5edfd500270a404a0a749c6d466eca06bef53f3",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [890],
    "outputIds": [1170],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1170,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 88,
    "actionKey": "b8023fdfe963795f48d24e74be14785effacb119313c07fd290831b4eb97a2fb",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [893],
    "outputIds": [816],
    "primaryOutputId": 816,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 88,
    "actionKey": "570f3e615a21dc306463898ec5e03b53dc00b39decf0d1fb09a75fb3cdbe88af",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [894],
    "outputIds": [1171],
    "primaryOutputId": 1171,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 89,
    "actionKey": "2689b48aff28476b7c3fa313dca1ec2fbf4b6cfe7910af3ed8174ced66de04c2",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [895],
    "outputIds": [727],
    "primaryOutputId": 727,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 90,
    "actionKey": "8707bbd4c20bf4351d7e450c17ecfdf587b12c6a9b3dcb17c45c9c386ce584b2",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [896],
    "outputIds": [1173],
    "primaryOutputId": 1173,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "b9b4d9698db91a027d5a9e65636221d2dbb477eaa06d3f18fa9c39d7a6f9cede",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [897],
    "outputIds": [494, 1176, 1177, 1178],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/tools/java/runfiles/librunfiles.jdeps"
    }],
    "primaryOutputId": 494,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "0e7f9f72be86e759f91314859d7b187cea60d31ebfebab7a2bf19ad3f5caa6b7",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [899],
    "outputIds": [1179, 1180],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/tools/java/runfiles/librunfiles-hjar.jdeps"
    }],
    "primaryOutputId": 1179,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "2757970d75f8f0a4fa3e17fd74347b2108ffd19997a562db467a4b6f6db38008",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [900],
    "outputIds": [1181],
    "primaryOutputId": 1181,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 92,
    "actionKey": "ec87b37c9fa92bd8a60c4db8546c39197662d24d77de31f4ff2967d9ee078378",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [902],
    "outputIds": [54],
    "primaryOutputId": 54,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "2e9d6929c898a60594364002c03c51c18cffea37a0aac3d384b03d6a3f1191e6",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [903],
    "outputIds": [1182, 1183, 1184],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1182,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "f7a7cb4dc4c1c77ca654c84558483d62247c5ed16464ea51f3ee43a9d0c561a8",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1185],
    "primaryOutputId": 1185,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "928ca473314bb08d0bc95e8a66a4a51860dcaca233c1b012d3aff94a2a09341c",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [1186],
    "primaryOutputId": 1186,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/skip-code-gen-services.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "main.kotlin.io.bazel.kotlin.plugin.skip-code-gen"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 93,
    "actionKey": "1ef391f8b127c1d54d0fa5f157631867beac59373e260f4a8c95bb179229dea1",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [905],
    "outputIds": [1188],
    "primaryOutputId": 1188,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "8a59b972d75c5578070b8279dc11c99cf80b76536e1b7985876ed96a3e094bdd",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1189],
    "primaryOutputId": 1189,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "5534b18ba3ce5586a503ab596de2b20967872b07956933878011d394c2501419",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [907],
    "outputIds": [1190],
    "primaryOutputId": 1190,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [908],
    "outputIds": [1191],
    "primaryOutputId": 1191,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "7dab4a214fd9c82b46f28629c65fabbeebdbcae7dc3200a3e34fcdc30cfe60b7",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [912],
    "outputIds": [687],
    "primaryOutputId": 687,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 93,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1192],
    "primaryOutputId": 1192,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 94,
    "actionKey": "f883ec7f232a93101468a7b8a9af5312d8230633b9739d7b71f710a5eade2de2",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [914],
    "outputIds": [57],
    "primaryOutputId": 57,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "f9ce8a0825a23ba910125bb0f940a21e326f1175d4471635214b1fd1ca873a15",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [915],
    "outputIds": [1194, 1195],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1194,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "1902730d03cb91d72f8d75a60ccd57359e6339fe714953c71735eaa17d731027",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [919],
    "outputIds": [1196],
    "primaryOutputId": 1196,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "57b8e9f8c7414b907fbdcb7dee3551ce946e5830c37dbb5198c4a7bad7434c66",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [920],
    "outputIds": [1197],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1197,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "a98aeadadf7377a4a48a2eaac63b14832d37009bfd37e67818f536e274acedcd",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1198],
    "primaryOutputId": 1198,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "e84135b5105853b2715dced8b05c0c279b4d178b1eaa7c186d96657cf7450830",
    "mnemonic": "KotlinZipResourceJar",
    "configurationId": 1,
    "inputDepSetIds": [923],
    "outputIds": [1202],
    "primaryOutputId": 1202,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "3b8180c0a0655fe32d5df43d9fb0d9ab5808ac3d8b3f3c7611d3e7c5a0c98973",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [925],
    "outputIds": [389],
    "primaryOutputId": 389,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 95,
    "actionKey": "5e96bbfd359272e007b473fe1dc3ad70c7aa7f4e2cabd32b0a09615e5fa8e195",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [927],
    "outputIds": [1203],
    "primaryOutputId": 1203,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 96,
    "actionKey": "117c3bd0df995cbacf76a4a14206c82b204de6fab6128e0179fbd56b21925c32",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [928],
    "outputIds": [469],
    "primaryOutputId": 469,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 97,
    "actionKey": "b98eeb9d076c84512df19aacae94e9db84301543c464e56c18480e72fcb939cb",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [929],
    "outputIds": [468],
    "primaryOutputId": 468,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 98,
    "actionKey": "45ed37d702f6dfe6827c56d30424ab510fde5354d0be14720befbaf73e23118b",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [930],
    "outputIds": [896],
    "primaryOutputId": 896,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "e44083ebfa494c0040fbb03c13452f6fd944260c60a218ae82cad479292fc69d",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [931],
    "outputIds": [1204, 1205],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1204,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "b19d8bc1cead8f4f55c72fa49de13370c6cd1ae12372cc4f5c8fe04ac87d1423",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [935],
    "outputIds": [1206],
    "primaryOutputId": 1206,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "388d85513c2d035e6968efa12135a113fb10a09b2f67c1edf95e62ff361d908b",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [936],
    "outputIds": [1207],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1207,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "86a935c7473b224a65bc79961f1f5a5417dedacbedcc16a6940cdbd84ea25e78",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1208],
    "primaryOutputId": 1208,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "02d9c4cc847166ab90e2dd4229d6cde1869151479573eaf3a94e6de0a42d74e8",
    "mnemonic": "KotlinZipResourceJar",
    "configurationId": 1,
    "inputDepSetIds": [939],
    "outputIds": [1213],
    "primaryOutputId": 1213,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "c10bf4b39520ac4776d60fcffb48560e8ebb492202017c36c9b7aaa9a9b51ed9",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [941],
    "outputIds": [388],
    "primaryOutputId": 388,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 99,
    "actionKey": "fe0ef299b3eb9484a2bcbaeac2854afa6f461cba97eae84df6fb5d256a946ba6",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [943],
    "outputIds": [1214],
    "primaryOutputId": 1214,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 100,
    "actionKey": "f01c2abcd9c9acd547f329c621b3a5cc363ef8046d8732bf9eb22b6ced9f3695",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [944],
    "outputIds": [1215],
    "primaryOutputId": 1215,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 101,
    "actionKey": "f4aa67679d08bc295cc9233fd3698e58b92c3065aae4c458def0f3c8cb080e44",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [945],
    "outputIds": [1216],
    "primaryOutputId": 1216,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 102,
    "actionKey": "523da0777c7a8a6496eea2d5defb7e11947cd60dcbc0b61f6b96d6b2e5aba701",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [946],
    "outputIds": [61],
    "primaryOutputId": 61,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 103,
    "actionKey": "c7bb9fefce57915c6e9d37dbf14b1f18e79fa767172092271efbe9f678f494c3",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [947],
    "outputIds": [459],
    "primaryOutputId": 459,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 104,
    "actionKey": "efdad972ed3307bc0d57440e888e26ebf6c5cfb295055b18bc3635a7c5874164",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [948],
    "outputIds": [890],
    "primaryOutputId": 890,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 105,
    "actionKey": "943b44393c6adac537a9f28b4a62ff1919187957d832406013fbeecba921f152",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [950],
    "outputIds": [59],
    "primaryOutputId": 59,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 106,
    "actionKey": "38a04222abb0163cf7a6256baf96a14fcfb60d80815832236562fd8c99c44e0b",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [951],
    "outputIds": [499],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 499,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 107,
    "actionKey": "a5f086997da71872ec8162630cfe5fbe5388602a666a79ca25fbf91162a09a11",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [956],
    "outputIds": [486],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 486,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "f8d5efd1d2a0f99be77bc9397d5b7cc9ddb6dbc212e72fb8e7b8fc1a6db61496",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [962],
    "outputIds": [1247],
    "primaryOutputId": 1247,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "027a8cbcc9060824c94caccd7153c5259eb55a8b2ce790b2d8a5a9bdb96f29c7",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [964],
    "outputIds": [490, 1251, 1252, 1253, 1246],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jdeps"
    }],
    "primaryOutputId": 490,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "cf417ed3bfbb030e6733e914252e0be88d5f51ad5d6cd27197c25f7c8cc406e2",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [971],
    "outputIds": [458, 631],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/kotlin/io/bazel/kotlin/builder/libbuilder-hjar.jdeps"
    }],
    "primaryOutputId": 458,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "ecf8d02d515a6f2a451345b15b3820f4796e787bafe59a3b6d1c5391edaf4ca0",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [973],
    "outputIds": [649],
    "primaryOutputId": 649,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 109,
    "actionKey": "2a1aadf7de5a178896592fdba77a573f480d2f745f32177fafeb71962bdf2ab5",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [976],
    "outputIds": [55],
    "primaryOutputId": 55,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 110,
    "actionKey": "81aae7dbfb1f29db006430e31ec28291819d12346f65b0ae8149b18994402ea2",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [977],
    "outputIds": [1254],
    "primaryOutputId": 1254,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 111,
    "actionKey": "dd1850311346aa5d297890fe7a6c6540abac451b5c818aaaa7aabaeb5fe2393a",
    "mnemonic": "Action",
    "configurationId": 1,
    "inputDepSetIds": [978],
    "outputIds": [998],
    "primaryOutputId": 998,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 112,
    "actionKey": "4b461ce7c9227bee0aa27116fbb51bcaf9448d1012b04c1ff639510a74b94743",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [980],
    "outputIds": [1267, 1268, 1269],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1267,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 112,
    "actionKey": "9eefb21c9181b93f8a1446c18ada6f336f82f17130272fcef25c28ce94350d9f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1270],
    "primaryOutputId": 1270,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "06f3f7483aa8390577d66baf020b422291872463979ad1692ac932b16670a734",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [987],
    "outputIds": [1271, 1272],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1271,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "9613806653b2290cfd83688e72a4c62c5ab76c0108fdf25a4083b71f1c82c361",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [991],
    "outputIds": [1273],
    "primaryOutputId": 1273,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "869295ff2cfb4cb8c77901e5a012d1835266c93de27e337e20f90667322365b7",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [992],
    "outputIds": [1274],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1274,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "20ebc0afffe8ae1688f28b846040e15c568abfbbe762f69891558697ce14cb5f",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1275],
    "primaryOutputId": 1275,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "1e8c20a903317e3f2f08415c66a79365b48f07239722bc48043ea0ab463bdf8e",
    "mnemonic": "KotlinZipResourceJar",
    "configurationId": 1,
    "inputDepSetIds": [995],
    "outputIds": [1276],
    "primaryOutputId": 1276,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "80d0655d5bf77760c6896a9cb1c4033c882b1adb0753153896d74fcef314bf59",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [997],
    "outputIds": [390],
    "primaryOutputId": 390,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 113,
    "actionKey": "6626b0e22a9c110fe72686511f117993bfa14c304a8787188584248f0633aa6e",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [999],
    "outputIds": [1277],
    "primaryOutputId": 1277,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 114,
    "actionKey": "3c5f577b12ea6670519ad89a269dd4f1f576012ce0f5b9a14ec7a8bb90fb7350",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [1000],
    "outputIds": [1279, 1280],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1279,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 114,
    "actionKey": "4727c24bffdce1e32300aee34eba58674b70c6994ed45031c16a2979b8cf929f",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [1004],
    "outputIds": [1058],
    "primaryOutputId": 1058,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 114,
    "actionKey": "82561440599a5ca1ba6a612c5c5fe086d6d0d86ad948c23f012949fd4176ae71",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [1005],
    "outputIds": [1281],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1281,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 114,
    "actionKey": "473134772cc29a7a685d012652886f19c330b607bd4a9fa324d04934fa18e74d",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [1008],
    "outputIds": [1067],
    "primaryOutputId": 1067,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 114,
    "actionKey": "5ec415ec010659790f34e3487c6353e361fc6ba451ee9dcd09801a5b02c0d828",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1009],
    "outputIds": [1063],
    "primaryOutputId": 1063,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 115,
    "actionKey": "883bf9521dd34e7c43e3f6f5dbb7c6ca910f305400ea6c468a945e699e04007f",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [1010],
    "outputIds": [1282, 1283],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1282,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 115,
    "actionKey": "140eca3706e80569872c3fd72046a828e8e6d9ef603cc802be7f982ecd6e8b2e",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [1014],
    "outputIds": [1087],
    "primaryOutputId": 1087,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 115,
    "actionKey": "c9dca69bfa295c94d7ea0a81d37c26f47eedaf806f6bd8044eef7b2f28702269",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [1015],
    "outputIds": [1284],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1284,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 115,
    "actionKey": "c7f42a8d3537f759ad012eb711c54c5dc264bf6137a1545ab0d252d9c858ea21",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [1018],
    "outputIds": [1096],
    "primaryOutputId": 1096,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 115,
    "actionKey": "681d3605d940bea2839ec6431bec0d95d6ad59aacadb489f982b5477d8ff5e79",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1019],
    "outputIds": [1092],
    "primaryOutputId": 1092,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 116,
    "actionKey": "b91ef08fc8c30967fbcf7fc24f9fd8da11dd197bf6a1670a781817e52b6f5463",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [1020],
    "outputIds": [1285, 1286],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1285,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 116,
    "actionKey": "09cd980c6ae7c16de4bc6edbc44ce7cac4f518bbc6ffede0a2b400c4a05eb7d2",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [1024],
    "outputIds": [1287],
    "primaryOutputId": 1287,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 116,
    "actionKey": "a157d990bb7ac5387fab8165a1144cf7e2319f9b53a80bbae34f783a3017f6ff",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [1025],
    "outputIds": [1288],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1288,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 116,
    "actionKey": "0345f29e5db291e83f514e7d4ad39e52bd65b71f7226ca8f0ab06eba158a0b90",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [1028],
    "outputIds": [391],
    "primaryOutputId": 391,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 116,
    "actionKey": "06e427c9ecc8ce229840771cbb76ae0b44ecb1e667ac38588b100967da77c1e7",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1030],
    "outputIds": [1290],
    "primaryOutputId": 1290,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 117,
    "actionKey": "234bcffa31826f7b935f98e41b0bdb4ef3c7fd1ae4a4b96f0661824e3a764cc0",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1031],
    "outputIds": [53],
    "primaryOutputId": 53,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 118,
    "actionKey": "c5e3ddfdd04b31909aa63ac8a86d55e2cf29cb91d7fc741a9a9520cecb353d94",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1032],
    "outputIds": [1292, 1293, 1294],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1292,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 118,
    "actionKey": "99ed040519068607f0faffbeac22766a4c35ed72be6a92c353f6210c22dc0d23",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1295],
    "primaryOutputId": 1295,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 119,
    "actionKey": "49c774088459bd26dc676240e4026bea1e9c9bc043bb86ed06902d86d6be456e",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1035],
    "outputIds": [1296, 1297, 1298],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1296,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 119,
    "actionKey": "84897fb530aa2cce4f77a3d6f8548d5a0dbd344d1f98148d24e870e5f133c987",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [647],
    "primaryOutputId": 647,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 120,
    "actionKey": "26cb27ce431c8fa7c2a2c0706213f0259708a8e54980cf8c981720eb0c903b93",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1037],
    "outputIds": [62],
    "primaryOutputId": 62,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 121,
    "actionKey": "8ab83793efd7965aecf91c67237b69f4502e2ac679aa84f0884e970a17b1c287",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1038],
    "outputIds": [466],
    "primaryOutputId": 466,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 122,
    "actionKey": "d730bfcf92708befbfcad39797102462bbee1aaabf66aaa07274b456e31e6c63",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1039],
    "outputIds": [1299, 1300, 1301],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1299,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 122,
    "actionKey": "b76948b5e4ae4b36506564bd9d9a1d55a0ca6cceae28ec0d589d4d796a347808",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1302],
    "primaryOutputId": 1302,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 123,
    "actionKey": "82c53b13c7de8311273a072b3f44ed93b7ee38ca78167a8760137f50e5296871",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1041],
    "outputIds": [60],
    "primaryOutputId": 60,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 124,
    "actionKey": "f5fa00439c836b72b1a34389add5df65772fc955e21acfc867696751a39e0fa5",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1042],
    "outputIds": [56],
    "primaryOutputId": 56,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "d81ad70ee10bd88dbb9df06febf13b7b3aab000580c4f5cb2299fa872a0a246e",
    "mnemonic": "KotlinKapt",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [1043],
    "outputIds": [1303, 1304, 1305],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinKapt"
    }],
    "primaryOutputId": 1303,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "d4aa2f27161d1a953a30b179c3adba42511ae37098cec29b0df11406b72819b9",
    "mnemonic": "KotlinCompile",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }, {
      "key": "REPOSITORY_NAME",
      "value": "io_bazel_rules_kotlin"
    }],
    "inputDepSetIds": [1047],
    "outputIds": [1306, 1307],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "worker-key-mnemonic",
      "value": "KotlinCompile"
    }],
    "primaryOutputId": 1306,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "b204c9cefc28c5197877370df0e6ef62c5d2b1b9542ad55db29b66065508acfa",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1050],
    "outputIds": [1310],
    "primaryOutputId": 1310,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "a897b073af6c65fa15130d436b4413aeea62808db6a921944e6d2c178db2bb15",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1052],
    "outputIds": [1309, 1311, 1312, 1313, 1308],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin-java.jdeps"
    }],
    "primaryOutputId": 1309,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "01e376987488f82b0d63cf4d1668d83c25cbb61fa27d8c5d294a16f4ec359c2f",
    "mnemonic": "JavacTurbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1056],
    "outputIds": [1314, 1315],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/test/data/jvm/kapt/ap_kotlin-java-hjar.jdeps"
    }],
    "primaryOutputId": 1314,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "7bcf4a8063a56a517aa562dd3b4249d318324743b256c8c206845a5f48a04a7d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1058],
    "outputIds": [1316],
    "primaryOutputId": 1316,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "135edc6cb43323176b128144822bee674edd0a49db68dd3301a2875baea33ec3",
    "mnemonic": "KotlinFoldJarsAbi",
    "configurationId": 1,
    "inputDepSetIds": [1060],
    "outputIds": [1317],
    "primaryOutputId": 1317,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "823aa720051c1f1659feeb9c8fb23ca015fb5e70cc36159f2750ff54a962bcdb",
    "mnemonic": "JdepsMerge",
    "configurationId": 1,
    "inputDepSetIds": [1062],
    "outputIds": [1318],
    "executionInfo": [{
      "key": "supports-multiplex-workers",
      "value": "0"
    }, {
      "key": "supports-workers",
      "value": "1"
    }],
    "primaryOutputId": 1318,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "0659491484bb222c0c76979b7f9d2f44514c8a77b49d48c4ac2fe81374bcb5ee",
    "mnemonic": "KotlinFoldJarsRuntime",
    "configurationId": 1,
    "inputDepSetIds": [1066],
    "outputIds": [348],
    "primaryOutputId": 348,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 125,
    "actionKey": "660051a61353ba6eb03ff7abae89ee0643c4805368409bae4c2a62494ef63ed6",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1068],
    "outputIds": [1319],
    "primaryOutputId": 1319,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 126,
    "actionKey": "dc70716451063320833ad40d96ee47793ca088684d59a4143e343b723ff79f97",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1070],
    "outputIds": [58],
    "primaryOutputId": 58,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 127,
    "actionKey": "93aaaf2dd3641bf4c995e00f612537676a4b6e202c82af382867e90f1f7dab31",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1071],
    "outputIds": [491],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 491,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "7398004cb8b1782c6295313d33c82d745a8d91bbb68be2dad2fb9e56fe659550",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1074],
    "outputIds": [1321, 1322, 1323],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1321,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "9eeb225690f61f71bff9ec55dbff31e0e8621b08eca523e25b5f789efaefcdd6",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1324],
    "primaryOutputId": 1324,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "b8df52b8b14e2908ee018cbdeb15012c3f53ed5acf17261a496a38e0a22486eb",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [1325],
    "primaryOutputId": 1325,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-lib.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/builder/utils/jars/jars.jar:${RUNPATH}../bazel_tools/src/main/protobuf/libdeps_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar:${RUNPATH}../kotlin_rules_maven/v1/https/maven-central.storage.googleapis.com/repos/central/data/com/google/protobuf/protobuf-java/3.6.0/protobuf-java-3.6.0.jar:${RUNPATH}src/main/kotlin/io/bazel/kotlin/plugin/jdeps/jdeps-gen-services.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "main.kotlin.io.bazel.kotlin.plugin.jdeps.jdeps-gen"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 128,
    "actionKey": "a5accbcbf30a9751b66e0f4731e8b25114dcc77951563af688a957364eb1519c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1076],
    "outputIds": [1327],
    "primaryOutputId": 1327,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "ea702819c512ec166ea25504fcd6b06e27266d4643d6604a28fde5052d7d991d",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1328],
    "primaryOutputId": 1328,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "18e225a1e265a8e358e0309e76498e3c7e5db5c1c79e9d735da0edee728f7010",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [1078],
    "outputIds": [1329],
    "primaryOutputId": 1329,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [1079],
    "outputIds": [1330],
    "primaryOutputId": 1330,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "8ed531b23f52a3e615dcc4cb947e2a89695a85c6fe9c3540be76360fc138966f",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [1083],
    "outputIds": [683],
    "primaryOutputId": 683,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 128,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1331],
    "primaryOutputId": 1331,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 129,
    "actionKey": "a7f518cd1e0ad2872c8d0601b0821a0b82c63dbdad765b2b1c9e7158c0f5bc83",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1085],
    "outputIds": [1333, 1334, 1335],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1333,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 129,
    "actionKey": "212a0100d51408479cb57ed99e0c4be9fc08c221fb0933c5bef21cb295d6a155",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1336],
    "primaryOutputId": 1336,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 130,
    "actionKey": "f8164c9f13b18c81255742fbe41913f4a5bcf4e90ed5778138f0a64751892999",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1088],
    "outputIds": [1337, 1338, 1339],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1337,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 130,
    "actionKey": "85ecf211d231b745eba3cf32cf24af452010bbdcd609edc928e97595563ba858",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [662],
    "primaryOutputId": 662,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 131,
    "actionKey": "f22716724b438e99c9d291b7b50d639a76bed107e7dcc3d9496b45d163e897c2",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1090],
    "outputIds": [488],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 488,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 132,
    "actionKey": "7d12280e927189610f06fe98709c8e45f71f644f336672f4f527b581175088c0",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1094],
    "outputIds": [1347],
    "primaryOutputId": 1347,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 133,
    "actionKey": "cd0665afe9f041d37e0003931f6eff94f38dc0e3062136ed3b95409ba8db6db9",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1095],
    "outputIds": [1348],
    "primaryOutputId": 1348,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 102,
    "actionKey": "73f6e34c6711d33be8e5f963cc25d1cc80c1f8b950576091f7c13eda0ac6d2d9",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1096],
    "outputIds": [1332],
    "primaryOutputId": 1332,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 134,
    "actionKey": "d6c57b74b80efddde4624d6a4da68a8dbe576f30347668a8d09bcacaddde4eb3",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1097],
    "outputIds": [487],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 487,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 135,
    "actionKey": "54601ccc1407e9e42d088f68f687ebbdd1c65ba5a73f3b957e5a31e2bc1e9a6d",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1101],
    "outputIds": [1354],
    "primaryOutputId": 1354,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 136,
    "actionKey": "77c7e17465fb1db49435383484a48a51d19e03cc4ba7cde959d96af33877cd4c",
    "mnemonic": "JavaResourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1102],
    "outputIds": [1289],
    "primaryOutputId": 1289,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 136,
    "actionKey": "2d7120364fd24ec58ce7425b47983a862d2a948e5bb6c32379870d2174aa0cfb",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1104],
    "outputIds": [1355, 1357, 1358],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1355,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 136,
    "actionKey": "30f5c360f65a7ff23e002803e614a03368aee8a2246dfbfb56088f69b58dafd2",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1359],
    "primaryOutputId": 1359,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 137,
    "actionKey": "0113c7a6fa8b8025f635c0ac47e168173b56a61b123ca8061b397e96d108fd97",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1106],
    "outputIds": [1360],
    "primaryOutputId": 1360,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 138,
    "actionKey": "57ef8a07e8bceed36953baf8a19bb9077b918766b5747599510caa80cd03131a",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1107],
    "outputIds": [1361],
    "primaryOutputId": 1361,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 139,
    "actionKey": "b9cc9c03accce70fa08313a2a738c03c9ea4a27d763932375b01acfd9caf249b",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1108],
    "outputIds": [1363, 1364, 1365, 1366],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository_processor.jdeps"
    }],
    "primaryOutputId": 1363,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 139,
    "actionKey": "8ec2547ba0def434b767bfd4dd2aa366802a519c34f88b96181a47158da21ce0",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1110],
    "outputIds": [1367, 1368],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository_processor-hjar.jdeps"
    }],
    "primaryOutputId": 1367,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 139,
    "actionKey": "9f35e8c33a93c67f47c8454ac828c3105ed010c14e4fedcc9b2231bace351062",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1111],
    "outputIds": [1369],
    "primaryOutputId": 1369,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 140,
    "actionKey": "1e074079866966f5cd4736bc4aa3e9313b09cf2a935871b50eb067e41b8d518d",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1112],
    "outputIds": [489],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 489,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 141,
    "actionKey": "edd488c78996dd7def1dc1045d930d1c1d9fa501217c303cfb48c9c73a720d47",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1115],
    "outputIds": [1383, 1384, 1385],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1383,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 141,
    "actionKey": "dc251f812c5759de892386909d71ac34e1d44e7652893e9779c3f2e911675a86",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1386],
    "primaryOutputId": 1386,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "6974841512229b0e526d6baf0265ab0934fd3ae335b768f1ce963dc54641f2a4",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1118],
    "outputIds": [495, 1388, 1389, 1390],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository.jdeps"
    }],
    "primaryOutputId": 495,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "250bb639ca86a25b8e3d8817084233ffd4feaa0d613e2343f095ea412b4aa0a6",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1120],
    "outputIds": [1391, 1392],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository-hjar.jdeps"
    }],
    "primaryOutputId": 1391,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "4f6d7d4d6c6ade7a5f94765ac495ce81a3abbc5ea37f32b1dc5ba008267db9f4",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1121],
    "outputIds": [1393],
    "primaryOutputId": 1393,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 143,
    "actionKey": "8b2d00940de58b39906967d54da4c5bf6093810ff2675724a8b5909ce18a92b1",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1122],
    "outputIds": [1394],
    "primaryOutputId": 1394,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 144,
    "actionKey": "8dce239ff12dbe10a6dabf7046e97f868ba1a29ff8d029ad2039f17c8db0636f",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1123],
    "outputIds": [465],
    "primaryOutputId": 465,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 145,
    "actionKey": "c59ee13a4087eaf8a6dc2bf2023b01d75bbcf9ccd30e02dc261b9bd3841c4e73",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1124],
    "outputIds": [1412, 1413, 1414],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1412,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 145,
    "actionKey": "b8ef2efa7f89307e439ebfa3ccc1192cf3ada174c599f13904b94b194f45ff96",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1415],
    "primaryOutputId": 1415,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 146,
    "actionKey": "0cb61567f2c8de14c1bcb65d2291d3bd6cc47b975f7b501ddc1576c75d5b24e1",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1416],
    "primaryOutputId": 1416,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 146,
    "actionKey": "547410df08e8bfdd342354c451ad0ddcfc483752ec76075ceaa7368eab8d520d",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1417],
    "primaryOutputId": 1417,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 146,
    "actionKey": "7d80eaec4aefc6a448831fabc8f585fd57ab1f22710afa7e39ad21272caabb0c",
    "mnemonic": "ServiceFilesJar",
    "configurationId": 1,
    "inputDepSetIds": [1138],
    "outputIds": [1326],
    "primaryOutputId": 1326,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 100,
    "actionKey": "205ea62e4edb569a5c31190c4bda33976f47443b0fb7a3cb354f99be6e13d938",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1140],
    "outputIds": [1418],
    "primaryOutputId": 1418,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 147,
    "actionKey": "ce952773ae3783d61f3ed62f98f6d147ac37dd4cb1abc0d8b5fc136e124df05b",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1141],
    "outputIds": [1419],
    "primaryOutputId": 1419,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 148,
    "actionKey": "96829b99cf49a6dfa8d7e41725d883fcf484bb22342046e8c25db509a61c040f",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1142],
    "outputIds": [1265],
    "primaryOutputId": 1265,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 110,
    "actionKey": "9cc6553aac644285d4cd837fa5b9cd0d25bc3670d7ad6dc1dbfa50c6a4a4897a",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1143],
    "outputIds": [1291],
    "primaryOutputId": 1291,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 149,
    "actionKey": "d760a3272847c3a61d53d073c0819897a6ac9a4a3294ffe443d181fa296d70cc",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1420],
    "primaryOutputId": 1420,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 149,
    "actionKey": "147da8cd6e7387274fed9a7f05241c047552b0e64cbdd826fde63d5ea6d97504",
    "mnemonic": "ServiceFilesJar",
    "configurationId": 1,
    "inputDepSetIds": [1144],
    "outputIds": [1187],
    "primaryOutputId": 1187,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 150,
    "actionKey": "6a1d045a77411961e1f902f1ecc82e5f5533fbb731187fc24c19031c1fa2a79a",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1145],
    "outputIds": [1421],
    "primaryOutputId": 1421,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 151,
    "actionKey": "05c645dcba8f081c1d41b74d45eba54af8a7f2a062a61fc3f688b0bf84298667",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1146],
    "outputIds": [1422],
    "primaryOutputId": 1422,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 152,
    "actionKey": "ed4af2306dc605c7f5c3cec3e4e6538982b8e4ba03975b4a3cc17b6ad35ff09f",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1147],
    "outputIds": [1423],
    "primaryOutputId": 1423,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "actionKey": "cdfd5b8b2d9e1a1724cfb00f58a39ff7b43eb96bd5a42b69eea5a6e83992d7bf",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 1,
    "inputDepSetIds": [1148],
    "outputIds": [1426],
    "primaryOutputId": 1426,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "94c47f88dbf769f762aea8081a5e98405ab3833ace0864b3eef910baee5a7b45",
    "mnemonic": "GenProto",
    "configurationId": 1,
    "inputDepSetIds": [1149],
    "outputIds": [643],
    "primaryOutputId": 643,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "975d0fda14dbde28b00aff4e757b4c9333b327357f6d92b65647501cdf264f17",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1150],
    "outputIds": [484, 1427, 1428, 1429],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/protobuf/libkotlin_model_proto-speed.jdeps"
    }],
    "primaryOutputId": 484,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "86200fb80b3fd7785319201979515f821247dc40b2051c91fb894ff79fd744eb",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1153],
    "outputIds": [461, 632],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/protobuf/libkotlin_model_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 461,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "actionKey": "126343563288b109952c348a790e2a7e8417f84bfb2687fd39dfe9c73d3fe0c5",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 1,
    "inputDepSetIds": [1154],
    "outputIds": [1431],
    "primaryOutputId": 1431,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "6ded944fbaf79f9c452d0c18a672b84b2f0bfef11730f380a296bddfb035896e",
    "mnemonic": "GenProto",
    "configurationId": 1,
    "inputDepSetIds": [1155],
    "outputIds": [642],
    "primaryOutputId": 642,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "908cf324921865a318d64fe267e973697f9e90474916884bddec5880ef8942e4",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1156],
    "outputIds": [482, 1432, 1433, 1434],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/src/main/protobuf/libdeps_proto-speed.jdeps"
    }],
    "primaryOutputId": 482,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "b0dfe5e0524cc7c07747fc3b5586914fc5cfa75453b1856880cf661b49f144e7",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1159],
    "outputIds": [462, 633],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/src/main/protobuf/libdeps_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 462,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 79,
    "actionKey": "8c489c686481278b50edd24ac5a4121e1b0ffbf47d300838e13711e0669b33f4",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1160],
    "outputIds": [1435],
    "primaryOutputId": 1435,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 98,
    "actionKey": "f5ad6c3d05d11bd614516a6655d5fd46a47477582840855349c9989ed8308e64",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1161],
    "outputIds": [1266],
    "primaryOutputId": 1266,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "actionKey": "133d570717fd9ebdafb5efed58b468e2b8d2b35a4f3ed7ddfb8fe0cfcb941798",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 1,
    "inputDepSetIds": [1162],
    "outputIds": [1437],
    "primaryOutputId": 1437,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "b47d1671974cf6bcea3e8b40ad1353987ca5469aee40355de53dee6592f2f75f",
    "mnemonic": "GenProto",
    "configurationId": 1,
    "inputDepSetIds": [1163],
    "outputIds": [644],
    "primaryOutputId": 644,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "e7fd0879c91e81e8dfe5d4df43c22a323f53f318f702cacb719e8f0b8192e760",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1164],
    "outputIds": [485, 1438, 1439, 1440],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jdeps"
    }],
    "primaryOutputId": 485,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "1b9c8e19afedcf06697cecedc50105743f2aa033e46bed327cecb2571ff5d87c",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1167],
    "outputIds": [464, 1250],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/external/bazel_tools/src/main/protobuf/libworker_protocol_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 464,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 97,
    "actionKey": "47c8e8e8fcbeae014fc8a85654fff6a3736bf6c63a24ef1ccc788d820ac7da32",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1168],
    "outputIds": [1441],
    "primaryOutputId": 1441,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 156,
    "actionKey": "cac75552526997c148878de28a622102d8a1846d1610a22c5a79b87a51816c3f",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1169],
    "outputIds": [1442],
    "primaryOutputId": 1442,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 72,
    "actionKey": "aa49bbea2ba8d50ee068e79adf9c98444899745f59d5bd8f969cb28f0e85e2d6",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1170],
    "outputIds": [1257],
    "primaryOutputId": 1257,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 157,
    "actionKey": "4cc90b08a9950bdc5b0f811b878ce85d8491f49e092dced93e9ee97725c7ee31",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1171],
    "outputIds": [1443],
    "primaryOutputId": 1443,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 90,
    "actionKey": "4f13e4e2b02433bbcb328ba85736bcad2fa557de0107a0c5bb0518ee163cafe8",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1172],
    "outputIds": [1444],
    "primaryOutputId": 1444,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 158,
    "actionKey": "f448c700118f69a493367359c3314b2f2a68422a699ffe4795d797db3ecee5ba",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1173],
    "outputIds": [1410],
    "primaryOutputId": 1410,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 103,
    "actionKey": "c7778a0194fe4600f2941814bebf50889d57806be1c43b551c3a2a73ca5ab70a",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1174],
    "outputIds": [1445],
    "primaryOutputId": 1445,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 159,
    "actionKey": "aede6470530be6a99e9759882da1db85f0e0368fc966a7cd305cade83c543f2a",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1175],
    "outputIds": [1446],
    "primaryOutputId": 1446,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 101,
    "actionKey": "1893b2f7f369668b2c8da6d6b4ae8f12815da6b0592bf7bef9072b790a76eded",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1176],
    "outputIds": [1447],
    "primaryOutputId": 1447,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 85,
    "actionKey": "4b0e33829409827037c844b1e6af911b517452c804e68eb0fe1ff56bb2e767cc",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1177],
    "outputIds": [1448],
    "primaryOutputId": 1448,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 160,
    "actionKey": "152a2c96c75a552d508dc46c26eeda9373397b39a99669acf4806a7f9553ac24",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1178],
    "outputIds": [500],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 500,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 161,
    "actionKey": "32ca817a7d940057bd9f945655544c5bae909d59864427a75c01b807d27bad08",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1182],
    "outputIds": [1453],
    "primaryOutputId": 1453,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 162,
    "actionKey": "48c3bec39ed5bd967ddb1325bb393b070150e4b63618b13ab65dbb1759624f86",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1183],
    "outputIds": [501],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 501,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 121,
    "actionKey": "ce83cd41407da6ed8df295d8e92566afc4ee21f38eb6c2b76a3137ef44b85842",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1185],
    "outputIds": [1399],
    "primaryOutputId": 1399,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 163,
    "actionKey": "39e17ecfbc6684c3e7b74e6cd62b590088d63cf03ff760302e14f0e2c6b668c3",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1186],
    "outputIds": [1455, 1456, 1457],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1455,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 163,
    "actionKey": "ed178c0995c95647cb38179d4f7530a398e1ef16c26872eff3fcbdb047a6c422",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1458],
    "primaryOutputId": 1458,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 163,
    "actionKey": "b7b1445d7e02c7ee0f85f6b58ad718578d671c429c2d967a8cabe029758a6549",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1188],
    "outputIds": [1459],
    "primaryOutputId": 1459,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 163,
    "actionKey": "737e852d8e41c08d21bb1949dccef000e35650e6b033caa9623e4ee42e87acd3",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [1189],
    "outputIds": [1217],
    "primaryOutputId": 1217,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 163,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1461],
    "primaryOutputId": 1461,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 164,
    "actionKey": "fd264a041dbb537d76f33014de424c797aa968c7ba163935e8728ea486047af7",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1193],
    "outputIds": [1462, 1463, 1464],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1462,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 164,
    "actionKey": "df0175b415298e6678d9810fee356cfd5b484dd9ac54bb484343dee875f9a474",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1465],
    "primaryOutputId": 1465,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 164,
    "actionKey": "7cf64e860eccc694a57f408b68aed87bdc89a6c615fecc901e5cae7d3f136b2c",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1195],
    "outputIds": [1466],
    "primaryOutputId": 1466,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 164,
    "actionKey": "80f1861985d7d93b8dc24ad42db22d601270d28d9111272ebcb14b29e9e6466c",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [1196],
    "outputIds": [1255],
    "primaryOutputId": 1255,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 164,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1468],
    "primaryOutputId": 1468,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "84b53c9aedf7dd99f0b51c5331b3671b1ea3b64efff918d2f6ebd3850006783c",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1200],
    "outputIds": [1346, 1469, 1470, 1471],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/librunfiles.jdeps"
    }],
    "primaryOutputId": 1346,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "7bd26c738c7a279b5431556f7ff1c580aa6d05bc4c4a8b97f890598fe23e0816",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1202],
    "outputIds": [1472, 1473],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/librunfiles-hjar.jdeps"
    }],
    "primaryOutputId": 1472,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 91,
    "actionKey": "f890fb413401f98e438e52662ecdb395f30c0289eb20fc1ee000dd6619e39bb8",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1203],
    "outputIds": [1474],
    "primaryOutputId": 1474,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 165,
    "actionKey": "20bf88237683694d6f900c42e2f19fdb2c83de802dc9c9f3f15b08512f8ccec9",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1205],
    "outputIds": [1475],
    "primaryOutputId": 1475,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 166,
    "actionKey": "b9ad4dbf232410c5f6d9e03e6e07fe50ff0d1dbb55e4c854469fe87ed12c32d7",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1206],
    "outputIds": [1264],
    "primaryOutputId": 1264,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 167,
    "actionKey": "e277581fef85b8d1c45bdad52ad33fe01ff0a0aec7534d05260c71994503bd82",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1207],
    "outputIds": [1476],
    "primaryOutputId": 1476,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 120,
    "actionKey": "ede4c3e31a56a758faab002997ee25645acfc830febeeaa5c3bc1eee7dcdb7c3",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1208],
    "outputIds": [1401],
    "primaryOutputId": 1401,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 140,
    "actionKey": "0842fd25a6b83f5bf689d48150fda0a5d91fb79b7fb95cd3e90cf8b02e245173",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1209],
    "outputIds": [1245],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1245,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 168,
    "actionKey": "162bd72c5f992263aa02a1094ead6aa51e8e42d8e6f1b16acf227dcb0b65ac22",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1212],
    "outputIds": [1407],
    "primaryOutputId": 1407,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 169,
    "actionKey": "83223df9b594b883fee6b9789ed3aba075e17cd84f6d1726e19071214c0a3ad5",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1213],
    "outputIds": [1477],
    "primaryOutputId": 1477,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 152,
    "actionKey": "ca531004dce018a9aaca15fe67efb051a1617ac51c9fdab1024f1f981862df90",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1214],
    "outputIds": [1478],
    "primaryOutputId": 1478,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 92,
    "actionKey": "e060a97aa9ce35afb8fe2d0cbc68e4b5f5765d0101eda573f67cf274e5963c88",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1215],
    "outputIds": [1259],
    "primaryOutputId": 1259,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "b64fb0f8edb25ca65296664868cc6daafc6c5e467c1c8b93bcb3d1dca0787b13",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1216],
    "outputIds": [1479, 1480, 1481, 1482],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository.jdeps"
    }],
    "primaryOutputId": 1479,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "835103c8cff6b452874e37bfc6a4702fb0244a481e507d3d2afbea3a59b65e0d",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1218],
    "outputIds": [1483, 1484],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/tools/java/runfiles/libauto_bazel_repository-hjar.jdeps"
    }],
    "primaryOutputId": 1483,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 142,
    "actionKey": "3d1a7716cfc3b82797c227843265386de2916f444cab45ebe39129b00b2f8cb1",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1219],
    "outputIds": [1485],
    "primaryOutputId": 1485,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 94,
    "actionKey": "58e2bddebd8c4361eb3dae7c36f003e6efbc8618e772618b9346c8b69eccb087",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1220],
    "outputIds": [1262],
    "primaryOutputId": 1262,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 170,
    "actionKey": "b9ce87ad2330166ca03ed949eda926704d3cb5a333799aa0c67fa7ecd7173da1",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1221],
    "outputIds": [1486],
    "primaryOutputId": 1486,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 117,
    "actionKey": "1015d5e26d138b9468b39339dc7006bc72fa63f17f38b9c7f1d3bce1dead1d68",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1222],
    "outputIds": [1258],
    "primaryOutputId": 1258,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 171,
    "actionKey": "96c7075a9270652fc2588c13ef717e4136cd2ecff80c9ddaba0a9c6fe9b4bb76",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [1223],
    "outputIds": [1487],
    "primaryOutputId": 1487,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 124,
    "actionKey": "7a0209b0c213376eed36481f0832044673bb4615be774cef63f2d8aa431af1a7",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1224],
    "outputIds": [1261],
    "primaryOutputId": 1261,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 138,
    "actionKey": "af9c858bb0a3b28030cd1cae81847e799bd5a6dd56a68659279a154535910298",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1225],
    "outputIds": [1488],
    "primaryOutputId": 1488,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "actionKey": "e4a8ff520ee374ebe0648401cb431915c64571701704a16dc3a774da120d49b3",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 3,
    "inputDepSetIds": [1226],
    "outputIds": [1489],
    "primaryOutputId": 1489,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "18c0237ac87985237ed09abae8a1de37d03f27d70bb53ff279b38b5f7ca4ec04",
    "mnemonic": "GenProto",
    "configurationId": 3,
    "inputDepSetIds": [1227],
    "outputIds": [1238],
    "primaryOutputId": 1238,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "7a823abfa693e6643541a58effc183d53e631dda725117ace00f164a79eac89c",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1228],
    "outputIds": [1239, 1491, 1492, 1493],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/src/main/protobuf/libkotlin_model_proto-speed.jdeps"
    }],
    "primaryOutputId": 1239,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 153,
    "aspectDescriptorIds": [1],
    "actionKey": "0a93abf1dbad5cc5b9f31916ab76b34e0deee4d41ab73ac06ab43938717697ae",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1231],
    "outputIds": [1494, 1495],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/src/main/protobuf/libkotlin_model_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 1494,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 172,
    "actionKey": "2297fbb55c4db5377b1fae9686c41ca5437708c5e89aa831b0245e952aa2b310",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1232],
    "outputIds": [1496],
    "primaryOutputId": 1496,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 173,
    "actionKey": "2253032a9e33bc9c7d7dd30ed0bf0a1a3c1b458e2fd46cb0f8c000d39a3c240f",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1233],
    "outputIds": [1400],
    "primaryOutputId": 1400,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 174,
    "actionKey": "340769d4cca3b33f20e347b0110e83ad931df16fa2ad91ff5da5e89182ac6cb5",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1234],
    "outputIds": [1408],
    "primaryOutputId": 1408,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 175,
    "actionKey": "12ee29099c18c3e75f7dad4308cdae8c3330fe82d88f00a8da1dad9966c22e25",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1235],
    "outputIds": [1403],
    "primaryOutputId": 1403,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 176,
    "actionKey": "fd561c9e8943f45e9fb4f92e080a1bec52d001518b29fd3cce3383bd6f68c651",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1236],
    "outputIds": [1406],
    "primaryOutputId": 1406,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 177,
    "actionKey": "e92988a28f229186be0952945098e3520a2898a7dc84e2e7012589c2c8b2d29e",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1237],
    "outputIds": [1411],
    "primaryOutputId": 1411,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 133,
    "actionKey": "c7ccebd6ecad30603c189b0a6dc925b9f7f36b57bf2af2e8eb823b4d13977191",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1238],
    "outputIds": [1497],
    "primaryOutputId": 1497,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 178,
    "actionKey": "81a63723bf8c696b962eac618410be2fa43399e2b3362dfb444822d3baf28cb2",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1239],
    "outputIds": [1498],
    "primaryOutputId": 1498,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 131,
    "actionKey": "5f4f47cbe4f59bba3ab51dfbd45285792839b3e6185b89788084789a1655cc73",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1240],
    "outputIds": [1243],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1243,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 147,
    "actionKey": "497f244872fc7ba5960dae79730e8db317ee81735221c78d2364d8cac1e7a3e9",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1243],
    "outputIds": [1499],
    "primaryOutputId": 1499,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 135,
    "actionKey": "ea7fee19846f01406bcef90ad77346324d31afa70f4375b4a7d1c9089a62dd9a",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1244],
    "outputIds": [1500],
    "primaryOutputId": 1500,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 109,
    "actionKey": "6463f0db6c22354b728cdfb0fde5298eb05b57b0bf3a0674c6ebd0c1441e3a4c",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1245],
    "outputIds": [1260],
    "primaryOutputId": 1260,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 144,
    "actionKey": "96272629b8f318ffbb939cf8a360bb7f37f1cb6be0102096aee8e91dce3067ab",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1246],
    "outputIds": [1398],
    "primaryOutputId": 1398,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 179,
    "actionKey": "b9d91fad1091c79a7085bbb11765330eb67aad006d55ef214c887b2435d48c0a",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1247],
    "outputIds": [1395],
    "primaryOutputId": 1395,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "e9f7cd774c98e448b070eb47de5dd631894676bfb6126d5ee15b05cd7ff2b11e",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1248],
    "outputIds": [1501, 1502, 1503],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1501,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "863275d6a55f2d6e384db7ec48b04d3a36031ccd7f522348271a913930608e56",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [512],
    "outputIds": [1504],
    "primaryOutputId": 1504,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "6adb8854d4acc0d20e632e2bb0d34cd2327491bc5229cd5eeda8d5af2a169d43",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [1505],
    "primaryOutputId": 1505,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "main.kotlin.io.bazel.worker.worker_proto_bundle_bin"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 180,
    "actionKey": "d1afa082b1b92d36520bb03dae944329ed81561bb5a0d240383d51beaffe108d",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [1250],
    "outputIds": [1506],
    "primaryOutputId": 1506,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "8de970cb7b31c275974f83342ee705bd91c36d41d39958d0a1d93b36923d52c8",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [1507],
    "primaryOutputId": 1507,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "41e152ed3885552df56989a9f7d576ea579d1fd9bbd72fdbfc4f5be143e61e3a",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [1252],
    "outputIds": [1508],
    "primaryOutputId": 1508,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [1253],
    "outputIds": [1509],
    "primaryOutputId": 1509,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "ca1b02e047a81d1f2c277cea79868bf1d654bfaeb9ac1e727149e5c32b5936c8",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [1256],
    "outputIds": [503],
    "primaryOutputId": 503,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [1510],
    "primaryOutputId": 1510,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 134,
    "actionKey": "e42f923a06cc0c7ca24945bdd912b78b6d6d6a0c7e9dff618f65e1bb5b5d9c59",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1258],
    "outputIds": [1242],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1242,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 181,
    "actionKey": "1ec8f5fbb94ce9958a04fa2dd8a54f9254d05b43b14d25f2391660bbb65e21b7",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1261],
    "outputIds": [1404],
    "primaryOutputId": 1404,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 182,
    "actionKey": "1759f6a27e0868d0dd6bf03d9f1dc03824db9047f2006fa682563dbbd76f4b36",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1262],
    "outputIds": [1511],
    "primaryOutputId": 1511,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 106,
    "actionKey": "c58dd3be8021d82a58dc6b664e83f33d43714a5f004f47d5dbc2477d88d0153c",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1263],
    "outputIds": [1244],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1244,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 183,
    "actionKey": "bfbe8a651c5fc20f7bc8170dfc94527102c5c30ad7d0656cb2120adfc9986cff",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1266],
    "outputIds": [1512],
    "primaryOutputId": 1512,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 126,
    "actionKey": "95a794796ddf361f17b7460451505103e8850630a326dad5d08a767a8b9c2600",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1267],
    "outputIds": [1263],
    "primaryOutputId": 1263,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 184,
    "actionKey": "8aff8636d3c3face8aaecbb9270132246fe442c12cfc837ee2b1d66f505b0ab4",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1268],
    "outputIds": [1513],
    "primaryOutputId": 1513,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 185,
    "actionKey": "7caa7f7b5286e1a7bd14b870baf31d823bde65eff6e9ab2ea7cb6fb73d0eaae6",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1269],
    "outputIds": [1405],
    "primaryOutputId": 1405,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 186,
    "actionKey": "31a7d3345d67c0bfc2e07bbdf61e6d85d083608548a68f34a9eab145dd1c7c92",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1270],
    "outputIds": [1397],
    "primaryOutputId": 1397,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 187,
    "actionKey": "0a25c066f8bfd3f2234be3f04cfd8d0ac526e1730320eaccc06537f3707cddcc",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1271],
    "outputIds": [1460],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1460,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 188,
    "actionKey": "ffeb0c2e729b8fa3a27bf628ff9d3464f1f4f90a95939828915f463f30ac7e91",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1274],
    "outputIds": [1396],
    "primaryOutputId": 1396,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 189,
    "actionKey": "f6f9f22818c367b21dbb6cc4b08f8964ef41988d3c01689aee1ed2556f14ae55",
    "mnemonic": "CreateCompileJar",
    "configurationId": 1,
    "inputDepSetIds": [1275],
    "outputIds": [1517],
    "primaryOutputId": 1517,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 190,
    "actionKey": "933abd41509949416e497f61da27fff37ae54a1cbeeb0f2f6e4b1ffb61d9e6a1",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1276],
    "outputIds": [1409],
    "primaryOutputId": 1409,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 191,
    "actionKey": "183fe8d679af69039e70f9c188214b34ad510d3a0aad75edc9748e130ec094cb",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1277],
    "outputIds": [1467],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1467,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 162,
    "actionKey": "79f32d4ebd58eed81f4aebf649d29396e23c943a43fac5069f1abe6910dcf62e",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1280],
    "outputIds": [1352],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1352,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "actionKey": "4e4a46b56728b3926150b0d57b850525ffc4038744dde3d0eb3c677cc456a868",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 3,
    "inputDepSetIds": [1282],
    "outputIds": [1519],
    "primaryOutputId": 1519,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "ce45cf0ba7ff9c9051ac9547dd86d2d64b1f5fb2844993a7d19eb01ad18221f1",
    "mnemonic": "GenProto",
    "configurationId": 3,
    "inputDepSetIds": [1283],
    "outputIds": [1224],
    "primaryOutputId": 1224,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "1ad0836f9cf0b38052c634fe8688c00fdff366862bd6398071a876029db55e03",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1284],
    "outputIds": [1225, 1520, 1521, 1522],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/src/main/protobuf/libdeps_proto-speed.jdeps"
    }],
    "primaryOutputId": 1225,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 154,
    "aspectDescriptorIds": [1],
    "actionKey": "af9b4289670ca8f0ae6680a5be63706bc3932943cb6836d97dbc667f48e1116d",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1287],
    "outputIds": [1523, 1524],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/src/main/protobuf/libdeps_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 1523,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 192,
    "actionKey": "897cc7fce71ea08cdbb659de45fc02af11324a128caf3c67c0a43eb5dd93c224",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1288],
    "outputIds": [1402],
    "primaryOutputId": 1402,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "actionKey": "269af6993b9d6a062b97f69f646757a68792d1be234d2343c5fc70269d5e6b67",
    "mnemonic": "GenProtoDescriptorSet",
    "configurationId": 3,
    "inputDepSetIds": [1289],
    "outputIds": [1525],
    "primaryOutputId": 1525,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "2770f89118a7011fff314bcb5553e2f2ad236f3d5356c86c579533b94671549c",
    "mnemonic": "GenProto",
    "configurationId": 3,
    "inputDepSetIds": [1290],
    "outputIds": [1240],
    "primaryOutputId": 1240,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "de5e12699cb5cc8379eeeefd91013d92a35133de39a702a48af53c7472da73ae",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1291],
    "outputIds": [1241, 1526, 1527, 1528],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jdeps"
    }],
    "primaryOutputId": 1241,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 155,
    "aspectDescriptorIds": [1],
    "actionKey": "bc5064ba48f5ca787a1442e12be5437aca2e5302baad2c3bc03325277fcf25dd",
    "mnemonic": "Turbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1294],
    "outputIds": [1529, 1530],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/external/bazel_tools/src/main/protobuf/libworker_protocol_proto-speed-hjar.jdeps"
    }],
    "primaryOutputId": 1529,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 160,
    "actionKey": "eec41586f1ad14d91e04b4cb7a397c5ef08fa8884ac8044c8aefe842fa157e62",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1295],
    "outputIds": [1353],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1353,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "22f40adeaf311fa3974f652187c99e22a004eee076ce8a5477f9de558afd11a0",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1298],
    "outputIds": [1531, 1532, 1533],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1531,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "8a8428947372165cc399e079410d74eb0e5eec2c1eb740085da7e91d37a94fd8",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1534],
    "primaryOutputId": 1534,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "80f9db141367599a2b5ca695ad89c487fc3383adfa285ad7675f0a283cf76ecf",
    "mnemonic": "TemplateExpand",
    "configurationId": 3,
    "outputIds": [1535],
    "primaryOutputId": 1535,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  if [[ $(LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ $(LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null) \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    local i c buff\n    local converted_path\u003d\"\"\n\n    for ((i\u003d0; i\u003c${#path}; i++)); do\n      c\u003d${path:$i:1}\n      case ${c} in\n            [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n            * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n      esac\n      converted_path+\u003d\"${buff}\"\n    done\n    path\u003d${converted_path}\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"$(pwd)/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "io_bazel_rules_kotlin/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/remotejdk11_linux/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}../bazel_tools/src/main/protobuf/libworker_protocol_proto-speed.jar:${RUNPATH}../com_google_protobuf_protobuf_java/protobuf-java-3.21.7.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "main.kotlin.io.bazel.worker.worker_proto_bundle_bin"
    }, {
      "key": "%jvm_flags%",
      "value": "-XX:ErrorFile\u003d/dev/stderr"
    }]
  }, {
    "targetId": 180,
    "actionKey": "27102ba9ddaa9b34468ce786dc0dfa6616009afea51f1802827354fc8d585efa",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1300],
    "outputIds": [1536],
    "primaryOutputId": 1536,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "8baacfbb9295c78cff8866aae79433047b1ed5c25eb57c2c225dc082bc1b4f24",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 3,
    "outputIds": [1537],
    "primaryOutputId": 1537,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "7cc1e36518f8c9d54b9204728e586c82bdf095db23a849ce0ffc54dafede0b74",
    "mnemonic": "SymlinkTree",
    "configurationId": 3,
    "inputDepSetIds": [1303],
    "outputIds": [1538],
    "primaryOutputId": 1538,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 3,
    "inputDepSetIds": [1304],
    "outputIds": [1539],
    "primaryOutputId": 1539,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "7d52bbba3920e1ffb197f7587367281c343e2d97d7e6f02d5533a33a5cb3d8f4",
    "mnemonic": "JavaDeployJar",
    "configurationId": 3,
    "inputDepSetIds": [1308],
    "outputIds": [1382],
    "primaryOutputId": 1382,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 180,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 3,
    "outputIds": [1541],
    "primaryOutputId": 1541,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "9cee5ff386773c917f4533f583360c84f1c0eabee124334ca6b3f9af2d9f7303",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1310],
    "outputIds": [1543],
    "primaryOutputId": 1543,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "50be6fe5aa9744dc22316fcff9de59d1494d9c150781984024e5d233c80e3ca1",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1312],
    "outputIds": [1514, 1546, 1547, 1548, 1542],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/src/main/kotlin/io/bazel/kotlin/builder/libbuilder.jdeps"
    }],
    "primaryOutputId": 1514,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "27b12fd14cf046035cce5e7c18c794ddf817f756c2521dda211c82e7e9ae1c1f",
    "mnemonic": "JavacTurbine",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1324],
    "outputIds": [1549, 1550],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-opt-exec-2B5CBBC6/bin/src/main/kotlin/io/bazel/kotlin/builder/libbuilder-hjar.jdeps"
    }],
    "primaryOutputId": 1549,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 108,
    "actionKey": "260614b1b3717f79886c2efd6fad67b22a148c7026a39c7f8faa1774fd2b9685",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [1326],
    "outputIds": [1551],
    "primaryOutputId": 1551,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 61,
    "actionKey": "70902a87999f2856c198284d1674bebc4a8e0be18e1e20ddf00b06ef80327532",
    "mnemonic": "JavaIjar",
    "configurationId": 3,
    "inputDepSetIds": [1329],
    "outputIds": [1544],
    "primaryOutputId": 1544,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 119,
    "actionKey": "2ada2c7251cc81120d4006250c2c29d41026ccc6b99f00265dd891a08a3e4d76",
    "mnemonic": "Javac",
    "configurationId": 3,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [1330],
    "outputIds": [1552, 1553, 1554],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1552,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 119,
    "actionKey": "56af78aaf9149380890830d7a3aa050e401f0b1c37c7eac953b0695864b0aa16",
    "mnemonic": "JavaSourceJar",
    "configurationId": 3,
    "inputDepSetIds": [512],
    "outputIds": [1555],
    "primaryOutputId": 1555,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 96,
    "actionKey": "17d978f6f1429426585d1967dcdaa8a5c09b8bae173cf1f1f82c5ebc925bf913",
    "mnemonic": "CreateCompileJar",
    "configurationId": 3,
    "inputDepSetIds": [1332],
    "outputIds": [1545],
    "primaryOutputId": 1545,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 107,
    "actionKey": "6965f9ba8a27f8a755f973cddfbd2047b9527a1873f729603ed5c174e5bd6008",
    "mnemonic": "Genrule",
    "configurationId": 3,
    "inputDepSetIds": [1333],
    "outputIds": [1515],
    "executionInfo": [{
      "key": "no-ide"
    }],
    "primaryOutputId": 1515,
    "executionPlatform": "@local_config_platform//:host"
  }],
  "targets": [{
    "id": 1,
    "label": "//:rules_kotlin_release_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 2,
    "label": "//:rules_kotlin_release_WORKSPACE",
    "ruleClassId": 1
  }, {
    "id": 3,
    "label": "//:rules_kotlin_release",
    "ruleClassId": 2
  }, {
    "id": 4,
    "label": "//third_party:pkg",
    "ruleClassId": 2
  }, {
    "id": 5,
    "label": "//kotlin:pkg",
    "ruleClassId": 2
  }, {
    "id": 6,
    "label": "//src/main/kotlin:pkg",
    "ruleClassId": 2
  }, {
    "id": 7,
    "label": "//src/main/starlark:pkg",
    "ruleClassId": 2
  }, {
    "id": 8,
    "label": "//src/test/kotlin/io/bazel/kotlin:KotlinJvmAssociatesBasicVisibilityTest",
    "ruleClassId": 3
  }, {
    "id": 9,
    "label": "//src/test/kotlin/io/bazel/kotlin:KotlinJvmKaptAssertionTest",
    "ruleClassId": 3
  }, {
    "id": 10,
    "label": "//src/main/kotlin:pkg_jdeps_merger_worker.jar",
    "ruleClassId": 1
  }, {
    "id": 11,
    "label": "//src/main/kotlin:pkg_kotlin_worker.jar",
    "ruleClassId": 1
  }, {
    "id": 12,
    "label": "//src/main/starlark:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 13,
    "label": "//kotlin/internal:pkg",
    "ruleClassId": 2
  }, {
    "id": 14,
    "label": "//src/test/kotlin/io/bazel/kotlin:KotlinNormalizationAssertionTest",
    "ruleClassId": 3
  }, {
    "id": 15,
    "label": "//src/main/kotlin/io/bazel/kotlin/compiler:pkg",
    "ruleClassId": 2
  }, {
    "id": 16,
    "label": "//third_party:pkg_jarjar.jar",
    "ruleClassId": 1
  }, {
    "id": 17,
    "label": "//src/test/starlark:convert_tests_test_0",
    "ruleClassId": 4
  }, {
    "id": 18,
    "label": "//src/test/starlark:convert_tests_test_1",
    "ruleClassId": 5
  }, {
    "id": 19,
    "label": "//kotlin/settings:pkg",
    "ruleClassId": 2
  }, {
    "id": 20,
    "label": "//src/test/kotlin/io/bazel/kotlin:KotlinJvmBasicAssertionTest",
    "ruleClassId": 3
  }, {
    "id": 21,
    "label": "//src/main/starlark/core:pkg",
    "ruleClassId": 2
  }, {
    "id": 22,
    "label": "//third_party:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 23,
    "label": "//kotlin:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 24,
    "label": "//src/main/kotlin:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 25,
    "label": "//src/test/kotlin/io/bazel/kotlin:KotlinJvm13Test",
    "ruleClassId": 3
  }, {
    "id": 26,
    "label": "//kotlin:pkg_dependencies.bzl",
    "ruleClassId": 1
  }, {
    "id": 27,
    "label": "//src/main/kotlin/io/bazel/kotlin/compiler:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 28,
    "label": "//src/main/starlark/core/repositories:pkg",
    "ruleClassId": 2
  }, {
    "id": 29,
    "label": "//kotlin/settings:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 30,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmJdepsTest",
    "ruleClassId": 3
  }, {
    "id": 31,
    "label": "//src/test/data/jvm/basic:test_associates_library",
    "ruleClassId": 6
  }, {
    "id": 32,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:JdepsParserTest",
    "ruleClassId": 7
  }, {
    "id": 33,
    "label": "//kotlin/internal/jvm:pkg",
    "ruleClassId": 2
  }, {
    "id": 34,
    "label": "//src/main/kotlin:jdeps-gen",
    "ruleClassId": 8
  }, {
    "id": 35,
    "label": "//src/main/kotlin:skip-code-gen",
    "ruleClassId": 8
  }, {
    "id": 36,
    "label": "//kotlin/internal/js:pkg",
    "ruleClassId": 2
  }, {
    "id": 37,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/utils:SourceJarCreatorTest",
    "ruleClassId": 7
  }, {
    "id": 38,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmStrictDepsTest",
    "ruleClassId": 3
  }, {
    "id": 39,
    "label": "//kotlin/internal/utils:pkg",
    "ruleClassId": 2
  }, {
    "id": 40,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmBasicTest",
    "ruleClassId": 7
  }, {
    "id": 41,
    "label": "//src/test/kotlin/io/bazel/kotlin:assertion_test_case",
    "ruleClassId": 6
  }, {
    "id": 42,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmKaptTest",
    "ruleClassId": 7
  }, {
    "id": 43,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJsTest",
    "ruleClassId": 7
  }, {
    "id": 44,
    "label": "//kotlin/internal:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 45,
    "label": "//kotlin/internal/lint:pkg",
    "ruleClassId": 2
  }, {
    "id": 46,
    "label": "//src/main/kotlin/io/bazel/kotlin/compiler:pkg_compiler.jar",
    "ruleClassId": 1
  }, {
    "id": 47,
    "label": "//src/main/starlark/core/options:pkg",
    "ruleClassId": 2
  }, {
    "id": 48,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/utils:ArgMapTest",
    "ruleClassId": 3
  }, {
    "id": 49,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/utils:JarCreatorTest",
    "ruleClassId": 3
  }, {
    "id": 50,
    "label": "//third_party:empty",
    "ruleClassId": 9
  }, {
    "id": 51,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmCoverageTest",
    "ruleClassId": 3
  }, {
    "id": 52,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:KotlinBuilderJvmAbiTest",
    "ruleClassId": 7
  }, {
    "id": 53,
    "label": "//src/main/starlark/core:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 54,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:JdepsMergerTest",
    "ruleClassId": 3
  }, {
    "id": 55,
    "label": "@bazel_tools//tools/jdk:platformclasspath",
    "ruleClassId": 10
  }, {
    "id": 56,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder/tasks:JdepsParserTestFixtures",
    "ruleClassId": 11
  }, {
    "id": 57,
    "label": "//kotlin/internal/jvm:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 58,
    "label": "//kotlin/internal/lint:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 59,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:merge_jdeps",
    "ruleClassId": 12
  }, {
    "id": 60,
    "label": "//src/main/starlark/core/repositories:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 61,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/tasks:tasks",
    "ruleClassId": 13
  }, {
    "id": 62,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_mixed_inherit_plugin_via_exported_deps",
    "ruleClassId": 6
  }, {
    "id": 63,
    "label": "//src/test/data/jvm/basic:test_module_name_bin",
    "ruleClassId": 14
  }, {
    "id": 64,
    "label": "@kotlin_rules_maven//:junit_junit",
    "ruleClassId": 15
  }, {
    "id": 65,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_mixed_no_plugin",
    "ruleClassId": 6
  }, {
    "id": 66,
    "label": "//src/test/kotlin/io/bazel/kotlin/builder:test_lib",
    "ruleClassId": 11
  }, {
    "id": 67,
    "label": "//src/main/kotlin/io/bazel/kotlin/compiler:compiler",
    "ruleClassId": 13
  }, {
    "id": 68,
    "label": "//kotlin/internal/js:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 69,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_mixed",
    "ruleClassId": 6
  }, {
    "id": 70,
    "label": "@kotlin_rules_maven//:com_google_truth_truth",
    "ruleClassId": 15
  }, {
    "id": 71,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:build",
    "ruleClassId": 12
  }, {
    "id": 72,
    "label": "@kotlin_rules_maven//:com_google_guava_guava",
    "ruleClassId": 15
  }, {
    "id": 73,
    "label": "//third_party:jarjar_runner",
    "ruleClassId": 12
  }, {
    "id": 74,
    "label": "//src/main/starlark/core/repositories/kotlin:pkg",
    "ruleClassId": 2
  }, {
    "id": 75,
    "label": "//src/test/data/jvm/basic:propagation_rt_via_export_consumer",
    "ruleClassId": 12
  }, {
    "id": 76,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_mixed_multiple_plugins_one_without_processor_class",
    "ruleClassId": 6
  }, {
    "id": 77,
    "label": "//src/test/data/jvm/basic:propagation_rt_via_runtime_deps_consumer",
    "ruleClassId": 12
  }, {
    "id": 78,
    "label": "//src/main/starlark/core/options:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 79,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/utils/jars:jars",
    "ruleClassId": 13
  }, {
    "id": 80,
    "label": "//src/test/data/jvm/basic:propagation_ct_consumer",
    "ruleClassId": 12
  }, {
    "id": 81,
    "label": "//src/test/data/jvm/basic:test_module_name_lib",
    "ruleClassId": 6
  }, {
    "id": 82,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_resources_mixed",
    "ruleClassId": 6
  }, {
    "id": 83,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_mixed_multiple_plugins",
    "ruleClassId": 6
  }, {
    "id": 84,
    "label": "//src/test/data/jvm/kapt:ap_kotlin_resources",
    "ruleClassId": 6
  }, {
    "id": 85,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/utils:utils",
    "ruleClassId": 13
  }, {
    "id": 86,
    "label": "//src/test/data/jvm/basic:test_module_name_attr_lib",
    "ruleClassId": 6
  }, {
    "id": 87,
    "label": "//src/main/starlark/core/repositories:pkg_initialize.bzl",
    "ruleClassId": 1
  }, {
    "id": 88,
    "label": "//src/test/kotlin/io/bazel/testing:testing",
    "ruleClassId": 6
  }, {
    "id": 89,
    "label": "//kotlin/internal/utils:pkg_BUILD.bazel",
    "ruleClassId": 1
  }, {
    "id": 90,
    "label": "@kotlin_rules_maven//:com_google_protobuf_protobuf_java_util",
    "ruleClassId": 15
  }, {
    "id": 91,
    "label": "@bazel_tools//tools/java/runfiles:runfiles",
    "ruleClassId": 11
  }, {
    "id": 92,
    "label": "@kotlin_rules_maven//:com_google_j2objc_j2objc_annotations",
    "ruleClassId": 15
  }, {
    "id": 93,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin:skip-code-gen",
    "ruleClassId": 12
  }, {
    "id": 94,
    "label": "@kotlin_rules_maven//:org_checkerframework_checker_qual",
    "ruleClassId": 15
  }, {
    "id": 95,
    "label": "//src/test/data/jvm/basic:test_embed_resources",
    "ruleClassId": 6
  }, {
    "id": 96,
    "label": "@kotlin_rules_maven//:javax_annotation_javax_annotation_api",
    "ruleClassId": 15
  }, {
    "id": 97,
    "label": "//src/main/kotlin/io/bazel/worker:worker",
    "ruleClassId": 13
  }, {
    "id": 98,
    "label": "@kotlin_rules_maven//:com_google_auto_service_auto_service_annotations",
    "ruleClassId": 15
  }, {
    "id": 99,
    "label": "//src/test/data/jvm/basic:conventional_strip_resources",
    "ruleClassId": 6
  }, {
    "id": 100,
    "label": "@com_github_jetbrains_kotlin//:kotlin-preloader",
    "ruleClassId": 13
  }, {
    "id": 101,
    "label": "@kotlin_rules_maven//:com_google_protobuf_protobuf_java",
    "ruleClassId": 15
  }, {
    "id": 102,
    "label": "@kotlin_rules_maven//:com_google_auto_value_auto_value_annotations",
    "ruleClassId": 15
  }, {
    "id": 103,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/toolchain:toolchain",
    "ruleClassId": 13
  }, {
    "id": 104,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:merge_jdeps_jarjar",
    "ruleClassId": 8
  }, {
    "id": 105,
    "label": "@kotlin_rules_maven//:org_hamcrest_hamcrest_core",
    "ruleClassId": 15
  }, {
    "id": 106,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/utils/jars:jars_jar",
    "ruleClassId": 9
  }, {
    "id": 107,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/tasks:tasks_jar",
    "ruleClassId": 9
  }, {
    "id": 108,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder:builder",
    "ruleClassId": 11
  }, {
    "id": 109,
    "label": "@kotlin_rules_maven//:com_google_code_findbugs_jsr305",
    "ruleClassId": 15
  }, {
    "id": 110,
    "label": "@kotlin_rules_maven//:com_google_auto_value_auto_value",
    "ruleClassId": 15
  }, {
    "id": 111,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:build_jarjar",
    "ruleClassId": 8
  }, {
    "id": 112,
    "label": "//src/test/data/jvm/kapt:autoservice",
    "ruleClassId": 16
  }, {
    "id": 113,
    "label": "//src/test/data/jvm/basic:test_embed_resources_strip_prefix",
    "ruleClassId": 6
  }, {
    "id": 114,
    "label": "//src/test/data/jvm/basic:propagation_test_exporter_lib",
    "ruleClassId": 6
  }, {
    "id": 115,
    "label": "//src/test/data/jvm/basic:propagation_test_runtime_lib",
    "ruleClassId": 6
  }, {
    "id": 116,
    "label": "//src/test/data/jvm/basic:test_merge_resourcesjar",
    "ruleClassId": 6
  }, {
    "id": 117,
    "label": "@kotlin_rules_maven//:com_google_guava_listenablefuture",
    "ruleClassId": 15
  }, {
    "id": 118,
    "label": "//src/test/data/jvm/kapt:autovalue",
    "ruleClassId": 16
  }, {
    "id": 119,
    "label": "//third_party:dagger",
    "ruleClassId": 11
  }, {
    "id": 120,
    "label": "@kotlin_rules_maven//:org_checkerframework_checker_compat_qual",
    "ruleClassId": 15
  }, {
    "id": 121,
    "label": "@kotlin_rules_maven//:javax_inject_javax_inject",
    "ruleClassId": 15
  }, {
    "id": 122,
    "label": "//src/test/data/jvm/kapt:library_exporting_autovalue_and_junit",
    "ruleClassId": 11
  }, {
    "id": 123,
    "label": "@kotlin_rules_maven//:com_googlecode_java_diff_utils_diffutils",
    "ruleClassId": 15
  }, {
    "id": 124,
    "label": "@kotlin_rules_maven//:com_google_errorprone_error_prone_annotations",
    "ruleClassId": 15
  }, {
    "id": 125,
    "label": "//src/test/data/jvm/kapt:ap_kotlin",
    "ruleClassId": 6
  }, {
    "id": 126,
    "label": "@kotlin_rules_maven//:com_google_guava_failureaccess",
    "ruleClassId": 15
  }, {
    "id": 127,
    "label": "//src/main/kotlin/io/bazel/kotlin/compiler:compiler_jar",
    "ruleClassId": 9
  }, {
    "id": 128,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin/jdeps:jdeps-gen",
    "ruleClassId": 12
  }, {
    "id": 129,
    "label": "//src/test/data/jvm/kapt:autovalue_no_processor_class",
    "ruleClassId": 16
  }, {
    "id": 130,
    "label": "//third_party:autovalue",
    "ruleClassId": 11
  }, {
    "id": 131,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/utils:utils_jar",
    "ruleClassId": 9
  }, {
    "id": 132,
    "label": "@kotlin_rules_maven//:org_pantsbuild_jarjar",
    "ruleClassId": 15
  }, {
    "id": 133,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin/jdeps:jdeps-gen-lib",
    "ruleClassId": 13
  }, {
    "id": 134,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/toolchain:toolchain_jar",
    "ruleClassId": 9
  }, {
    "id": 135,
    "label": "@remote_java_tools//:jacoco_coverage_runner",
    "ruleClassId": 13
  }, {
    "id": 136,
    "label": "//src/test/data/jvm/basic:resourcejar",
    "ruleClassId": 11
  }, {
    "id": 137,
    "label": "@kotlin_rules_maven//:org_ow2_asm_asm",
    "ruleClassId": 15
  }, {
    "id": 138,
    "label": "//src/main/kotlin/io/bazel/worker:worker_proto",
    "ruleClassId": 13
  }, {
    "id": 139,
    "label": "@bazel_tools//tools/java/runfiles:auto_bazel_repository_processor",
    "ruleClassId": 16
  }, {
    "id": 140,
    "label": "//src/main/kotlin/io/bazel/worker:worker_jar",
    "ruleClassId": 9
  }, {
    "id": 141,
    "label": "//third_party:autovalue_plugin",
    "ruleClassId": 16
  }, {
    "id": 142,
    "label": "@bazel_tools//tools/java/runfiles:auto_bazel_repository",
    "ruleClassId": 11
  }, {
    "id": 143,
    "label": "@kotlin_rules_maven//:org_apache_ant_ant",
    "ruleClassId": 15
  }, {
    "id": 144,
    "label": "@kotlin_rules_maven//:com_google_dagger_dagger",
    "ruleClassId": 15
  }, {
    "id": 145,
    "label": "//third_party:dagger_component_plugin",
    "ruleClassId": 16
  }, {
    "id": 146,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin/jdeps:jdeps-gen-services",
    "ruleClassId": 17
  }, {
    "id": 147,
    "label": "@kotlin_rules_maven//:com_google_code_gson_gson",
    "ruleClassId": 15
  }, {
    "id": 148,
    "label": "@kotlin_rules_maven//:com_google_auto_service_auto_service",
    "ruleClassId": 15
  }, {
    "id": 149,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin:skip-code-gen-services",
    "ruleClassId": 17
  }, {
    "id": 150,
    "label": "@kotlin_rules_maven//:org_apache_maven_maven_plugin_api",
    "ruleClassId": 15
  }, {
    "id": 151,
    "label": "@kotlin_rules_maven//:org_ow2_asm_asm_commons",
    "ruleClassId": 15
  }, {
    "id": 152,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin:skip-code-gen-lib",
    "ruleClassId": 13
  }, {
    "id": 153,
    "label": "//src/main/protobuf:kotlin_model_proto",
    "ruleClassId": 18
  }, {
    "id": 154,
    "label": "@bazel_tools//src/main/protobuf:deps_proto",
    "ruleClassId": 18
  }, {
    "id": 155,
    "label": "@bazel_tools//src/main/protobuf:worker_protocol_proto",
    "ruleClassId": 18
  }, {
    "id": 156,
    "label": "@kotlin_rules_maven//:org_ow2_asm_asm_tree",
    "ruleClassId": 15
  }, {
    "id": 157,
    "label": "@kotlin_rules_maven//:org_apache_maven_maven_artifact",
    "ruleClassId": 15
  }, {
    "id": 158,
    "label": "@kotlin_rules_maven//:com_google_dagger_dagger_compiler",
    "ruleClassId": 15
  }, {
    "id": 159,
    "label": "@kotlin_rules_maven//:org_eclipse_sisu_org_eclipse_sisu_plexus",
    "ruleClassId": 15
  }, {
    "id": 160,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin/jdeps:jdeps-gen-lib_jar",
    "ruleClassId": 9
  }, {
    "id": 161,
    "label": "@kotlin_rules_maven//:org_apache_maven_maven_model",
    "ruleClassId": 15
  }, {
    "id": 162,
    "label": "//src/main/kotlin/io/bazel/kotlin/plugin:skip-code-gen-lib_jar",
    "ruleClassId": 9
  }, {
    "id": 163,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:merge_jdeps_raw",
    "ruleClassId": 12
  }, {
    "id": 164,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:build_raw",
    "ruleClassId": 12
  }, {
    "id": 165,
    "label": "@kotlin_rules_maven//:org_ow2_asm_asm_analysis",
    "ruleClassId": 15
  }, {
    "id": 166,
    "label": "@kotlin_rules_maven//:com_google_auto_auto_common",
    "ruleClassId": 15
  }, {
    "id": 167,
    "label": "@kotlin_rules_maven//:org_apache_ant_ant_launcher",
    "ruleClassId": 15
  }, {
    "id": 168,
    "label": "@kotlin_rules_maven//:org_jetbrains_kotlinx_kotlinx_metadata_jvm",
    "ruleClassId": 15
  }, {
    "id": 169,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:build_lib",
    "ruleClassId": 13
  }, {
    "id": 170,
    "label": "@kotlin_rules_maven//:org_apache_commons_commons_lang3",
    "ruleClassId": 15
  }, {
    "id": 171,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:merge_jdeps_lib",
    "ruleClassId": 13
  }, {
    "id": 172,
    "label": "@kotlin_rules_maven//:org_eclipse_sisu_org_eclipse_sisu_inject",
    "ruleClassId": 15
  }, {
    "id": 173,
    "label": "@kotlin_rules_maven//:com_google_dagger_dagger_producers",
    "ruleClassId": 15
  }, {
    "id": 174,
    "label": "@kotlin_rules_maven//:com_google_googlejavaformat_google_java_format",
    "ruleClassId": 15
  }, {
    "id": 175,
    "label": "@kotlin_rules_maven//:org_jetbrains_kotlin_kotlin_stdlib_jdk8",
    "ruleClassId": 15
  }, {
    "id": 176,
    "label": "@kotlin_rules_maven//:com_squareup_javapoet",
    "ruleClassId": 15
  }, {
    "id": 177,
    "label": "@kotlin_rules_maven//:net_ltgt_gradle_incap_incap",
    "ruleClassId": 15
  }, {
    "id": 178,
    "label": "@kotlin_rules_maven//:org_codehaus_plexus_plexus_utils",
    "ruleClassId": 15
  }, {
    "id": 179,
    "label": "@kotlin_rules_maven//:org_jetbrains_kotlin_kotlin_stdlib",
    "ruleClassId": 15
  }, {
    "id": 180,
    "label": "//src/main/kotlin/io/bazel/worker:worker_proto_bundle_bin",
    "ruleClassId": 12
  }, {
    "id": 181,
    "label": "@kotlin_rules_maven//:com_google_devtools_ksp_symbol_processing_api",
    "ruleClassId": 15
  }, {
    "id": 182,
    "label": "@kotlin_rules_maven//:org_codehaus_plexus_plexus_component_annotations",
    "ruleClassId": 15
  }, {
    "id": 183,
    "label": "@kotlin_rules_maven//:javax_enterprise_cdi_api",
    "ruleClassId": 15
  }, {
    "id": 184,
    "label": "@kotlin_rules_maven//:org_codehaus_plexus_plexus_classworlds",
    "ruleClassId": 15
  }, {
    "id": 185,
    "label": "@kotlin_rules_maven//:com_google_dagger_dagger_spi",
    "ruleClassId": 15
  }, {
    "id": 186,
    "label": "@kotlin_rules_maven//:org_jetbrains_kotlin_kotlin_stdlib_common",
    "ruleClassId": 15
  }, {
    "id": 187,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:merge_jdeps_lib_jar",
    "ruleClassId": 9
  }, {
    "id": 188,
    "label": "@kotlin_rules_maven//:org_jetbrains_annotations",
    "ruleClassId": 15
  }, {
    "id": 189,
    "label": "@kotlin_rules_maven//:javax_annotation_jsr250_api",
    "ruleClassId": 15
  }, {
    "id": 190,
    "label": "@kotlin_rules_maven//:com_google_errorprone_javac_shaded",
    "ruleClassId": 15
  }, {
    "id": 191,
    "label": "//src/main/kotlin/io/bazel/kotlin/builder/cmd:build_lib_jar",
    "ruleClassId": 9
  }, {
    "id": 192,
    "label": "@kotlin_rules_maven//:org_jetbrains_kotlin_kotlin_stdlib_jdk7",
    "ruleClassId": 15
  }],
  "depSetOfFiles": [{
    "id": 1,
    "directArtifactIds": [1]
  }, {
    "id": 2,
    "directArtifactIds": [3]
  }, {
    "id": 4,
    "directArtifactIds": [2, 4, 6, 7, 8, 9, 5]
  }, {
    "id": 6,
    "directArtifactIds": [10, 11]
  }, {
    "id": 5,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [12]
  }, {
    "id": 3,
    "transitiveDepSetIds": [4, 5]
  }, {
    "id": 8,
    "directArtifactIds": [15, 16, 17, 18, 19, 14]
  }, {
    "id": 7,
    "transitiveDepSetIds": [8, 5]
  }, {
    "id": 10,
    "directArtifactIds": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 20]
  }, {
    "id": 9,
    "transitiveDepSetIds": [10, 5]
  }, {
    "id": 12,
    "directArtifactIds": [34, 35, 36, 37, 38, 39, 33]
  }, {
    "id": 11,
    "transitiveDepSetIds": [12, 5]
  }, {
    "id": 14,
    "directArtifactIds": [41, 42, 40]
  }, {
    "id": 13,
    "transitiveDepSetIds": [14, 5]
  }, {
    "id": 18,
    "directArtifactIds": [43, 44, 45, 46, 47]
  }, {
    "id": 19,
    "directArtifactIds": [48, 49, 50, 51]
  }, {
    "id": 21,
    "directArtifactIds": [48, 49, 50, 51]
  }, {
    "id": 20,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [52]
  }, {
    "id": 23,
    "directArtifactIds": [45, 53, 54, 55, 56, 57, 58]
  }, {
    "id": 25,
    "directArtifactIds": [47, 59]
  }, {
    "id": 24,
    "transitiveDepSetIds": [25, 23],
    "directArtifactIds": [46, 56, 60, 61, 62]
  }, {
    "id": 22,
    "transitiveDepSetIds": [23, 24, 25, 21],
    "directArtifactIds": [43, 44]
  }, {
    "id": 26,
    "directArtifactIds": [48, 49, 50, 51]
  }, {
    "id": 17,
    "transitiveDepSetIds": [18, 19, 20, 22, 26],
    "directArtifactIds": [52]
  }, {
    "id": 16,
    "transitiveDepSetIds": [17],
    "directArtifactIds": [63]
  }, {
    "id": 27,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 15,
    "transitiveDepSetIds": [16, 27]
  }, {
    "id": 28,
    "directArtifactIds": [178, 180]
  }, {
    "id": 31,
    "transitiveDepSetIds": [20, 22, 26]
  }, {
    "id": 30,
    "transitiveDepSetIds": [31],
    "directArtifactIds": [179]
  }, {
    "id": 32,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 29,
    "transitiveDepSetIds": [30, 32]
  }, {
    "id": 33,
    "directArtifactIds": [178, 180]
  }, {
    "id": 34,
    "directArtifactIds": [63, 180]
  }, {
    "id": 35,
    "directArtifactIds": [188]
  }, {
    "id": 36,
    "directArtifactIds": [190]
  }, {
    "id": 40,
    "directArtifactIds": [44, 121]
  }, {
    "id": 44,
    "directArtifactIds": [192, 49]
  }, {
    "id": 46,
    "directArtifactIds": [193, 194, 195, 196, 197, 198, 199]
  }, {
    "id": 48,
    "directArtifactIds": [200, 201]
  }, {
    "id": 47,
    "transitiveDepSetIds": [48, 46],
    "directArtifactIds": [202, 197, 203, 204, 205]
  }, {
    "id": 45,
    "transitiveDepSetIds": [46, 47, 48],
    "directArtifactIds": [206, 44, 49]
  }, {
    "id": 43,
    "transitiveDepSetIds": [44, 45],
    "directArtifactIds": [186, 49]
  }, {
    "id": 42,
    "transitiveDepSetIds": [43],
    "directArtifactIds": [207]
  }, {
    "id": 41,
    "transitiveDepSetIds": [42],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 39,
    "transitiveDepSetIds": [40, 41]
  }, {
    "id": 38,
    "transitiveDepSetIds": [39],
    "directArtifactIds": [189]
  }, {
    "id": 37,
    "transitiveDepSetIds": [38],
    "directArtifactIds": [191]
  }, {
    "id": 49,
    "directArtifactIds": [319, 320, 321]
  }, {
    "id": 52,
    "transitiveDepSetIds": [18, 19, 22, 26]
  }, {
    "id": 51,
    "transitiveDepSetIds": [52],
    "directArtifactIds": [324]
  }, {
    "id": 53,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 50,
    "transitiveDepSetIds": [51, 53]
  }, {
    "id": 54,
    "directArtifactIds": [325, 180]
  }, {
    "id": 57,
    "transitiveDepSetIds": [22, 26]
  }, {
    "id": 56,
    "transitiveDepSetIds": [57],
    "directArtifactIds": [326]
  }, {
    "id": 58,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 55,
    "transitiveDepSetIds": [56, 58]
  }, {
    "id": 59,
    "directArtifactIds": [325, 180]
  }, {
    "id": 60,
    "directArtifactIds": [324, 180]
  }, {
    "id": 61,
    "directArtifactIds": [332]
  }, {
    "id": 66,
    "directArtifactIds": [334, 335]
  }, {
    "id": 67,
    "directArtifactIds": [336, 337]
  }, {
    "id": 68,
    "directArtifactIds": [338, 339]
  }, {
    "id": 69,
    "directArtifactIds": [340, 341]
  }, {
    "id": 70,
    "directArtifactIds": [342, 343]
  }, {
    "id": 71,
    "directArtifactIds": [344, 345]
  }, {
    "id": 72,
    "directArtifactIds": [346, 347]
  }, {
    "id": 65,
    "transitiveDepSetIds": [66, 67, 68, 69, 70, 71, 72],
    "directArtifactIds": [348, 349]
  }, {
    "id": 75,
    "transitiveDepSetIds": [45],
    "directArtifactIds": [329, 49]
  }, {
    "id": 74,
    "transitiveDepSetIds": [75],
    "directArtifactIds": [207]
  }, {
    "id": 73,
    "transitiveDepSetIds": [74],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 64,
    "transitiveDepSetIds": [65, 40, 73],
    "directArtifactIds": [348, 334, 335, 336, 337, 338, 339, 349, 340, 341, 342, 343, 344, 345, 346, 347]
  }, {
    "id": 63,
    "transitiveDepSetIds": [64],
    "directArtifactIds": [331]
  }, {
    "id": 62,
    "transitiveDepSetIds": [63],
    "directArtifactIds": [333]
  }, {
    "id": 76,
    "directArtifactIds": [350, 320, 321]
  }, {
    "id": 77,
    "directArtifactIds": [353]
  }, {
    "id": 78,
    "directArtifactIds": [354]
  }, {
    "id": 79,
    "directArtifactIds": [355]
  }, {
    "id": 81,
    "directArtifactIds": [357, 358, 359, 360, 361, 362, 363, 364, 365, 356]
  }, {
    "id": 80,
    "transitiveDepSetIds": [81, 5]
  }, {
    "id": 84,
    "transitiveDepSetIds": [18, 19, 22, 26]
  }, {
    "id": 83,
    "transitiveDepSetIds": [84],
    "directArtifactIds": [366]
  }, {
    "id": 85,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 82,
    "transitiveDepSetIds": [83, 85]
  }, {
    "id": 86,
    "directArtifactIds": [367, 180]
  }, {
    "id": 89,
    "transitiveDepSetIds": [22, 26]
  }, {
    "id": 88,
    "transitiveDepSetIds": [89],
    "directArtifactIds": [368]
  }, {
    "id": 90,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 87,
    "transitiveDepSetIds": [88, 90]
  }, {
    "id": 91,
    "directArtifactIds": [367, 180]
  }, {
    "id": 92,
    "directArtifactIds": [366, 180]
  }, {
    "id": 93,
    "directArtifactIds": [374]
  }, {
    "id": 98,
    "directArtifactIds": [376, 377]
  }, {
    "id": 99,
    "directArtifactIds": [378, 379]
  }, {
    "id": 100,
    "directArtifactIds": [380, 381]
  }, {
    "id": 101,
    "directArtifactIds": [382, 383]
  }, {
    "id": 102,
    "directArtifactIds": [384, 385]
  }, {
    "id": 103,
    "directArtifactIds": [386, 387]
  }, {
    "id": 97,
    "transitiveDepSetIds": [98, 99, 100, 101, 102, 103],
    "directArtifactIds": [388, 389, 390, 391, 384, 392]
  }, {
    "id": 106,
    "transitiveDepSetIds": [45],
    "directArtifactIds": [371, 49]
  }, {
    "id": 105,
    "transitiveDepSetIds": [106],
    "directArtifactIds": [207]
  }, {
    "id": 104,
    "transitiveDepSetIds": [105],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 96,
    "transitiveDepSetIds": [97, 40, 104],
    "directArtifactIds": [388, 376, 377, 378, 379, 380, 381, 389, 390, 391, 382, 383, 384, 385, 386, 387, 392]
  }, {
    "id": 95,
    "transitiveDepSetIds": [96],
    "directArtifactIds": [373]
  }, {
    "id": 94,
    "transitiveDepSetIds": [95],
    "directArtifactIds": [375]
  }, {
    "id": 107,
    "directArtifactIds": [393, 320, 321]
  }, {
    "id": 109,
    "directArtifactIds": [397, 398, 396]
  }, {
    "id": 108,
    "transitiveDepSetIds": [109, 5]
  }, {
    "id": 110,
    "directArtifactIds": [399]
  }, {
    "id": 111,
    "directArtifactIds": [401]
  }, {
    "id": 112,
    "directArtifactIds": [400, 402]
  }, {
    "id": 113,
    "directArtifactIds": [403, 320, 321]
  }, {
    "id": 114,
    "directArtifactIds": [407]
  }, {
    "id": 115,
    "directArtifactIds": [406, 408]
  }, {
    "id": 116,
    "directArtifactIds": [409, 320, 321]
  }, {
    "id": 118,
    "directArtifactIds": [413, 412]
  }, {
    "id": 117,
    "transitiveDepSetIds": [118, 5]
  }, {
    "id": 121,
    "transitiveDepSetIds": [18, 19, 22, 26]
  }, {
    "id": 120,
    "transitiveDepSetIds": [121],
    "directArtifactIds": [414]
  }, {
    "id": 122,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 119,
    "transitiveDepSetIds": [120, 122]
  }, {
    "id": 123,
    "directArtifactIds": [415, 180]
  }, {
    "id": 126,
    "transitiveDepSetIds": [22, 26]
  }, {
    "id": 125,
    "transitiveDepSetIds": [126],
    "directArtifactIds": [416]
  }, {
    "id": 127,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 124,
    "transitiveDepSetIds": [125, 127]
  }, {
    "id": 128,
    "directArtifactIds": [415, 180]
  }, {
    "id": 129,
    "directArtifactIds": [414, 180]
  }, {
    "id": 130,
    "directArtifactIds": [422]
  }, {
    "id": 136,
    "transitiveDepSetIds": [45],
    "directArtifactIds": [419, 49]
  }, {
    "id": 135,
    "transitiveDepSetIds": [136],
    "directArtifactIds": [207]
  }, {
    "id": 134,
    "transitiveDepSetIds": [135],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 133,
    "transitiveDepSetIds": [97, 40, 134],
    "directArtifactIds": [388, 376, 377, 378, 379, 380, 381, 389, 390, 391, 382, 383, 384, 385, 386, 387, 392]
  }, {
    "id": 132,
    "transitiveDepSetIds": [133],
    "directArtifactIds": [421]
  }, {
    "id": 131,
    "transitiveDepSetIds": [132],
    "directArtifactIds": [423]
  }, {
    "id": 137,
    "directArtifactIds": [424, 320, 321]
  }, {
    "id": 139,
    "directArtifactIds": [428, 429, 430, 431, 427]
  }, {
    "id": 138,
    "transitiveDepSetIds": [139, 5]
  }, {
    "id": 140,
    "directArtifactIds": [432]
  }, {
    "id": 141,
    "directArtifactIds": [433]
  }, {
    "id": 142,
    "directArtifactIds": [434]
  }, {
    "id": 145,
    "transitiveDepSetIds": [18, 19, 22, 26]
  }, {
    "id": 144,
    "transitiveDepSetIds": [145],
    "directArtifactIds": [435]
  }, {
    "id": 146,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 143,
    "transitiveDepSetIds": [144, 146]
  }, {
    "id": 147,
    "directArtifactIds": [436, 180]
  }, {
    "id": 150,
    "transitiveDepSetIds": [22, 26]
  }, {
    "id": 149,
    "transitiveDepSetIds": [150],
    "directArtifactIds": [437]
  }, {
    "id": 151,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 148,
    "transitiveDepSetIds": [149, 151]
  }, {
    "id": 152,
    "directArtifactIds": [436, 180]
  }, {
    "id": 153,
    "directArtifactIds": [435, 180]
  }, {
    "id": 154,
    "directArtifactIds": [443]
  }, {
    "id": 160,
    "transitiveDepSetIds": [45],
    "directArtifactIds": [440, 49]
  }, {
    "id": 159,
    "transitiveDepSetIds": [160],
    "directArtifactIds": [207]
  }, {
    "id": 158,
    "transitiveDepSetIds": [159],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 157,
    "transitiveDepSetIds": [40, 158]
  }, {
    "id": 156,
    "transitiveDepSetIds": [157],
    "directArtifactIds": [442]
  }, {
    "id": 155,
    "transitiveDepSetIds": [156],
    "directArtifactIds": [444]
  }, {
    "id": 161,
    "directArtifactIds": [445, 320, 321]
  }, {
    "id": 162,
    "directArtifactIds": [23]
  }, {
    "id": 163,
    "directArtifactIds": [448]
  }, {
    "id": 165,
    "directArtifactIds": [450, 451, 452, 453, 454, 455, 449]
  }, {
    "id": 164,
    "transitiveDepSetIds": [165, 5]
  }, {
    "id": 166,
    "directArtifactIds": [456]
  }, {
    "id": 170,
    "directArtifactIds": [457, 458, 459, 460, 461, 462, 46, 47, 45, 55]
  }, {
    "id": 173,
    "directArtifactIds": [462, 463]
  }, {
    "id": 174,
    "directArtifactIds": [461, 463]
  }, {
    "id": 175,
    "directArtifactIds": [464, 463]
  }, {
    "id": 177,
    "directArtifactIds": [465, 466]
  }, {
    "id": 176,
    "transitiveDepSetIds": [177],
    "directArtifactIds": [466]
  }, {
    "id": 172,
    "transitiveDepSetIds": [173, 174, 175, 176],
    "directArtifactIds": [458, 467, 459, 460, 468, 48, 49, 469, 466]
  }, {
    "id": 171,
    "transitiveDepSetIds": [172, 174, 173, 24, 25, 23, 176],
    "directArtifactIds": [457, 459, 460, 55, 467, 61, 469]
  }, {
    "id": 169,
    "transitiveDepSetIds": [170, 19, 171, 26]
  }, {
    "id": 168,
    "transitiveDepSetIds": [169],
    "directArtifactIds": [470]
  }, {
    "id": 178,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 167,
    "transitiveDepSetIds": [168, 178]
  }, {
    "id": 179,
    "directArtifactIds": [471, 180]
  }, {
    "id": 182,
    "transitiveDepSetIds": [171, 26]
  }, {
    "id": 181,
    "transitiveDepSetIds": [182],
    "directArtifactIds": [472]
  }, {
    "id": 183,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 180,
    "transitiveDepSetIds": [181, 183]
  }, {
    "id": 184,
    "directArtifactIds": [471, 180]
  }, {
    "id": 185,
    "directArtifactIds": [470, 180]
  }, {
    "id": 186,
    "directArtifactIds": [478]
  }, {
    "id": 190,
    "directArtifactIds": [480, 15]
  }, {
    "id": 191,
    "directArtifactIds": [481, 15]
  }, {
    "id": 192,
    "directArtifactIds": [48, 15]
  }, {
    "id": 193,
    "directArtifactIds": [88, 15]
  }, {
    "id": 195,
    "directArtifactIds": [95, 15]
  }, {
    "id": 196,
    "directArtifactIds": [102, 101]
  }, {
    "id": 197,
    "directArtifactIds": [105, 104]
  }, {
    "id": 198,
    "directArtifactIds": [49, 114]
  }, {
    "id": 199,
    "directArtifactIds": [132, 15]
  }, {
    "id": 194,
    "transitiveDepSetIds": [195, 192, 196, 197, 198, 199]
  }, {
    "id": 200,
    "directArtifactIds": [50, 110]
  }, {
    "id": 201,
    "directArtifactIds": [51, 111]
  }, {
    "id": 202,
    "directArtifactIds": [91, 15]
  }, {
    "id": 205,
    "directArtifactIds": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 208,
    "directArtifactIds": [482, 483]
  }, {
    "id": 209,
    "directArtifactIds": [484, 483]
  }, {
    "id": 210,
    "directArtifactIds": [485, 483]
  }, {
    "id": 207,
    "transitiveDepSetIds": [208, 209, 210, 192, 198],
    "directArtifactIds": [486, 487, 488, 489, 490]
  }, {
    "id": 206,
    "transitiveDepSetIds": [207, 200, 201]
  }, {
    "id": 204,
    "transitiveDepSetIds": [205, 206, 209, 208],
    "directArtifactIds": [491, 487, 488, 486, 492]
  }, {
    "id": 203,
    "transitiveDepSetIds": [204, 206, 209, 208, 196, 198],
    "directArtifactIds": [487, 488, 493]
  }, {
    "id": 222,
    "directArtifactIds": [494, 495]
  }, {
    "id": 223,
    "transitiveDepSetIds": [46],
    "directArtifactIds": [496, 497, 498]
  }, {
    "id": 221,
    "transitiveDepSetIds": [208, 209, 210, 222, 223],
    "directArtifactIds": [498]
  }, {
    "id": 220,
    "transitiveDepSetIds": [221],
    "directArtifactIds": [488]
  }, {
    "id": 226,
    "transitiveDepSetIds": [208],
    "directArtifactIds": [499]
  }, {
    "id": 225,
    "transitiveDepSetIds": [226, 208],
    "directArtifactIds": [498]
  }, {
    "id": 224,
    "transitiveDepSetIds": [225],
    "directArtifactIds": [500]
  }, {
    "id": 219,
    "transitiveDepSetIds": [220, 224, 209, 223],
    "directArtifactIds": [501, 100, 498, 502]
  }, {
    "id": 218,
    "transitiveDepSetIds": [219],
    "directArtifactIds": [487]
  }, {
    "id": 227,
    "directArtifactIds": [489, 503]
  }, {
    "id": 217,
    "transitiveDepSetIds": [218, 220, 226, 227, 208, 209, 210, 223],
    "directArtifactIds": [100, 498, 502]
  }, {
    "id": 216,
    "transitiveDepSetIds": [217],
    "directArtifactIds": [486]
  }, {
    "id": 229,
    "directArtifactIds": [504, 502]
  }, {
    "id": 228,
    "transitiveDepSetIds": [229],
    "directArtifactIds": [502]
  }, {
    "id": 215,
    "transitiveDepSetIds": [216, 218, 220, 227, 208, 209, 210, 228],
    "directArtifactIds": [490, 48, 49, 505, 502, 50, 51]
  }, {
    "id": 214,
    "transitiveDepSetIds": [215, 218, 220, 209, 208, 47, 48, 46, 216, 228],
    "directArtifactIds": [492, 196, 505, 493, 102, 49]
  }, {
    "id": 213,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [475, 49]
  }, {
    "id": 212,
    "transitiveDepSetIds": [213],
    "directArtifactIds": [207]
  }, {
    "id": 211,
    "transitiveDepSetIds": [212],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 189,
    "transitiveDepSetIds": [190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 211],
    "directArtifactIds": [506, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91]
  }, {
    "id": 188,
    "transitiveDepSetIds": [189],
    "directArtifactIds": [477]
  }, {
    "id": 187,
    "transitiveDepSetIds": [188],
    "directArtifactIds": [479]
  }, {
    "id": 230,
    "directArtifactIds": [507, 320, 321]
  }, {
    "id": 234,
    "directArtifactIds": [48, 49, 50, 51]
  }, {
    "id": 233,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 232,
    "transitiveDepSetIds": [233],
    "directArtifactIds": [510]
  }, {
    "id": 235,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 231,
    "transitiveDepSetIds": [232, 235]
  }, {
    "id": 236,
    "directArtifactIds": [511, 180]
  }, {
    "id": 238,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [512]
  }, {
    "id": 239,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 237,
    "transitiveDepSetIds": [238, 239]
  }, {
    "id": 240,
    "directArtifactIds": [511, 180]
  }, {
    "id": 241,
    "directArtifactIds": [510, 180]
  }, {
    "id": 245,
    "directArtifactIds": [515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547]
  }, {
    "id": 246,
    "directArtifactIds": [548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561]
  }, {
    "id": 247,
    "directArtifactIds": [562, 563, 564, 565, 566, 567, 568, 569]
  }, {
    "id": 248,
    "directArtifactIds": [570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626]
  }, {
    "id": 244,
    "transitiveDepSetIds": [245, 246, 247, 248]
  }, {
    "id": 249,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 243,
    "transitiveDepSetIds": [244, 249],
    "directArtifactIds": [628, 629]
  }, {
    "id": 251,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [467, 630]
  }, {
    "id": 252,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [467, 630]
  }, {
    "id": 250,
    "transitiveDepSetIds": [251, 252]
  }, {
    "id": 254,
    "directArtifactIds": [631, 632, 633, 634]
  }, {
    "id": 253,
    "transitiveDepSetIds": [254],
    "directArtifactIds": [631, 632, 633]
  }, {
    "id": 242,
    "transitiveDepSetIds": [243, 250, 253]
  }, {
    "id": 255,
    "directArtifactIds": [629, 180]
  }, {
    "id": 260,
    "directArtifactIds": [641, 642]
  }, {
    "id": 261,
    "directArtifactIds": [641, 643]
  }, {
    "id": 262,
    "directArtifactIds": [641, 644]
  }, {
    "id": 264,
    "directArtifactIds": [645, 646]
  }, {
    "id": 263,
    "transitiveDepSetIds": [264],
    "directArtifactIds": [645, 646, 647]
  }, {
    "id": 259,
    "transitiveDepSetIds": [260, 261, 262, 263],
    "directArtifactIds": [110, 111, 15, 114, 648, 645, 642, 643, 644, 647, 649]
  }, {
    "id": 266,
    "directArtifactIds": [650, 651]
  }, {
    "id": 267,
    "directArtifactIds": [652, 653, 654, 655, 656, 657]
  }, {
    "id": 265,
    "transitiveDepSetIds": [266, 267],
    "directArtifactIds": [654, 658, 659, 660, 651, 657, 661]
  }, {
    "id": 268,
    "directArtifactIds": [659, 662]
  }, {
    "id": 258,
    "transitiveDepSetIds": [259, 261, 260, 265, 266, 267, 268, 263],
    "directArtifactIds": [101, 114, 653, 648, 649, 643, 642, 661, 651, 657, 662, 647, 663]
  }, {
    "id": 257,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [639]
  }, {
    "id": 256,
    "transitiveDepSetIds": [257],
    "directArtifactIds": [180]
  }, {
    "id": 269,
    "directArtifactIds": [665]
  }, {
    "id": 272,
    "directArtifactIds": [635, 640]
  }, {
    "id": 274,
    "transitiveDepSetIds": [216, 214],
    "directArtifactIds": [207]
  }, {
    "id": 273,
    "transitiveDepSetIds": [274],
    "directArtifactIds": [635]
  }, {
    "id": 276,
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235]
  }, {
    "id": 277,
    "directArtifactIds": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251]
  }, {
    "id": 278,
    "directArtifactIds": [252, 253, 254, 255, 256, 257, 258, 259]
  }, {
    "id": 279,
    "directArtifactIds": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 275,
    "transitiveDepSetIds": [276, 277, 278, 279]
  }, {
    "id": 271,
    "transitiveDepSetIds": [272, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 273, 275],
    "directArtifactIds": [207, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 486, 635]
  }, {
    "id": 270,
    "transitiveDepSetIds": [271],
    "directArtifactIds": [666]
  }, {
    "id": 281,
    "transitiveDepSetIds": [274],
    "directArtifactIds": [635, 667, 668]
  }, {
    "id": 280,
    "transitiveDepSetIds": [281],
    "directArtifactIds": [180]
  }, {
    "id": 282,
    "directArtifactIds": [667, 320, 321]
  }, {
    "id": 284,
    "directArtifactIds": [674, 675, 676, 677, 678, 679, 680, 681, 673]
  }, {
    "id": 283,
    "transitiveDepSetIds": [284, 5]
  }, {
    "id": 286,
    "directArtifactIds": [682, 683]
  }, {
    "id": 288,
    "directArtifactIds": [684, 685]
  }, {
    "id": 287,
    "transitiveDepSetIds": [288],
    "directArtifactIds": [686]
  }, {
    "id": 285,
    "transitiveDepSetIds": [286, 287]
  }, {
    "id": 290,
    "directArtifactIds": [682, 687]
  }, {
    "id": 289,
    "transitiveDepSetIds": [290, 287]
  }, {
    "id": 292,
    "directArtifactIds": [689, 690, 691, 692, 688]
  }, {
    "id": 291,
    "transitiveDepSetIds": [292, 5]
  }, {
    "id": 295,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 294,
    "transitiveDepSetIds": [244, 295],
    "directArtifactIds": [628, 693]
  }, {
    "id": 297,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [694, 630]
  }, {
    "id": 298,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [694, 630]
  }, {
    "id": 296,
    "transitiveDepSetIds": [297, 298]
  }, {
    "id": 293,
    "transitiveDepSetIds": [294, 296, 253]
  }, {
    "id": 299,
    "directArtifactIds": [693, 180]
  }, {
    "id": 301,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [699]
  }, {
    "id": 300,
    "transitiveDepSetIds": [301],
    "directArtifactIds": [180]
  }, {
    "id": 302,
    "directArtifactIds": [702]
  }, {
    "id": 305,
    "directArtifactIds": [695, 700]
  }, {
    "id": 307,
    "transitiveDepSetIds": [226, 214],
    "directArtifactIds": [207]
  }, {
    "id": 306,
    "transitiveDepSetIds": [307],
    "directArtifactIds": [695]
  }, {
    "id": 304,
    "transitiveDepSetIds": [305, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 306, 275],
    "directArtifactIds": [207, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 499, 695]
  }, {
    "id": 303,
    "transitiveDepSetIds": [304],
    "directArtifactIds": [703]
  }, {
    "id": 309,
    "transitiveDepSetIds": [307],
    "directArtifactIds": [695, 704, 668]
  }, {
    "id": 308,
    "transitiveDepSetIds": [309],
    "directArtifactIds": [180]
  }, {
    "id": 310,
    "directArtifactIds": [704, 320, 321]
  }, {
    "id": 313,
    "transitiveDepSetIds": [170, 19, 171, 26]
  }, {
    "id": 312,
    "transitiveDepSetIds": [313],
    "directArtifactIds": [709]
  }, {
    "id": 314,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 311,
    "transitiveDepSetIds": [312, 314]
  }, {
    "id": 315,
    "directArtifactIds": [710, 180]
  }, {
    "id": 318,
    "transitiveDepSetIds": [171, 26]
  }, {
    "id": 317,
    "transitiveDepSetIds": [318],
    "directArtifactIds": [711]
  }, {
    "id": 319,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 316,
    "transitiveDepSetIds": [317, 319]
  }, {
    "id": 320,
    "directArtifactIds": [710, 180]
  }, {
    "id": 321,
    "directArtifactIds": [709, 180]
  }, {
    "id": 322,
    "directArtifactIds": [717]
  }, {
    "id": 328,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [714, 49]
  }, {
    "id": 327,
    "transitiveDepSetIds": [328],
    "directArtifactIds": [207]
  }, {
    "id": 326,
    "transitiveDepSetIds": [327],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 325,
    "transitiveDepSetIds": [190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 326],
    "directArtifactIds": [491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91]
  }, {
    "id": 324,
    "transitiveDepSetIds": [325],
    "directArtifactIds": [716]
  }, {
    "id": 323,
    "transitiveDepSetIds": [324],
    "directArtifactIds": [718]
  }, {
    "id": 329,
    "directArtifactIds": [719, 320, 321]
  }, {
    "id": 331,
    "directArtifactIds": [723, 724, 725, 726, 727, 722]
  }, {
    "id": 330,
    "transitiveDepSetIds": [331, 5]
  }, {
    "id": 334,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 333,
    "transitiveDepSetIds": [244, 334],
    "directArtifactIds": [628, 728]
  }, {
    "id": 336,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [630]
  }, {
    "id": 337,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [630]
  }, {
    "id": 335,
    "transitiveDepSetIds": [336, 337]
  }, {
    "id": 332,
    "transitiveDepSetIds": [333, 335, 253]
  }, {
    "id": 338,
    "directArtifactIds": [728, 180]
  }, {
    "id": 340,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [733]
  }, {
    "id": 339,
    "transitiveDepSetIds": [340],
    "directArtifactIds": [180]
  }, {
    "id": 341,
    "directArtifactIds": [736]
  }, {
    "id": 344,
    "directArtifactIds": [729, 734]
  }, {
    "id": 346,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [207]
  }, {
    "id": 345,
    "transitiveDepSetIds": [346],
    "directArtifactIds": [729]
  }, {
    "id": 343,
    "transitiveDepSetIds": [344, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 345, 275],
    "directArtifactIds": [207, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 729]
  }, {
    "id": 342,
    "transitiveDepSetIds": [343],
    "directArtifactIds": [737]
  }, {
    "id": 348,
    "transitiveDepSetIds": [346],
    "directArtifactIds": [729, 738, 668]
  }, {
    "id": 347,
    "transitiveDepSetIds": [348],
    "directArtifactIds": [180]
  }, {
    "id": 349,
    "directArtifactIds": [738, 320, 321]
  }, {
    "id": 352,
    "transitiveDepSetIds": [234, 23, 21],
    "directArtifactIds": [44, 45]
  }, {
    "id": 351,
    "transitiveDepSetIds": [352],
    "directArtifactIds": [743]
  }, {
    "id": 353,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 350,
    "transitiveDepSetIds": [351, 353]
  }, {
    "id": 354,
    "directArtifactIds": [744, 180]
  }, {
    "id": 357,
    "transitiveDepSetIds": [23, 21],
    "directArtifactIds": [44]
  }, {
    "id": 356,
    "transitiveDepSetIds": [357],
    "directArtifactIds": [745]
  }, {
    "id": 358,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 355,
    "transitiveDepSetIds": [356, 358]
  }, {
    "id": 359,
    "directArtifactIds": [744, 180]
  }, {
    "id": 360,
    "directArtifactIds": [743, 180]
  }, {
    "id": 363,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 362,
    "transitiveDepSetIds": [244, 363],
    "directArtifactIds": [628, 748]
  }, {
    "id": 365,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [630]
  }, {
    "id": 366,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [630]
  }, {
    "id": 364,
    "transitiveDepSetIds": [365, 366]
  }, {
    "id": 361,
    "transitiveDepSetIds": [362, 364, 253]
  }, {
    "id": 367,
    "directArtifactIds": [748, 180]
  }, {
    "id": 369,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [753]
  }, {
    "id": 368,
    "transitiveDepSetIds": [369],
    "directArtifactIds": [180]
  }, {
    "id": 370,
    "directArtifactIds": [756]
  }, {
    "id": 373,
    "directArtifactIds": [749, 754]
  }, {
    "id": 375,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [207]
  }, {
    "id": 374,
    "transitiveDepSetIds": [375],
    "directArtifactIds": [749]
  }, {
    "id": 372,
    "transitiveDepSetIds": [373, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 374, 275],
    "directArtifactIds": [207, 758, 204, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 749]
  }, {
    "id": 371,
    "transitiveDepSetIds": [372],
    "directArtifactIds": [757]
  }, {
    "id": 377,
    "transitiveDepSetIds": [375],
    "directArtifactIds": [749, 759, 668]
  }, {
    "id": 376,
    "transitiveDepSetIds": [377],
    "directArtifactIds": [180]
  }, {
    "id": 378,
    "directArtifactIds": [759, 320, 321]
  }, {
    "id": 381,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 380,
    "transitiveDepSetIds": [244, 381],
    "directArtifactIds": [628, 764]
  }, {
    "id": 383,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [630]
  }, {
    "id": 384,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [630]
  }, {
    "id": 382,
    "transitiveDepSetIds": [383, 384]
  }, {
    "id": 379,
    "transitiveDepSetIds": [380, 382, 253]
  }, {
    "id": 385,
    "directArtifactIds": [764, 180]
  }, {
    "id": 387,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [769]
  }, {
    "id": 386,
    "transitiveDepSetIds": [387],
    "directArtifactIds": [180]
  }, {
    "id": 388,
    "directArtifactIds": [772]
  }, {
    "id": 391,
    "directArtifactIds": [765, 770]
  }, {
    "id": 393,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [207]
  }, {
    "id": 392,
    "transitiveDepSetIds": [393],
    "directArtifactIds": [765]
  }, {
    "id": 390,
    "transitiveDepSetIds": [391, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 392, 275],
    "directArtifactIds": [207, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 765]
  }, {
    "id": 389,
    "transitiveDepSetIds": [390],
    "directArtifactIds": [773]
  }, {
    "id": 395,
    "transitiveDepSetIds": [393],
    "directArtifactIds": [765, 774, 668]
  }, {
    "id": 394,
    "transitiveDepSetIds": [395],
    "directArtifactIds": [180]
  }, {
    "id": 396,
    "directArtifactIds": [774, 320, 321]
  }, {
    "id": 397,
    "directArtifactIds": [779]
  }, {
    "id": 399,
    "directArtifactIds": [781, 782, 783, 784, 785, 780]
  }, {
    "id": 398,
    "transitiveDepSetIds": [399, 5]
  }, {
    "id": 400,
    "directArtifactIds": [491]
  }, {
    "id": 402,
    "directArtifactIds": [787, 788, 789, 790, 791, 786]
  }, {
    "id": 401,
    "transitiveDepSetIds": [402, 5]
  }, {
    "id": 405,
    "transitiveDepSetIds": [19, 24, 25, 26],
    "directArtifactIds": [460, 46, 47]
  }, {
    "id": 404,
    "transitiveDepSetIds": [405],
    "directArtifactIds": [792]
  }, {
    "id": 406,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 403,
    "transitiveDepSetIds": [404, 406]
  }, {
    "id": 407,
    "directArtifactIds": [793, 180]
  }, {
    "id": 410,
    "transitiveDepSetIds": [24, 25, 26],
    "directArtifactIds": [460]
  }, {
    "id": 409,
    "transitiveDepSetIds": [410],
    "directArtifactIds": [794]
  }, {
    "id": 411,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 408,
    "transitiveDepSetIds": [409, 411]
  }, {
    "id": 412,
    "directArtifactIds": [793, 180]
  }, {
    "id": 413,
    "directArtifactIds": [792, 180]
  }, {
    "id": 414,
    "directArtifactIds": [800]
  }, {
    "id": 420,
    "transitiveDepSetIds": [220, 47, 48],
    "directArtifactIds": [797, 49]
  }, {
    "id": 419,
    "transitiveDepSetIds": [420],
    "directArtifactIds": [207]
  }, {
    "id": 418,
    "transitiveDepSetIds": [419],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 417,
    "transitiveDepSetIds": [418],
    "directArtifactIds": [488]
  }, {
    "id": 416,
    "transitiveDepSetIds": [417],
    "directArtifactIds": [799]
  }, {
    "id": 415,
    "transitiveDepSetIds": [416],
    "directArtifactIds": [801]
  }, {
    "id": 421,
    "directArtifactIds": [802, 320, 321]
  }, {
    "id": 425,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [805]
  }, {
    "id": 424,
    "transitiveDepSetIds": [19, 425, 24, 25, 26],
    "directArtifactIds": [694, 805, 46, 47]
  }, {
    "id": 423,
    "transitiveDepSetIds": [424],
    "directArtifactIds": [806]
  }, {
    "id": 426,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 422,
    "transitiveDepSetIds": [423, 426]
  }, {
    "id": 427,
    "directArtifactIds": [807, 180]
  }, {
    "id": 430,
    "transitiveDepSetIds": [425, 24, 25, 26],
    "directArtifactIds": [694]
  }, {
    "id": 429,
    "transitiveDepSetIds": [430],
    "directArtifactIds": [808]
  }, {
    "id": 431,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 428,
    "transitiveDepSetIds": [429, 431]
  }, {
    "id": 432,
    "directArtifactIds": [807, 180]
  }, {
    "id": 433,
    "directArtifactIds": [806, 180]
  }, {
    "id": 434,
    "directArtifactIds": [814]
  }, {
    "id": 441,
    "directArtifactIds": [816, 49]
  }, {
    "id": 440,
    "transitiveDepSetIds": [226, 441, 47, 48],
    "directArtifactIds": [811, 49]
  }, {
    "id": 439,
    "transitiveDepSetIds": [440],
    "directArtifactIds": [207]
  }, {
    "id": 438,
    "transitiveDepSetIds": [439],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 437,
    "transitiveDepSetIds": [438],
    "directArtifactIds": [499]
  }, {
    "id": 436,
    "transitiveDepSetIds": [437],
    "directArtifactIds": [813]
  }, {
    "id": 435,
    "transitiveDepSetIds": [436],
    "directArtifactIds": [815]
  }, {
    "id": 442,
    "directArtifactIds": [817, 320, 321]
  }, {
    "id": 443,
    "directArtifactIds": [820, 821]
  }, {
    "id": 446,
    "transitiveDepSetIds": [170, 19, 171, 26]
  }, {
    "id": 445,
    "transitiveDepSetIds": [446],
    "directArtifactIds": [822]
  }, {
    "id": 447,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 444,
    "transitiveDepSetIds": [445, 447]
  }, {
    "id": 448,
    "directArtifactIds": [823, 180]
  }, {
    "id": 451,
    "transitiveDepSetIds": [171, 26]
  }, {
    "id": 450,
    "transitiveDepSetIds": [451],
    "directArtifactIds": [824]
  }, {
    "id": 452,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 449,
    "transitiveDepSetIds": [450, 452]
  }, {
    "id": 453,
    "directArtifactIds": [823, 180]
  }, {
    "id": 454,
    "directArtifactIds": [822, 180]
  }, {
    "id": 455,
    "directArtifactIds": [830]
  }, {
    "id": 461,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [827, 49]
  }, {
    "id": 460,
    "transitiveDepSetIds": [461],
    "directArtifactIds": [207]
  }, {
    "id": 459,
    "transitiveDepSetIds": [460],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 458,
    "transitiveDepSetIds": [190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 459],
    "directArtifactIds": [491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91]
  }, {
    "id": 457,
    "transitiveDepSetIds": [458],
    "directArtifactIds": [829]
  }, {
    "id": 456,
    "transitiveDepSetIds": [457],
    "directArtifactIds": [831]
  }, {
    "id": 462,
    "directArtifactIds": [832, 320, 321]
  }, {
    "id": 465,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 464,
    "transitiveDepSetIds": [244, 465],
    "directArtifactIds": [628, 835]
  }, {
    "id": 467,
    "transitiveDepSetIds": [170],
    "directArtifactIds": [630]
  }, {
    "id": 468,
    "transitiveDepSetIds": [171],
    "directArtifactIds": [630]
  }, {
    "id": 466,
    "transitiveDepSetIds": [467, 468]
  }, {
    "id": 463,
    "transitiveDepSetIds": [464, 466, 253]
  }, {
    "id": 469,
    "directArtifactIds": [835, 180]
  }, {
    "id": 471,
    "transitiveDepSetIds": [258],
    "directArtifactIds": [840]
  }, {
    "id": 470,
    "transitiveDepSetIds": [471],
    "directArtifactIds": [180]
  }, {
    "id": 472,
    "directArtifactIds": [843]
  }, {
    "id": 475,
    "directArtifactIds": [836, 841]
  }, {
    "id": 477,
    "transitiveDepSetIds": [214],
    "directArtifactIds": [207]
  }, {
    "id": 476,
    "transitiveDepSetIds": [477],
    "directArtifactIds": [836]
  }, {
    "id": 474,
    "transitiveDepSetIds": [475, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 476, 275],
    "directArtifactIds": [207, 491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 836]
  }, {
    "id": 473,
    "transitiveDepSetIds": [474],
    "directArtifactIds": [844]
  }, {
    "id": 479,
    "transitiveDepSetIds": [477],
    "directArtifactIds": [836, 845, 668]
  }, {
    "id": 478,
    "transitiveDepSetIds": [479],
    "directArtifactIds": [180]
  }, {
    "id": 480,
    "directArtifactIds": [845, 320, 321]
  }, {
    "id": 481,
    "directArtifactIds": [850]
  }, {
    "id": 484,
    "transitiveDepSetIds": [170, 19, 171, 26],
    "directArtifactIds": [694]
  }, {
    "id": 483,
    "transitiveDepSetIds": [484],
    "directArtifactIds": [851]
  }, {
    "id": 485,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 482,
    "transitiveDepSetIds": [483, 485]
  }, {
    "id": 486,
    "directArtifactIds": [852, 180]
  }, {
    "id": 489,
    "transitiveDepSetIds": [171, 26],
    "directArtifactIds": [694]
  }, {
    "id": 488,
    "transitiveDepSetIds": [489],
    "directArtifactIds": [853]
  }, {
    "id": 490,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 487,
    "transitiveDepSetIds": [488, 490]
  }, {
    "id": 491,
    "directArtifactIds": [852, 180]
  }, {
    "id": 492,
    "directArtifactIds": [851, 180]
  }, {
    "id": 493,
    "directArtifactIds": [859]
  }, {
    "id": 499,
    "transitiveDepSetIds": [226, 214],
    "directArtifactIds": [856, 49]
  }, {
    "id": 498,
    "transitiveDepSetIds": [499],
    "directArtifactIds": [207]
  }, {
    "id": 497,
    "transitiveDepSetIds": [498],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 496,
    "transitiveDepSetIds": [190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 497],
    "directArtifactIds": [491, 35, 34, 480, 481, 48, 88, 95, 49, 50, 51, 91, 499]
  }, {
    "id": 495,
    "transitiveDepSetIds": [496],
    "directArtifactIds": [858]
  }, {
    "id": 494,
    "transitiveDepSetIds": [495],
    "directArtifactIds": [860]
  }, {
    "id": 500,
    "directArtifactIds": [861, 320, 321]
  }, {
    "id": 501,
    "directArtifactIds": [864, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626]
  }, {
    "id": 502,
    "directArtifactIds": [865, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 504,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 503,
    "transitiveDepSetIds": [244, 504],
    "directArtifactIds": [628, 866, 867, 868, 869, 870, 871, 872]
  }, {
    "id": 505,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 866, 867, 868, 869, 870, 871, 872, 876]
  }, {
    "id": 507,
    "directArtifactIds": [866, 867, 868, 869, 870, 871, 872]
  }, {
    "id": 506,
    "transitiveDepSetIds": [507],
    "directArtifactIds": [180]
  }, {
    "id": 508,
    "directArtifactIds": [880]
  }, {
    "id": 509,
    "directArtifactIds": [881]
  }, {
    "id": 511,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 510,
    "transitiveDepSetIds": [244, 511],
    "directArtifactIds": [628]
  }, {
    "id": 512,
    "directArtifactIds": [180]
  }, {
    "id": 513,
    "directArtifactIds": [885, 180]
  }, {
    "id": 514,
    "directArtifactIds": [888]
  }, {
    "id": 517,
    "directArtifactIds": [882, 886]
  }, {
    "id": 518,
    "transitiveDepSetIds": [276, 277, 278, 279]
  }, {
    "id": 516,
    "transitiveDepSetIds": [517, 518],
    "directArtifactIds": [890]
  }, {
    "id": 515,
    "transitiveDepSetIds": [516],
    "directArtifactIds": [889]
  }, {
    "id": 520,
    "directArtifactIds": [890, 891, 892]
  }, {
    "id": 519,
    "transitiveDepSetIds": [520],
    "directArtifactIds": [180]
  }, {
    "id": 521,
    "directArtifactIds": [894]
  }, {
    "id": 522,
    "directArtifactIds": [486, 895]
  }, {
    "id": 525,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 530,
    "directArtifactIds": [193, 194, 195, 196, 197, 198, 199]
  }, {
    "id": 529,
    "transitiveDepSetIds": [530],
    "directArtifactIds": [897]
  }, {
    "id": 528,
    "transitiveDepSetIds": [529, 530],
    "directArtifactIds": [898, 899]
  }, {
    "id": 527,
    "transitiveDepSetIds": [528],
    "directArtifactIds": [758]
  }, {
    "id": 526,
    "transitiveDepSetIds": [527],
    "directArtifactIds": [758]
  }, {
    "id": 524,
    "transitiveDepSetIds": [525, 526],
    "directArtifactIds": [900, 901, 902, 903]
  }, {
    "id": 531,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 523,
    "transitiveDepSetIds": [524, 531]
  }, {
    "id": 533,
    "transitiveDepSetIds": [525, 526],
    "directArtifactIds": [900, 901, 902, 903, 904]
  }, {
    "id": 534,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 532,
    "transitiveDepSetIds": [533, 534]
  }, {
    "id": 536,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [909, 910]
  }, {
    "id": 535,
    "transitiveDepSetIds": [536],
    "directArtifactIds": [911]
  }, {
    "id": 539,
    "transitiveDepSetIds": [527],
    "directArtifactIds": [758]
  }, {
    "id": 540,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 538,
    "transitiveDepSetIds": [539, 244, 540],
    "directArtifactIds": [628, 904, 902, 903]
  }, {
    "id": 541,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61, 905]
  }, {
    "id": 537,
    "transitiveDepSetIds": [538, 541]
  }, {
    "id": 543,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 758, 904, 902, 903, 876]
  }, {
    "id": 542,
    "transitiveDepSetIds": [543, 541]
  }, {
    "id": 546,
    "directArtifactIds": [902, 903]
  }, {
    "id": 547,
    "directArtifactIds": [904, 915]
  }, {
    "id": 545,
    "transitiveDepSetIds": [546, 547]
  }, {
    "id": 544,
    "transitiveDepSetIds": [545],
    "directArtifactIds": [180]
  }, {
    "id": 549,
    "directArtifactIds": [907, 916]
  }, {
    "id": 548,
    "transitiveDepSetIds": [549],
    "directArtifactIds": [180]
  }, {
    "id": 552,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 551,
    "transitiveDepSetIds": [552],
    "directArtifactIds": [908, 913]
  }, {
    "id": 553,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 550,
    "transitiveDepSetIds": [551, 553]
  }, {
    "id": 555,
    "directArtifactIds": [906, 907, 910]
  }, {
    "id": 554,
    "transitiveDepSetIds": [555],
    "directArtifactIds": [180]
  }, {
    "id": 558,
    "directArtifactIds": [900, 901, 902, 903]
  }, {
    "id": 557,
    "transitiveDepSetIds": [558],
    "directArtifactIds": [904]
  }, {
    "id": 556,
    "transitiveDepSetIds": [557],
    "directArtifactIds": [180]
  }, {
    "id": 561,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 560,
    "transitiveDepSetIds": [561],
    "directArtifactIds": [921]
  }, {
    "id": 562,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 559,
    "transitiveDepSetIds": [560, 562]
  }, {
    "id": 563,
    "directArtifactIds": [922, 180]
  }, {
    "id": 565,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [923]
  }, {
    "id": 566,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 564,
    "transitiveDepSetIds": [565, 566]
  }, {
    "id": 567,
    "directArtifactIds": [922, 180]
  }, {
    "id": 568,
    "directArtifactIds": [921, 180]
  }, {
    "id": 569,
    "directArtifactIds": [927]
  }, {
    "id": 573,
    "directArtifactIds": [384, 49]
  }, {
    "id": 572,
    "transitiveDepSetIds": [573],
    "directArtifactIds": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318]
  }, {
    "id": 571,
    "transitiveDepSetIds": [572],
    "directArtifactIds": [926]
  }, {
    "id": 570,
    "transitiveDepSetIds": [571],
    "directArtifactIds": [928]
  }, {
    "id": 576,
    "directArtifactIds": [930, 931]
  }, {
    "id": 575,
    "transitiveDepSetIds": [576],
    "directArtifactIds": [932]
  }, {
    "id": 574,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [200]
  }, {
    "id": 579,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [61]
  }, {
    "id": 578,
    "transitiveDepSetIds": [579],
    "directArtifactIds": [933, 934]
  }, {
    "id": 580,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 577,
    "transitiveDepSetIds": [578, 580]
  }, {
    "id": 583,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 582,
    "transitiveDepSetIds": [244, 583],
    "directArtifactIds": [628, 934]
  }, {
    "id": 584,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61, 935]
  }, {
    "id": 581,
    "transitiveDepSetIds": [582, 584]
  }, {
    "id": 585,
    "transitiveDepSetIds": [244, 584],
    "directArtifactIds": [628, 934, 876]
  }, {
    "id": 586,
    "directArtifactIds": [934, 180]
  }, {
    "id": 588,
    "directArtifactIds": [935, 941]
  }, {
    "id": 587,
    "transitiveDepSetIds": [588],
    "directArtifactIds": [180]
  }, {
    "id": 591,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61]
  }, {
    "id": 590,
    "transitiveDepSetIds": [591],
    "directArtifactIds": [936, 938]
  }, {
    "id": 592,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 589,
    "transitiveDepSetIds": [590, 592]
  }, {
    "id": 594,
    "directArtifactIds": [935, 937]
  }, {
    "id": 593,
    "transitiveDepSetIds": [594],
    "directArtifactIds": [180]
  }, {
    "id": 596,
    "directArtifactIds": [933, 934]
  }, {
    "id": 595,
    "transitiveDepSetIds": [596],
    "directArtifactIds": [180]
  }, {
    "id": 598,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [946, 492]
  }, {
    "id": 597,
    "transitiveDepSetIds": [598],
    "directArtifactIds": [911]
  }, {
    "id": 603,
    "directArtifactIds": [948, 949, 950]
  }, {
    "id": 605,
    "directArtifactIds": [504, 502]
  }, {
    "id": 606,
    "transitiveDepSetIds": [605, 530],
    "directArtifactIds": [951, 199, 502, 205]
  }, {
    "id": 608,
    "transitiveDepSetIds": [603],
    "directArtifactIds": [952]
  }, {
    "id": 607,
    "transitiveDepSetIds": [603, 608],
    "directArtifactIds": [953]
  }, {
    "id": 609,
    "transitiveDepSetIds": [603],
    "directArtifactIds": [954]
  }, {
    "id": 604,
    "transitiveDepSetIds": [603, 605, 606, 607, 609, 530],
    "directArtifactIds": [955, 196, 956, 199, 502]
  }, {
    "id": 610,
    "transitiveDepSetIds": [603],
    "directArtifactIds": [957]
  }, {
    "id": 611,
    "transitiveDepSetIds": [530],
    "directArtifactIds": [958, 959]
  }, {
    "id": 602,
    "transitiveDepSetIds": [603, 604, 605, 606, 607, 609, 610, 530, 611],
    "directArtifactIds": [960, 961, 196, 956, 199, 502, 205]
  }, {
    "id": 601,
    "transitiveDepSetIds": [602],
    "directArtifactIds": [758]
  }, {
    "id": 612,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 600,
    "transitiveDepSetIds": [601, 244, 612],
    "directArtifactIds": [628, 962, 963, 964, 965, 966, 967, 968]
  }, {
    "id": 615,
    "directArtifactIds": [465, 466]
  }, {
    "id": 614,
    "transitiveDepSetIds": [615],
    "directArtifactIds": [458, 459, 460, 461, 462, 46, 47, 45, 55, 467, 61, 469]
  }, {
    "id": 616,
    "transitiveDepSetIds": [172, 174, 173, 24, 25, 23, 176],
    "directArtifactIds": [459, 460, 55, 467, 61, 469]
  }, {
    "id": 613,
    "transitiveDepSetIds": [614, 616]
  }, {
    "id": 617,
    "directArtifactIds": [631, 632, 633]
  }, {
    "id": 599,
    "transitiveDepSetIds": [600, 613, 617]
  }, {
    "id": 620,
    "transitiveDepSetIds": [602],
    "directArtifactIds": [758]
  }, {
    "id": 619,
    "transitiveDepSetIds": [244, 620],
    "directArtifactIds": [628, 962, 963, 964, 965, 966, 967, 968, 876]
  }, {
    "id": 618,
    "transitiveDepSetIds": [619, 613, 617]
  }, {
    "id": 623,
    "directArtifactIds": [962, 963, 964, 965, 966, 967, 968]
  }, {
    "id": 622,
    "transitiveDepSetIds": [623],
    "directArtifactIds": [971]
  }, {
    "id": 621,
    "transitiveDepSetIds": [622],
    "directArtifactIds": [180]
  }, {
    "id": 624,
    "directArtifactIds": [491, 895]
  }, {
    "id": 625,
    "directArtifactIds": [973]
  }, {
    "id": 628,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [61]
  }, {
    "id": 627,
    "transitiveDepSetIds": [628],
    "directArtifactIds": [758, 901, 902]
  }, {
    "id": 629,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 626,
    "transitiveDepSetIds": [627, 629]
  }, {
    "id": 631,
    "transitiveDepSetIds": [628],
    "directArtifactIds": [758, 901, 902, 974]
  }, {
    "id": 632,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 630,
    "transitiveDepSetIds": [631, 632]
  }, {
    "id": 634,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [979, 980]
  }, {
    "id": 633,
    "transitiveDepSetIds": [634],
    "directArtifactIds": [911]
  }, {
    "id": 637,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 636,
    "transitiveDepSetIds": [244, 637],
    "directArtifactIds": [758, 628, 974, 902]
  }, {
    "id": 638,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61, 975]
  }, {
    "id": 635,
    "transitiveDepSetIds": [636, 638]
  }, {
    "id": 640,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 758, 974, 902, 876]
  }, {
    "id": 639,
    "transitiveDepSetIds": [640, 638]
  }, {
    "id": 643,
    "directArtifactIds": [974, 984]
  }, {
    "id": 642,
    "transitiveDepSetIds": [643],
    "directArtifactIds": [902]
  }, {
    "id": 641,
    "transitiveDepSetIds": [642],
    "directArtifactIds": [180]
  }, {
    "id": 645,
    "directArtifactIds": [977, 985]
  }, {
    "id": 644,
    "transitiveDepSetIds": [645],
    "directArtifactIds": [180]
  }, {
    "id": 648,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61]
  }, {
    "id": 647,
    "transitiveDepSetIds": [648],
    "directArtifactIds": [978, 982]
  }, {
    "id": 649,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 646,
    "transitiveDepSetIds": [647, 649]
  }, {
    "id": 651,
    "directArtifactIds": [976, 977, 980]
  }, {
    "id": 650,
    "transitiveDepSetIds": [651],
    "directArtifactIds": [180]
  }, {
    "id": 654,
    "directArtifactIds": [901, 902]
  }, {
    "id": 653,
    "transitiveDepSetIds": [654],
    "directArtifactIds": [974]
  }, {
    "id": 652,
    "transitiveDepSetIds": [653],
    "directArtifactIds": [180]
  }, {
    "id": 655,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [202]
  }, {
    "id": 657,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 656,
    "transitiveDepSetIds": [244, 657],
    "directArtifactIds": [628]
  }, {
    "id": 658,
    "directArtifactIds": [993, 180]
  }, {
    "id": 659,
    "directArtifactIds": [996]
  }, {
    "id": 662,
    "directArtifactIds": [990, 994]
  }, {
    "id": 661,
    "transitiveDepSetIds": [662, 190, 191, 193, 202, 194, 518],
    "directArtifactIds": [34, 35, 491, 480, 481, 88, 91, 95, 998]
  }, {
    "id": 660,
    "transitiveDepSetIds": [661],
    "directArtifactIds": [997]
  }, {
    "id": 664,
    "directArtifactIds": [998, 999, 892]
  }, {
    "id": 663,
    "transitiveDepSetIds": [664],
    "directArtifactIds": [180]
  }, {
    "id": 665,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [193]
  }, {
    "id": 667,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 666,
    "transitiveDepSetIds": [244, 667],
    "directArtifactIds": [628]
  }, {
    "id": 671,
    "directArtifactIds": [1006, 1007]
  }, {
    "id": 673,
    "directArtifactIds": [1008, 1009, 1010]
  }, {
    "id": 674,
    "directArtifactIds": [1008, 1009, 1011]
  }, {
    "id": 676,
    "directArtifactIds": [1012, 645, 1013]
  }, {
    "id": 675,
    "transitiveDepSetIds": [676],
    "directArtifactIds": [1014, 1009, 1015, 1016, 1013, 1017]
  }, {
    "id": 672,
    "transitiveDepSetIds": [673, 674, 675],
    "directArtifactIds": [1010, 1011, 1017, 1018]
  }, {
    "id": 679,
    "directArtifactIds": [1019, 1020]
  }, {
    "id": 678,
    "transitiveDepSetIds": [679],
    "directArtifactIds": [1020, 1021]
  }, {
    "id": 677,
    "transitiveDepSetIds": [678, 679],
    "directArtifactIds": [1019, 1021, 1020, 1022]
  }, {
    "id": 670,
    "transitiveDepSetIds": [671, 672, 677],
    "directArtifactIds": [1019, 1007, 1018, 1022, 1023]
  }, {
    "id": 669,
    "transitiveDepSetIds": [670],
    "directArtifactIds": [1004]
  }, {
    "id": 668,
    "transitiveDepSetIds": [669],
    "directArtifactIds": [180]
  }, {
    "id": 680,
    "directArtifactIds": [1025]
  }, {
    "id": 683,
    "directArtifactIds": [1001, 1005]
  }, {
    "id": 685,
    "directArtifactIds": [1027, 1028]
  }, {
    "id": 687,
    "directArtifactIds": [1029, 1030, 1031]
  }, {
    "id": 688,
    "directArtifactIds": [1032, 1030, 1031]
  }, {
    "id": 690,
    "directArtifactIds": [1033, 1034, 502]
  }, {
    "id": 689,
    "transitiveDepSetIds": [690],
    "directArtifactIds": [1035, 1036, 1031, 1037, 1038]
  }, {
    "id": 686,
    "transitiveDepSetIds": [687, 688, 689],
    "directArtifactIds": [1039]
  }, {
    "id": 693,
    "directArtifactIds": [1040, 1041]
  }, {
    "id": 692,
    "transitiveDepSetIds": [693],
    "directArtifactIds": [1042]
  }, {
    "id": 691,
    "transitiveDepSetIds": [692, 693],
    "directArtifactIds": [1043, 1041]
  }, {
    "id": 684,
    "transitiveDepSetIds": [685, 686, 691],
    "directArtifactIds": [1044, 1041]
  }, {
    "id": 682,
    "transitiveDepSetIds": [683, 684, 518]
  }, {
    "id": 681,
    "transitiveDepSetIds": [682],
    "directArtifactIds": [1026]
  }, {
    "id": 695,
    "transitiveDepSetIds": [684],
    "directArtifactIds": [1045, 892]
  }, {
    "id": 694,
    "transitiveDepSetIds": [695],
    "directArtifactIds": [180]
  }, {
    "id": 697,
    "directArtifactIds": [1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1047]
  }, {
    "id": 696,
    "transitiveDepSetIds": [697, 5]
  }, {
    "id": 700,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 699,
    "transitiveDepSetIds": [244, 700],
    "directArtifactIds": [628, 1057]
  }, {
    "id": 702,
    "directArtifactIds": [1058, 47]
  }, {
    "id": 703,
    "transitiveDepSetIds": [25, 21],
    "directArtifactIds": [1058]
  }, {
    "id": 701,
    "transitiveDepSetIds": [702, 703]
  }, {
    "id": 698,
    "transitiveDepSetIds": [699, 701]
  }, {
    "id": 704,
    "directArtifactIds": [1057, 180]
  }, {
    "id": 707,
    "transitiveDepSetIds": [266],
    "directArtifactIds": [651, 1063]
  }, {
    "id": 706,
    "transitiveDepSetIds": [707],
    "directArtifactIds": [1062]
  }, {
    "id": 705,
    "transitiveDepSetIds": [706],
    "directArtifactIds": [180]
  }, {
    "id": 708,
    "directArtifactIds": [1065]
  }, {
    "id": 712,
    "transitiveDepSetIds": [48],
    "directArtifactIds": [1067, 49]
  }, {
    "id": 711,
    "transitiveDepSetIds": [712],
    "directArtifactIds": [378]
  }, {
    "id": 710,
    "transitiveDepSetIds": [99, 711, 518],
    "directArtifactIds": [378]
  }, {
    "id": 709,
    "transitiveDepSetIds": [710],
    "directArtifactIds": [1066]
  }, {
    "id": 714,
    "transitiveDepSetIds": [712],
    "directArtifactIds": [378, 1068, 892]
  }, {
    "id": 713,
    "transitiveDepSetIds": [714],
    "directArtifactIds": [180]
  }, {
    "id": 717,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 718,
    "transitiveDepSetIds": [528],
    "directArtifactIds": [204]
  }, {
    "id": 716,
    "transitiveDepSetIds": [717, 718],
    "directArtifactIds": [933, 900, 934, 903]
  }, {
    "id": 719,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 715,
    "transitiveDepSetIds": [716, 719]
  }, {
    "id": 721,
    "transitiveDepSetIds": [717, 718],
    "directArtifactIds": [933, 900, 934, 903, 1071]
  }, {
    "id": 722,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 720,
    "transitiveDepSetIds": [721, 722]
  }, {
    "id": 724,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1076, 1077]
  }, {
    "id": 723,
    "transitiveDepSetIds": [724],
    "directArtifactIds": [911]
  }, {
    "id": 727,
    "transitiveDepSetIds": [528],
    "directArtifactIds": [204]
  }, {
    "id": 728,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 726,
    "transitiveDepSetIds": [727, 244, 728],
    "directArtifactIds": [628, 1071, 934, 903]
  }, {
    "id": 729,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61, 1072]
  }, {
    "id": 725,
    "transitiveDepSetIds": [726, 729]
  }, {
    "id": 730,
    "transitiveDepSetIds": [244, 729],
    "directArtifactIds": [628, 1071, 934, 903, 876]
  }, {
    "id": 733,
    "directArtifactIds": [934, 903]
  }, {
    "id": 734,
    "directArtifactIds": [1071, 1081]
  }, {
    "id": 732,
    "transitiveDepSetIds": [733, 734]
  }, {
    "id": 731,
    "transitiveDepSetIds": [732],
    "directArtifactIds": [180]
  }, {
    "id": 736,
    "directArtifactIds": [1074, 1082]
  }, {
    "id": 735,
    "transitiveDepSetIds": [736],
    "directArtifactIds": [180]
  }, {
    "id": 739,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 738,
    "transitiveDepSetIds": [739],
    "directArtifactIds": [1075, 1079]
  }, {
    "id": 740,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 737,
    "transitiveDepSetIds": [738, 740]
  }, {
    "id": 742,
    "directArtifactIds": [1073, 1074, 1077]
  }, {
    "id": 741,
    "transitiveDepSetIds": [742],
    "directArtifactIds": [180]
  }, {
    "id": 745,
    "directArtifactIds": [933, 900, 934, 903]
  }, {
    "id": 744,
    "transitiveDepSetIds": [745],
    "directArtifactIds": [1071]
  }, {
    "id": 743,
    "transitiveDepSetIds": [744],
    "directArtifactIds": [180]
  }, {
    "id": 748,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 747,
    "transitiveDepSetIds": [244, 748],
    "directArtifactIds": [628, 1057]
  }, {
    "id": 750,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1087]
  }, {
    "id": 749,
    "transitiveDepSetIds": [750],
    "directArtifactIds": [1087]
  }, {
    "id": 746,
    "transitiveDepSetIds": [747, 749]
  }, {
    "id": 751,
    "directArtifactIds": [1057, 180]
  }, {
    "id": 754,
    "transitiveDepSetIds": [266],
    "directArtifactIds": [651, 1092]
  }, {
    "id": 753,
    "transitiveDepSetIds": [754],
    "directArtifactIds": [1091]
  }, {
    "id": 752,
    "transitiveDepSetIds": [753],
    "directArtifactIds": [180]
  }, {
    "id": 755,
    "directArtifactIds": [1094]
  }, {
    "id": 759,
    "transitiveDepSetIds": [48],
    "directArtifactIds": [1096, 49]
  }, {
    "id": 758,
    "transitiveDepSetIds": [759],
    "directArtifactIds": [380]
  }, {
    "id": 757,
    "transitiveDepSetIds": [100, 758, 518],
    "directArtifactIds": [380]
  }, {
    "id": 756,
    "transitiveDepSetIds": [757],
    "directArtifactIds": [1095]
  }, {
    "id": 761,
    "transitiveDepSetIds": [759],
    "directArtifactIds": [380, 1097, 892]
  }, {
    "id": 760,
    "transitiveDepSetIds": [761],
    "directArtifactIds": [180]
  }, {
    "id": 762,
    "directArtifactIds": [1100]
  }, {
    "id": 763,
    "directArtifactIds": [499, 895]
  }, {
    "id": 766,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 765,
    "transitiveDepSetIds": [244, 766],
    "directArtifactIds": [628, 1101]
  }, {
    "id": 767,
    "transitiveDepSetIds": [702, 703]
  }, {
    "id": 764,
    "transitiveDepSetIds": [765, 767]
  }, {
    "id": 768,
    "directArtifactIds": [1101, 180]
  }, {
    "id": 770,
    "transitiveDepSetIds": [707],
    "directArtifactIds": [1105]
  }, {
    "id": 769,
    "transitiveDepSetIds": [770],
    "directArtifactIds": [180]
  }, {
    "id": 771,
    "directArtifactIds": [1107]
  }, {
    "id": 774,
    "transitiveDepSetIds": [712],
    "directArtifactIds": [376]
  }, {
    "id": 773,
    "transitiveDepSetIds": [98, 774, 518],
    "directArtifactIds": [376]
  }, {
    "id": 772,
    "transitiveDepSetIds": [773],
    "directArtifactIds": [1108]
  }, {
    "id": 776,
    "transitiveDepSetIds": [712],
    "directArtifactIds": [376, 1109, 892]
  }, {
    "id": 775,
    "transitiveDepSetIds": [776],
    "directArtifactIds": [180]
  }, {
    "id": 779,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 778,
    "transitiveDepSetIds": [779],
    "directArtifactIds": [921]
  }, {
    "id": 780,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 777,
    "transitiveDepSetIds": [778, 780]
  }, {
    "id": 781,
    "directArtifactIds": [1112, 180]
  }, {
    "id": 783,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1113]
  }, {
    "id": 784,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 782,
    "transitiveDepSetIds": [783, 784]
  }, {
    "id": 785,
    "directArtifactIds": [1112, 180]
  }, {
    "id": 786,
    "directArtifactIds": [921, 180]
  }, {
    "id": 789,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [896]
  }, {
    "id": 788,
    "transitiveDepSetIds": [789, 528],
    "directArtifactIds": [900, 903]
  }, {
    "id": 790,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 787,
    "transitiveDepSetIds": [788, 790]
  }, {
    "id": 792,
    "transitiveDepSetIds": [789, 528],
    "directArtifactIds": [900, 903, 1115]
  }, {
    "id": 793,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 791,
    "transitiveDepSetIds": [792, 793]
  }, {
    "id": 795,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1120, 1121]
  }, {
    "id": 794,
    "transitiveDepSetIds": [795],
    "directArtifactIds": [911]
  }, {
    "id": 798,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 797,
    "transitiveDepSetIds": [528, 244, 798],
    "directArtifactIds": [628, 1115, 903]
  }, {
    "id": 799,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 1116]
  }, {
    "id": 796,
    "transitiveDepSetIds": [797, 799]
  }, {
    "id": 800,
    "transitiveDepSetIds": [244, 799],
    "directArtifactIds": [628, 1115, 903, 876]
  }, {
    "id": 803,
    "directArtifactIds": [1115, 1125]
  }, {
    "id": 802,
    "transitiveDepSetIds": [803],
    "directArtifactIds": [903]
  }, {
    "id": 801,
    "transitiveDepSetIds": [802],
    "directArtifactIds": [180]
  }, {
    "id": 805,
    "directArtifactIds": [1118, 1126]
  }, {
    "id": 804,
    "transitiveDepSetIds": [805],
    "directArtifactIds": [180]
  }, {
    "id": 808,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896]
  }, {
    "id": 807,
    "transitiveDepSetIds": [808],
    "directArtifactIds": [1119, 1123]
  }, {
    "id": 809,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 806,
    "transitiveDepSetIds": [807, 809]
  }, {
    "id": 811,
    "directArtifactIds": [1117, 1118, 1121]
  }, {
    "id": 810,
    "transitiveDepSetIds": [811],
    "directArtifactIds": [180]
  }, {
    "id": 814,
    "directArtifactIds": [900, 903]
  }, {
    "id": 813,
    "transitiveDepSetIds": [814],
    "directArtifactIds": [1115]
  }, {
    "id": 812,
    "transitiveDepSetIds": [813],
    "directArtifactIds": [180]
  }, {
    "id": 817,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 818,
    "transitiveDepSetIds": [528],
    "directArtifactIds": [758]
  }, {
    "id": 816,
    "transitiveDepSetIds": [817, 818],
    "directArtifactIds": [900, 901, 902, 903]
  }, {
    "id": 819,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 815,
    "transitiveDepSetIds": [816, 819]
  }, {
    "id": 821,
    "transitiveDepSetIds": [817, 818],
    "directArtifactIds": [900, 901, 902, 903, 1131]
  }, {
    "id": 822,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 820,
    "transitiveDepSetIds": [821, 822]
  }, {
    "id": 824,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1136, 1137]
  }, {
    "id": 823,
    "transitiveDepSetIds": [824],
    "directArtifactIds": [911]
  }, {
    "id": 827,
    "transitiveDepSetIds": [528],
    "directArtifactIds": [758]
  }, {
    "id": 828,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 826,
    "transitiveDepSetIds": [827, 244, 828],
    "directArtifactIds": [628, 1131, 902, 903]
  }, {
    "id": 829,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61, 1132]
  }, {
    "id": 825,
    "transitiveDepSetIds": [826, 829]
  }, {
    "id": 831,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 758, 1131, 902, 903, 876]
  }, {
    "id": 830,
    "transitiveDepSetIds": [831, 829]
  }, {
    "id": 834,
    "directArtifactIds": [902, 903]
  }, {
    "id": 835,
    "directArtifactIds": [1131, 1141]
  }, {
    "id": 833,
    "transitiveDepSetIds": [834, 835]
  }, {
    "id": 832,
    "transitiveDepSetIds": [833],
    "directArtifactIds": [180]
  }, {
    "id": 837,
    "directArtifactIds": [1134, 1142]
  }, {
    "id": 836,
    "transitiveDepSetIds": [837],
    "directArtifactIds": [180]
  }, {
    "id": 840,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 61]
  }, {
    "id": 839,
    "transitiveDepSetIds": [840],
    "directArtifactIds": [1135, 1139]
  }, {
    "id": 841,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 838,
    "transitiveDepSetIds": [839, 841]
  }, {
    "id": 843,
    "directArtifactIds": [1133, 1134, 1137]
  }, {
    "id": 842,
    "transitiveDepSetIds": [843],
    "directArtifactIds": [180]
  }, {
    "id": 846,
    "directArtifactIds": [900, 901, 902, 903]
  }, {
    "id": 845,
    "transitiveDepSetIds": [846],
    "directArtifactIds": [1131]
  }, {
    "id": 844,
    "transitiveDepSetIds": [845],
    "directArtifactIds": [180]
  }, {
    "id": 849,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [896]
  }, {
    "id": 848,
    "transitiveDepSetIds": [849, 528],
    "directArtifactIds": [900]
  }, {
    "id": 850,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 847,
    "transitiveDepSetIds": [848, 850]
  }, {
    "id": 852,
    "transitiveDepSetIds": [849, 528],
    "directArtifactIds": [900, 1146]
  }, {
    "id": 853,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 851,
    "transitiveDepSetIds": [852, 853]
  }, {
    "id": 855,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1151, 1152]
  }, {
    "id": 854,
    "transitiveDepSetIds": [855],
    "directArtifactIds": [911]
  }, {
    "id": 858,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 857,
    "transitiveDepSetIds": [528, 244, 858],
    "directArtifactIds": [628, 1146]
  }, {
    "id": 859,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896, 1147]
  }, {
    "id": 856,
    "transitiveDepSetIds": [857, 859]
  }, {
    "id": 860,
    "transitiveDepSetIds": [244, 859],
    "directArtifactIds": [628, 1146, 876]
  }, {
    "id": 862,
    "directArtifactIds": [1146, 1156]
  }, {
    "id": 861,
    "transitiveDepSetIds": [862],
    "directArtifactIds": [180]
  }, {
    "id": 864,
    "directArtifactIds": [1149, 1157]
  }, {
    "id": 863,
    "transitiveDepSetIds": [864],
    "directArtifactIds": [180]
  }, {
    "id": 867,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [896]
  }, {
    "id": 866,
    "transitiveDepSetIds": [867],
    "directArtifactIds": [1150, 1154]
  }, {
    "id": 868,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 865,
    "transitiveDepSetIds": [866, 868]
  }, {
    "id": 870,
    "directArtifactIds": [1148, 1149, 1152]
  }, {
    "id": 869,
    "transitiveDepSetIds": [870],
    "directArtifactIds": [180]
  }, {
    "id": 872,
    "directArtifactIds": [900, 1146]
  }, {
    "id": 871,
    "transitiveDepSetIds": [872],
    "directArtifactIds": [180]
  }, {
    "id": 873,
    "directArtifactIds": [488, 895]
  }, {
    "id": 876,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 875,
    "transitiveDepSetIds": [876],
    "directArtifactIds": [921]
  }, {
    "id": 877,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 874,
    "transitiveDepSetIds": [875, 877]
  }, {
    "id": 878,
    "directArtifactIds": [1162, 180]
  }, {
    "id": 880,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1163]
  }, {
    "id": 881,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 879,
    "transitiveDepSetIds": [880, 881]
  }, {
    "id": 882,
    "directArtifactIds": [1162, 180]
  }, {
    "id": 883,
    "directArtifactIds": [921, 180]
  }, {
    "id": 884,
    "directArtifactIds": [1166]
  }, {
    "id": 887,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 886,
    "transitiveDepSetIds": [887],
    "directArtifactIds": [1167]
  }, {
    "id": 888,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 885,
    "transitiveDepSetIds": [886, 888]
  }, {
    "id": 889,
    "directArtifactIds": [1168, 180]
  }, {
    "id": 891,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1169]
  }, {
    "id": 892,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 890,
    "transitiveDepSetIds": [891, 892]
  }, {
    "id": 893,
    "directArtifactIds": [1168, 180]
  }, {
    "id": 894,
    "directArtifactIds": [1167, 180]
  }, {
    "id": 895,
    "directArtifactIds": [1172]
  }, {
    "id": 896,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [496]
  }, {
    "id": 898,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 897,
    "transitiveDepSetIds": [244, 898],
    "directArtifactIds": [628, 1174, 1175]
  }, {
    "id": 899,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 1174, 1175, 876]
  }, {
    "id": 901,
    "directArtifactIds": [1174, 1175]
  }, {
    "id": 900,
    "transitiveDepSetIds": [901],
    "directArtifactIds": [180]
  }, {
    "id": 902,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [195]
  }, {
    "id": 904,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 903,
    "transitiveDepSetIds": [244, 904],
    "directArtifactIds": [628]
  }, {
    "id": 906,
    "directArtifactIds": [1187, 1185]
  }, {
    "id": 905,
    "transitiveDepSetIds": [906],
    "directArtifactIds": [180]
  }, {
    "id": 907,
    "directArtifactIds": [1189]
  }, {
    "id": 910,
    "directArtifactIds": [1182, 1186]
  }, {
    "id": 911,
    "directArtifactIds": [501, 1187]
  }, {
    "id": 909,
    "transitiveDepSetIds": [910, 911, 518],
    "directArtifactIds": [501, 1187]
  }, {
    "id": 908,
    "transitiveDepSetIds": [909],
    "directArtifactIds": [1190]
  }, {
    "id": 913,
    "transitiveDepSetIds": [911],
    "directArtifactIds": [1191, 892]
  }, {
    "id": 912,
    "transitiveDepSetIds": [913],
    "directArtifactIds": [180]
  }, {
    "id": 914,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [198]
  }, {
    "id": 917,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 916,
    "transitiveDepSetIds": [917],
    "directArtifactIds": [1193]
  }, {
    "id": 918,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 915,
    "transitiveDepSetIds": [916, 918]
  }, {
    "id": 919,
    "directArtifactIds": [1194, 180]
  }, {
    "id": 921,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1195]
  }, {
    "id": 922,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 920,
    "transitiveDepSetIds": [921, 922]
  }, {
    "id": 924,
    "directArtifactIds": [1199, 1200, 1198]
  }, {
    "id": 923,
    "transitiveDepSetIds": [924],
    "directArtifactIds": [1201]
  }, {
    "id": 926,
    "directArtifactIds": [1194, 1202]
  }, {
    "id": 925,
    "transitiveDepSetIds": [926],
    "directArtifactIds": [180]
  }, {
    "id": 927,
    "directArtifactIds": [1193, 180]
  }, {
    "id": 928,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [505]
  }, {
    "id": 929,
    "directArtifactIds": [489, 895]
  }, {
    "id": 930,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [899]
  }, {
    "id": 933,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 932,
    "transitiveDepSetIds": [933],
    "directArtifactIds": [1193]
  }, {
    "id": 934,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 931,
    "transitiveDepSetIds": [932, 934]
  }, {
    "id": 935,
    "directArtifactIds": [1204, 180]
  }, {
    "id": 937,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1205]
  }, {
    "id": 938,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 936,
    "transitiveDepSetIds": [937, 938]
  }, {
    "id": 940,
    "directArtifactIds": [1209, 1210, 1211, 1212, 1208]
  }, {
    "id": 939,
    "transitiveDepSetIds": [940],
    "directArtifactIds": [1201]
  }, {
    "id": 942,
    "directArtifactIds": [1204, 1213]
  }, {
    "id": 941,
    "transitiveDepSetIds": [942],
    "directArtifactIds": [180]
  }, {
    "id": 943,
    "directArtifactIds": [1193, 180]
  }, {
    "id": 944,
    "directArtifactIds": [100, 895]
  }, {
    "id": 945,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [498]
  }, {
    "id": 946,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [204]
  }, {
    "id": 947,
    "directArtifactIds": [487, 895]
  }, {
    "id": 949,
    "directArtifactIds": [682, 1217]
  }, {
    "id": 948,
    "transitiveDepSetIds": [949, 287]
  }, {
    "id": 950,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [201]
  }, {
    "id": 952,
    "directArtifactIds": [1218, 1219, 1220, 1221, 1222, 1223]
  }, {
    "id": 954,
    "directArtifactIds": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 955,
    "directArtifactIds": [1224, 1225]
  }, {
    "id": 953,
    "transitiveDepSetIds": [954, 955, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 951,
    "transitiveDepSetIds": [952, 953],
    "directArtifactIds": [821]
  }, {
    "id": 957,
    "directArtifactIds": [1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237]
  }, {
    "id": 960,
    "directArtifactIds": [1238, 1239]
  }, {
    "id": 961,
    "directArtifactIds": [1240, 1241]
  }, {
    "id": 959,
    "transitiveDepSetIds": [955, 960, 961],
    "directArtifactIds": [1242, 1243, 1244, 1245, 100, 498, 496, 502, 493]
  }, {
    "id": 958,
    "transitiveDepSetIds": [954, 959, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 956,
    "transitiveDepSetIds": [957, 958],
    "directArtifactIds": [821]
  }, {
    "id": 963,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1246, 490]
  }, {
    "id": 962,
    "transitiveDepSetIds": [963],
    "directArtifactIds": [911]
  }, {
    "id": 966,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 965,
    "transitiveDepSetIds": [602, 244, 966],
    "directArtifactIds": [628, 1248, 1249]
  }, {
    "id": 968,
    "transitiveDepSetIds": [615],
    "directArtifactIds": [467, 459, 460, 468, 462, 461, 464, 48, 49, 469, 466]
  }, {
    "id": 969,
    "transitiveDepSetIds": [173, 174, 175, 176],
    "directArtifactIds": [467, 459, 460, 468, 48, 49, 469, 466]
  }, {
    "id": 967,
    "transitiveDepSetIds": [968, 969]
  }, {
    "id": 970,
    "directArtifactIds": [633, 632, 1250]
  }, {
    "id": 964,
    "transitiveDepSetIds": [965, 967, 970]
  }, {
    "id": 972,
    "transitiveDepSetIds": [244, 602],
    "directArtifactIds": [628, 1248, 1249, 876]
  }, {
    "id": 971,
    "transitiveDepSetIds": [972, 967, 970]
  }, {
    "id": 975,
    "directArtifactIds": [1248, 1249]
  }, {
    "id": 974,
    "transitiveDepSetIds": [975],
    "directArtifactIds": [1253]
  }, {
    "id": 973,
    "transitiveDepSetIds": [974],
    "directArtifactIds": [180]
  }, {
    "id": 976,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [196]
  }, {
    "id": 977,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [758]
  }, {
    "id": 979,
    "directArtifactIds": [682, 1255]
  }, {
    "id": 978,
    "transitiveDepSetIds": [979, 287]
  }, {
    "id": 982,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 981,
    "transitiveDepSetIds": [244, 982],
    "directArtifactIds": [1256]
  }, {
    "id": 986,
    "directArtifactIds": [1257, 1258, 1259, 1260, 1261, 1262, 1263]
  }, {
    "id": 985,
    "transitiveDepSetIds": [986],
    "directArtifactIds": [1264]
  }, {
    "id": 984,
    "transitiveDepSetIds": [985, 986],
    "directArtifactIds": [1265, 1266]
  }, {
    "id": 983,
    "transitiveDepSetIds": [984],
    "directArtifactIds": [1265]
  }, {
    "id": 980,
    "transitiveDepSetIds": [981, 983]
  }, {
    "id": 989,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 988,
    "transitiveDepSetIds": [989],
    "directArtifactIds": [1193]
  }, {
    "id": 990,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 987,
    "transitiveDepSetIds": [988, 990]
  }, {
    "id": 991,
    "directArtifactIds": [1271, 180]
  }, {
    "id": 993,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1272]
  }, {
    "id": 994,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 992,
    "transitiveDepSetIds": [993, 994]
  }, {
    "id": 996,
    "directArtifactIds": [1199, 1200, 1275]
  }, {
    "id": 995,
    "transitiveDepSetIds": [996],
    "directArtifactIds": [1201]
  }, {
    "id": 998,
    "directArtifactIds": [1271, 1276]
  }, {
    "id": 997,
    "transitiveDepSetIds": [998],
    "directArtifactIds": [180]
  }, {
    "id": 999,
    "directArtifactIds": [1193, 180]
  }, {
    "id": 1002,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 1001,
    "transitiveDepSetIds": [1002],
    "directArtifactIds": [1278]
  }, {
    "id": 1003,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 1000,
    "transitiveDepSetIds": [1001, 1003]
  }, {
    "id": 1004,
    "directArtifactIds": [1279, 180]
  }, {
    "id": 1006,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1280]
  }, {
    "id": 1007,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 1005,
    "transitiveDepSetIds": [1006, 1007]
  }, {
    "id": 1008,
    "directArtifactIds": [1279, 180]
  }, {
    "id": 1009,
    "directArtifactIds": [1278, 180]
  }, {
    "id": 1012,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 1011,
    "transitiveDepSetIds": [1012],
    "directArtifactIds": [1278]
  }, {
    "id": 1013,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 1010,
    "transitiveDepSetIds": [1011, 1013]
  }, {
    "id": 1014,
    "directArtifactIds": [1282, 180]
  }, {
    "id": 1016,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1283]
  }, {
    "id": 1017,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 1015,
    "transitiveDepSetIds": [1016, 1017]
  }, {
    "id": 1018,
    "directArtifactIds": [1282, 180]
  }, {
    "id": 1019,
    "directArtifactIds": [1278, 180]
  }, {
    "id": 1022,
    "transitiveDepSetIds": [234, 21]
  }, {
    "id": 1021,
    "transitiveDepSetIds": [1022],
    "directArtifactIds": [1193]
  }, {
    "id": 1023,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 1020,
    "transitiveDepSetIds": [1021, 1023]
  }, {
    "id": 1024,
    "directArtifactIds": [1285, 180]
  }, {
    "id": 1026,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [1286]
  }, {
    "id": 1027,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 1025,
    "transitiveDepSetIds": [1026, 1027]
  }, {
    "id": 1029,
    "directArtifactIds": [1285, 1289]
  }, {
    "id": 1028,
    "transitiveDepSetIds": [1029],
    "directArtifactIds": [180]
  }, {
    "id": 1030,
    "directArtifactIds": [1193, 180]
  }, {
    "id": 1031,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [194]
  }, {
    "id": 1034,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1033,
    "transitiveDepSetIds": [244, 1034],
    "directArtifactIds": [1256]
  }, {
    "id": 1032,
    "transitiveDepSetIds": [1033],
    "directArtifactIds": [1291]
  }, {
    "id": 1036,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1035,
    "transitiveDepSetIds": [244, 1036],
    "directArtifactIds": [628]
  }, {
    "id": 1037,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [205]
  }, {
    "id": 1038,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [502]
  }, {
    "id": 1040,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1039,
    "transitiveDepSetIds": [244, 1040],
    "directArtifactIds": [628]
  }, {
    "id": 1041,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [203]
  }, {
    "id": 1042,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [197]
  }, {
    "id": 1045,
    "transitiveDepSetIds": [234, 21],
    "directArtifactIds": [61]
  }, {
    "id": 1044,
    "transitiveDepSetIds": [1045],
    "directArtifactIds": [758, 901]
  }, {
    "id": 1046,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 1043,
    "transitiveDepSetIds": [1044, 1046]
  }, {
    "id": 1048,
    "transitiveDepSetIds": [1045],
    "directArtifactIds": [758, 901, 1303]
  }, {
    "id": 1049,
    "directArtifactIds": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 48, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 50, 111, 51, 112, 113, 114, 49, 115, 116, 117, 118, 119, 120, 121, 122, 123, 44, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177]
  }, {
    "id": 1047,
    "transitiveDepSetIds": [1048, 1049]
  }, {
    "id": 1051,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1308, 1309]
  }, {
    "id": 1050,
    "transitiveDepSetIds": [1051],
    "directArtifactIds": [911]
  }, {
    "id": 1054,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1053,
    "transitiveDepSetIds": [244, 1054],
    "directArtifactIds": [758, 628, 1303]
  }, {
    "id": 1055,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61, 1304]
  }, {
    "id": 1052,
    "transitiveDepSetIds": [1053, 1055]
  }, {
    "id": 1057,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 758, 1303, 876]
  }, {
    "id": 1056,
    "transitiveDepSetIds": [1057, 1055]
  }, {
    "id": 1059,
    "directArtifactIds": [1303, 1313]
  }, {
    "id": 1058,
    "transitiveDepSetIds": [1059],
    "directArtifactIds": [180]
  }, {
    "id": 1061,
    "directArtifactIds": [1306, 1314]
  }, {
    "id": 1060,
    "transitiveDepSetIds": [1061],
    "directArtifactIds": [180]
  }, {
    "id": 1064,
    "transitiveDepSetIds": [21],
    "directArtifactIds": [61]
  }, {
    "id": 1063,
    "transitiveDepSetIds": [1064],
    "directArtifactIds": [1307, 1311]
  }, {
    "id": 1065,
    "directArtifactIds": [182, 183, 184]
  }, {
    "id": 1062,
    "transitiveDepSetIds": [1063, 1065]
  }, {
    "id": 1067,
    "directArtifactIds": [1305, 1306, 1309]
  }, {
    "id": 1066,
    "transitiveDepSetIds": [1067],
    "directArtifactIds": [180]
  }, {
    "id": 1069,
    "directArtifactIds": [901, 1303]
  }, {
    "id": 1068,
    "transitiveDepSetIds": [1069],
    "directArtifactIds": [180]
  }, {
    "id": 1070,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [199]
  }, {
    "id": 1073,
    "directArtifactIds": [95, 91, 105]
  }, {
    "id": 1072,
    "transitiveDepSetIds": [954, 1073, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1071,
    "transitiveDepSetIds": [1072],
    "directArtifactIds": [1320, 821]
  }, {
    "id": 1075,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1074,
    "transitiveDepSetIds": [244, 1075],
    "directArtifactIds": [628]
  }, {
    "id": 1077,
    "directArtifactIds": [1326, 1324]
  }, {
    "id": 1076,
    "transitiveDepSetIds": [1077],
    "directArtifactIds": [180]
  }, {
    "id": 1078,
    "directArtifactIds": [1328]
  }, {
    "id": 1081,
    "directArtifactIds": [1321, 1325]
  }, {
    "id": 1082,
    "transitiveDepSetIds": [224],
    "directArtifactIds": [1326]
  }, {
    "id": 1080,
    "transitiveDepSetIds": [1081, 1082, 518],
    "directArtifactIds": [500, 1326]
  }, {
    "id": 1079,
    "transitiveDepSetIds": [1080],
    "directArtifactIds": [1329]
  }, {
    "id": 1084,
    "transitiveDepSetIds": [1082],
    "directArtifactIds": [1330, 892]
  }, {
    "id": 1083,
    "transitiveDepSetIds": [1084],
    "directArtifactIds": [180]
  }, {
    "id": 1087,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1086,
    "transitiveDepSetIds": [244, 1087],
    "directArtifactIds": [1256]
  }, {
    "id": 1085,
    "transitiveDepSetIds": [1086],
    "directArtifactIds": [1332]
  }, {
    "id": 1089,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1088,
    "transitiveDepSetIds": [244, 1089],
    "directArtifactIds": [628]
  }, {
    "id": 1091,
    "directArtifactIds": [1340, 1341, 1342, 1343, 1344, 1345]
  }, {
    "id": 1093,
    "transitiveDepSetIds": [955, 960, 961],
    "directArtifactIds": [1346, 498, 496]
  }, {
    "id": 1092,
    "transitiveDepSetIds": [954, 1093, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1090,
    "transitiveDepSetIds": [1091, 1092],
    "directArtifactIds": [821]
  }, {
    "id": 1094,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1044]
  }, {
    "id": 1095,
    "directArtifactIds": [500, 895]
  }, {
    "id": 1096,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [204]
  }, {
    "id": 1098,
    "directArtifactIds": [1349, 1350, 1351]
  }, {
    "id": 1100,
    "transitiveDepSetIds": [960],
    "directArtifactIds": [1243, 1352, 1353, 100, 498, 496, 502, 88, 95, 480, 481]
  }, {
    "id": 1099,
    "transitiveDepSetIds": [954, 1100, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1097,
    "transitiveDepSetIds": [1098, 1099],
    "directArtifactIds": [821]
  }, {
    "id": 1101,
    "directArtifactIds": [493, 895]
  }, {
    "id": 1103,
    "directArtifactIds": [1355, 1356]
  }, {
    "id": 1102,
    "transitiveDepSetIds": [1103],
    "directArtifactIds": [180]
  }, {
    "id": 1105,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1104,
    "transitiveDepSetIds": [244, 1105],
    "directArtifactIds": [628]
  }, {
    "id": 1106,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1041]
  }, {
    "id": 1107,
    "directArtifactIds": [503, 895]
  }, {
    "id": 1109,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1108,
    "transitiveDepSetIds": [244, 1109],
    "directArtifactIds": [1256, 1362]
  }, {
    "id": 1110,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1362, 876]
  }, {
    "id": 1111,
    "directArtifactIds": [1362, 180]
  }, {
    "id": 1113,
    "directArtifactIds": [1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381]
  }, {
    "id": 1114,
    "transitiveDepSetIds": [954, 244],
    "directArtifactIds": [100, 95, 180, 1382]
  }, {
    "id": 1112,
    "transitiveDepSetIds": [1113, 1114],
    "directArtifactIds": [821]
  }, {
    "id": 1117,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1116,
    "transitiveDepSetIds": [244, 1117],
    "directArtifactIds": [1256]
  }, {
    "id": 1115,
    "transitiveDepSetIds": [1116],
    "directArtifactIds": [1291]
  }, {
    "id": 1119,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1118,
    "transitiveDepSetIds": [244, 1119],
    "directArtifactIds": [628, 1387]
  }, {
    "id": 1120,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 1387, 876]
  }, {
    "id": 1121,
    "directArtifactIds": [1387, 180]
  }, {
    "id": 1122,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1027]
  }, {
    "id": 1123,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [504]
  }, {
    "id": 1126,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1125,
    "transitiveDepSetIds": [244, 1126],
    "directArtifactIds": [1256]
  }, {
    "id": 1129,
    "directArtifactIds": [1395, 1396, 1397]
  }, {
    "id": 1131,
    "directArtifactIds": [1398, 1399]
  }, {
    "id": 1132,
    "transitiveDepSetIds": [1131, 986],
    "directArtifactIds": [1400, 1263, 1399, 1401]
  }, {
    "id": 1134,
    "transitiveDepSetIds": [1129],
    "directArtifactIds": [1402]
  }, {
    "id": 1133,
    "transitiveDepSetIds": [1129, 1134],
    "directArtifactIds": [1403]
  }, {
    "id": 1135,
    "transitiveDepSetIds": [1129],
    "directArtifactIds": [1404]
  }, {
    "id": 1130,
    "transitiveDepSetIds": [1129, 1131, 1132, 1133, 1135, 986],
    "directArtifactIds": [1405, 1260, 1406, 1263, 1399]
  }, {
    "id": 1136,
    "transitiveDepSetIds": [1129],
    "directArtifactIds": [1407]
  }, {
    "id": 1137,
    "transitiveDepSetIds": [986],
    "directArtifactIds": [1408, 1409]
  }, {
    "id": 1128,
    "transitiveDepSetIds": [1129, 1130, 1131, 1132, 1133, 1135, 1136, 986, 1137],
    "directArtifactIds": [1410, 1411, 1260, 1406, 1263, 1399, 1401]
  }, {
    "id": 1127,
    "transitiveDepSetIds": [1128],
    "directArtifactIds": [1410]
  }, {
    "id": 1124,
    "transitiveDepSetIds": [1125, 1127]
  }, {
    "id": 1139,
    "directArtifactIds": [1416, 1417]
  }, {
    "id": 1138,
    "transitiveDepSetIds": [1139],
    "directArtifactIds": [1201]
  }, {
    "id": 1140,
    "directArtifactIds": [100, 895]
  }, {
    "id": 1141,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [497]
  }, {
    "id": 1142,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [898]
  }, {
    "id": 1143,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [758]
  }, {
    "id": 1144,
    "directArtifactIds": [1420, 1201]
  }, {
    "id": 1145,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1039]
  }, {
    "id": 1146,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1043]
  }, {
    "id": 1147,
    "directArtifactIds": [501, 895]
  }, {
    "id": 1148,
    "directArtifactIds": [1424, 1425]
  }, {
    "id": 1149,
    "directArtifactIds": [1424, 1425]
  }, {
    "id": 1152,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1151,
    "transitiveDepSetIds": [244, 1152],
    "directArtifactIds": [628, 643]
  }, {
    "id": 1150,
    "transitiveDepSetIds": [1151],
    "directArtifactIds": [463]
  }, {
    "id": 1153,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 463, 643, 876]
  }, {
    "id": 1154,
    "directArtifactIds": [1430, 1425]
  }, {
    "id": 1155,
    "directArtifactIds": [1430, 1425]
  }, {
    "id": 1158,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1157,
    "transitiveDepSetIds": [244, 1158],
    "directArtifactIds": [628, 642]
  }, {
    "id": 1156,
    "transitiveDepSetIds": [1157],
    "directArtifactIds": [463]
  }, {
    "id": 1159,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 463, 642, 876]
  }, {
    "id": 1160,
    "directArtifactIds": [1244, 895]
  }, {
    "id": 1161,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [899]
  }, {
    "id": 1162,
    "directArtifactIds": [1436, 1425]
  }, {
    "id": 1163,
    "directArtifactIds": [1436, 1425]
  }, {
    "id": 1166,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1165,
    "transitiveDepSetIds": [244, 1166],
    "directArtifactIds": [628, 644]
  }, {
    "id": 1164,
    "transitiveDepSetIds": [1165],
    "directArtifactIds": [463]
  }, {
    "id": 1167,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [628, 463, 644, 876]
  }, {
    "id": 1168,
    "directArtifactIds": [1245, 895]
  }, {
    "id": 1169,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1040]
  }, {
    "id": 1170,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [193]
  }, {
    "id": 1171,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1029]
  }, {
    "id": 1172,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [496]
  }, {
    "id": 1173,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [960]
  }, {
    "id": 1174,
    "directArtifactIds": [1242, 895]
  }, {
    "id": 1175,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1035]
  }, {
    "id": 1176,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [498]
  }, {
    "id": 1177,
    "directArtifactIds": [1243, 895]
  }, {
    "id": 1179,
    "directArtifactIds": [1449, 1450, 1451, 1452]
  }, {
    "id": 1181,
    "transitiveDepSetIds": [955],
    "directArtifactIds": [1244, 95, 498]
  }, {
    "id": 1180,
    "transitiveDepSetIds": [954, 1181, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1178,
    "transitiveDepSetIds": [1179, 1180],
    "directArtifactIds": [821]
  }, {
    "id": 1182,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1032]
  }, {
    "id": 1184,
    "transitiveDepSetIds": [954, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1183,
    "transitiveDepSetIds": [1184],
    "directArtifactIds": [1454, 821]
  }, {
    "id": 1185,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [502]
  }, {
    "id": 1187,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1186,
    "transitiveDepSetIds": [244, 1187],
    "directArtifactIds": [628]
  }, {
    "id": 1188,
    "directArtifactIds": [1458, 180]
  }, {
    "id": 1192,
    "transitiveDepSetIds": [215, 216, 218, 227]
  }, {
    "id": 1191,
    "transitiveDepSetIds": [1192],
    "directArtifactIds": [1460]
  }, {
    "id": 1190,
    "transitiveDepSetIds": [1191],
    "directArtifactIds": [892]
  }, {
    "id": 1189,
    "transitiveDepSetIds": [1190],
    "directArtifactIds": [180]
  }, {
    "id": 1194,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1193,
    "transitiveDepSetIds": [244, 1194],
    "directArtifactIds": [628]
  }, {
    "id": 1195,
    "directArtifactIds": [1465, 180]
  }, {
    "id": 1199,
    "transitiveDepSetIds": [215, 216, 218, 227]
  }, {
    "id": 1198,
    "transitiveDepSetIds": [1199],
    "directArtifactIds": [1467]
  }, {
    "id": 1197,
    "transitiveDepSetIds": [1198],
    "directArtifactIds": [892]
  }, {
    "id": 1196,
    "transitiveDepSetIds": [1197],
    "directArtifactIds": [180]
  }, {
    "id": 1201,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1200,
    "transitiveDepSetIds": [244, 1201],
    "directArtifactIds": [1256, 1174, 1175]
  }, {
    "id": 1202,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1174, 1175, 876]
  }, {
    "id": 1204,
    "directArtifactIds": [1174, 1175]
  }, {
    "id": 1203,
    "transitiveDepSetIds": [1204],
    "directArtifactIds": [180]
  }, {
    "id": 1205,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1042]
  }, {
    "id": 1206,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [897]
  }, {
    "id": 1207,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1028]
  }, {
    "id": 1208,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [205]
  }, {
    "id": 1210,
    "directArtifactIds": [1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381]
  }, {
    "id": 1211,
    "transitiveDepSetIds": [954, 244],
    "directArtifactIds": [100, 95, 180, 1382]
  }, {
    "id": 1209,
    "transitiveDepSetIds": [1210, 1211],
    "directArtifactIds": [821]
  }, {
    "id": 1212,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [957]
  }, {
    "id": 1213,
    "directArtifactIds": [1467, 895]
  }, {
    "id": 1214,
    "directArtifactIds": [1352, 895]
  }, {
    "id": 1215,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [195]
  }, {
    "id": 1217,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1216,
    "transitiveDepSetIds": [244, 1217],
    "directArtifactIds": [1256, 1387]
  }, {
    "id": 1218,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1387, 876]
  }, {
    "id": 1219,
    "directArtifactIds": [1387, 180]
  }, {
    "id": 1220,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [198]
  }, {
    "id": 1221,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1030]
  }, {
    "id": 1222,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [194]
  }, {
    "id": 1223,
    "directArtifactIds": [1460, 895]
  }, {
    "id": 1224,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [197]
  }, {
    "id": 1225,
    "directArtifactIds": [1382, 895]
  }, {
    "id": 1226,
    "directArtifactIds": [1424, 1425]
  }, {
    "id": 1227,
    "directArtifactIds": [1424, 1425]
  }, {
    "id": 1230,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1229,
    "transitiveDepSetIds": [244, 1230],
    "directArtifactIds": [1256, 1238]
  }, {
    "id": 1228,
    "transitiveDepSetIds": [1229],
    "directArtifactIds": [1490]
  }, {
    "id": 1231,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1490, 1238, 876]
  }, {
    "id": 1232,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1037]
  }, {
    "id": 1233,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [951]
  }, {
    "id": 1234,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [958]
  }, {
    "id": 1235,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [953]
  }, {
    "id": 1236,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [956]
  }, {
    "id": 1237,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [961]
  }, {
    "id": 1238,
    "directArtifactIds": [1353, 895]
  }, {
    "id": 1239,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1031]
  }, {
    "id": 1241,
    "directArtifactIds": [1340, 1341, 1342, 1343, 1344, 1345]
  }, {
    "id": 1242,
    "transitiveDepSetIds": [954, 1093, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1240,
    "transitiveDepSetIds": [1241, 1242],
    "directArtifactIds": [821]
  }, {
    "id": 1243,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [497]
  }, {
    "id": 1244,
    "directArtifactIds": [493, 895]
  }, {
    "id": 1245,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [196]
  }, {
    "id": 1246,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [504]
  }, {
    "id": 1247,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [948]
  }, {
    "id": 1249,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1248,
    "transitiveDepSetIds": [244, 1249],
    "directArtifactIds": [628]
  }, {
    "id": 1251,
    "transitiveDepSetIds": [262],
    "directArtifactIds": [1504]
  }, {
    "id": 1250,
    "transitiveDepSetIds": [1251],
    "directArtifactIds": [180]
  }, {
    "id": 1252,
    "directArtifactIds": [1507]
  }, {
    "id": 1255,
    "directArtifactIds": [1501, 1505]
  }, {
    "id": 1254,
    "transitiveDepSetIds": [1255, 210, 518]
  }, {
    "id": 1253,
    "transitiveDepSetIds": [1254],
    "directArtifactIds": [1508]
  }, {
    "id": 1257,
    "transitiveDepSetIds": [210],
    "directArtifactIds": [1509, 892]
  }, {
    "id": 1256,
    "transitiveDepSetIds": [1257],
    "directArtifactIds": [180]
  }, {
    "id": 1259,
    "directArtifactIds": [1349, 1350, 1351]
  }, {
    "id": 1260,
    "transitiveDepSetIds": [954, 1100, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1258,
    "transitiveDepSetIds": [1259, 1260],
    "directArtifactIds": [821]
  }, {
    "id": 1261,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [954]
  }, {
    "id": 1262,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1036]
  }, {
    "id": 1264,
    "directArtifactIds": [1218, 1219, 1220, 1221, 1222, 1223]
  }, {
    "id": 1265,
    "transitiveDepSetIds": [954, 955, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1263,
    "transitiveDepSetIds": [1264, 1265],
    "directArtifactIds": [821]
  }, {
    "id": 1266,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1033]
  }, {
    "id": 1267,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [199]
  }, {
    "id": 1268,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1038]
  }, {
    "id": 1269,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [955]
  }, {
    "id": 1270,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [950]
  }, {
    "id": 1273,
    "directArtifactIds": [1514, 1515, 1242, 1245]
  }, {
    "id": 1272,
    "transitiveDepSetIds": [954, 1273, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1271,
    "transitiveDepSetIds": [1272],
    "directArtifactIds": [1516, 821]
  }, {
    "id": 1274,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [949]
  }, {
    "id": 1275,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [1034]
  }, {
    "id": 1276,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [959]
  }, {
    "id": 1279,
    "directArtifactIds": [1514, 1515, 1242, 1245]
  }, {
    "id": 1278,
    "transitiveDepSetIds": [954, 1279, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1277,
    "transitiveDepSetIds": [1278],
    "directArtifactIds": [1518, 821]
  }, {
    "id": 1281,
    "transitiveDepSetIds": [954, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1280,
    "transitiveDepSetIds": [1281],
    "directArtifactIds": [1454, 821]
  }, {
    "id": 1282,
    "directArtifactIds": [1430, 1425]
  }, {
    "id": 1283,
    "directArtifactIds": [1430, 1425]
  }, {
    "id": 1286,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1285,
    "transitiveDepSetIds": [244, 1286],
    "directArtifactIds": [1256, 1224]
  }, {
    "id": 1284,
    "transitiveDepSetIds": [1285],
    "directArtifactIds": [1490]
  }, {
    "id": 1287,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1490, 1224, 876]
  }, {
    "id": 1288,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [952]
  }, {
    "id": 1289,
    "directArtifactIds": [1436, 1425]
  }, {
    "id": 1290,
    "directArtifactIds": [1436, 1425]
  }, {
    "id": 1293,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1292,
    "transitiveDepSetIds": [244, 1293],
    "directArtifactIds": [1256, 1240]
  }, {
    "id": 1291,
    "transitiveDepSetIds": [1292],
    "directArtifactIds": [1490]
  }, {
    "id": 1294,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1256, 1490, 1240, 876]
  }, {
    "id": 1296,
    "directArtifactIds": [1449, 1450, 1451, 1452]
  }, {
    "id": 1297,
    "transitiveDepSetIds": [954, 1181, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1295,
    "transitiveDepSetIds": [1296, 1297],
    "directArtifactIds": [821]
  }, {
    "id": 1299,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1298,
    "transitiveDepSetIds": [244, 1299],
    "directArtifactIds": [1256]
  }, {
    "id": 1302,
    "directArtifactIds": [641, 1240]
  }, {
    "id": 1301,
    "transitiveDepSetIds": [1302],
    "directArtifactIds": [1534]
  }, {
    "id": 1300,
    "transitiveDepSetIds": [1301],
    "directArtifactIds": [180]
  }, {
    "id": 1303,
    "directArtifactIds": [1537]
  }, {
    "id": 1306,
    "directArtifactIds": [1531, 1535]
  }, {
    "id": 1307,
    "directArtifactIds": [1241, 483]
  }, {
    "id": 1305,
    "transitiveDepSetIds": [1306, 1307, 244]
  }, {
    "id": 1304,
    "transitiveDepSetIds": [1305],
    "directArtifactIds": [1538]
  }, {
    "id": 1309,
    "transitiveDepSetIds": [1307],
    "directArtifactIds": [1539, 1540]
  }, {
    "id": 1308,
    "transitiveDepSetIds": [1309],
    "directArtifactIds": [180]
  }, {
    "id": 1311,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [1542, 1514]
  }, {
    "id": 1310,
    "transitiveDepSetIds": [1311],
    "directArtifactIds": [911]
  }, {
    "id": 1314,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1313,
    "transitiveDepSetIds": [602, 244, 1314],
    "directArtifactIds": [1256, 1248, 1249]
  }, {
    "id": 1317,
    "directArtifactIds": [1398, 1399]
  }, {
    "id": 1316,
    "transitiveDepSetIds": [1317],
    "directArtifactIds": [1544, 1445, 1448, 1441, 1523, 1494, 1529, 48, 49, 1545, 1399]
  }, {
    "id": 1319,
    "directArtifactIds": [1523, 1490]
  }, {
    "id": 1320,
    "directArtifactIds": [1494, 1490]
  }, {
    "id": 1321,
    "directArtifactIds": [1529, 1490]
  }, {
    "id": 1322,
    "transitiveDepSetIds": [1131],
    "directArtifactIds": [1399]
  }, {
    "id": 1318,
    "transitiveDepSetIds": [1319, 1320, 1321, 1322],
    "directArtifactIds": [1544, 1445, 1448, 1441, 48, 49, 1545, 1399]
  }, {
    "id": 1315,
    "transitiveDepSetIds": [1316, 1318]
  }, {
    "id": 1323,
    "directArtifactIds": [1524, 1495, 1530]
  }, {
    "id": 1312,
    "transitiveDepSetIds": [1313, 1315, 1323]
  }, {
    "id": 1325,
    "transitiveDepSetIds": [244, 602],
    "directArtifactIds": [1256, 1248, 1249, 876]
  }, {
    "id": 1324,
    "transitiveDepSetIds": [1325, 1315, 1323]
  }, {
    "id": 1328,
    "directArtifactIds": [1248, 1249]
  }, {
    "id": 1327,
    "transitiveDepSetIds": [1328],
    "directArtifactIds": [1548]
  }, {
    "id": 1326,
    "transitiveDepSetIds": [1327],
    "directArtifactIds": [180]
  }, {
    "id": 1329,
    "directArtifactIds": [1515, 895]
  }, {
    "id": 1331,
    "transitiveDepSetIds": [244],
    "directArtifactIds": [627]
  }, {
    "id": 1330,
    "transitiveDepSetIds": [244, 1331],
    "directArtifactIds": [1256]
  }, {
    "id": 1332,
    "transitiveDepSetIds": [575],
    "directArtifactIds": [505]
  }, {
    "id": 1334,
    "directArtifactIds": [1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237]
  }, {
    "id": 1335,
    "transitiveDepSetIds": [954, 959, 244],
    "directArtifactIds": [100, 95, 180]
  }, {
    "id": 1333,
    "transitiveDepSetIds": [1334, 1335],
    "directArtifactIds": [821]
  }],
  "configuration": [{
    "id": 1,
    "mnemonic": "k8-fastbuild",
    "platformName": "k8",
    "checksum": "452f9d8c6a8fb0c4e221ec60aef95a865c294153820f74a391986aeb50d2d855"
  }, {
    "id": 2,
    "mnemonic": "k8-fastbuild",
    "platformName": "k8",
    "checksum": "de77e87cf226c35fe6b46f971841b240aaf89e50d96437623c322f2b25794413"
  }, {
    "id": 3,
    "mnemonic": "k8-opt-exec-2B5CBBC6",
    "platformName": "k8",
    "checksum": "ccf46bea05c912a08097ac85e5eceea232a579cfa13a0ba3828add582415ad9d",
    "isTool": true
  }],
  "aspectDescriptors": [{
    "id": 1,
    "name": "@_builtins//:common/java/proto/java_proto_library.bzl%bazel_java_proto_aspect"
  }],
  "ruleClasses": [{
    "id": 1,
    "name": "_rename"
  }, {
    "id": 2,
    "name": "pkg_tar_impl"
  }, {
    "id": 3,
    "name": "kt_jvm_test"
  }, {
    "id": 4,
    "name": "convert_options_to_flags_empty_options_test"
  }, {
    "id": 5,
    "name": "convert_options_to_flags_test"
  }, {
    "id": 6,
    "name": "kt_jvm_library"
  }, {
    "id": 7,
    "name": "java_test"
  }, {
    "id": 8,
    "name": "jar_jar"
  }, {
    "id": 9,
    "name": "genrule"
  }, {
    "id": 10,
    "name": "_bootclasspath"
  }, {
    "id": 11,
    "name": "java_library"
  }, {
    "id": 12,
    "name": "java_binary"
  }, {
    "id": 13,
    "name": "java_import"
  }, {
    "id": 14,
    "name": "kt_jvm_binary"
  }, {
    "id": 15,
    "name": "jvm_import"
  }, {
    "id": 16,
    "name": "java_plugin"
  }, {
    "id": 17,
    "name": "generate_jvm_service"
  }, {
    "id": 18,
    "name": "proto_library"
  }],
  "pathFragments": [{
    "id": 1,
    "label": "BUILD.release.bazel"
  }, {
    "id": 6,
    "label": "bazel-out"
  }, {
    "id": 5,
    "label": "k8-fastbuild",
    "parentId": 6
  }, {
    "id": 4,
    "label": "bin",
    "parentId": 5
  }, {
    "id": 3,
    "label": "rules_kotlin_release_BUILD.bazel",
    "parentId": 4
  }, {
    "id": 2,
    "label": "BUILD.bazel",
    "parentId": 3
  }, {
    "id": 7,
    "label": "WORKSPACE.release.bazel"
  }, {
    "id": 9,
    "label": "rules_kotlin_release_WORKSPACE",
    "parentId": 4
  }, {
    "id": 8,
    "label": "WORKSPACE",
    "parentId": 9
  }, {
    "id": 10,
    "label": "rules_kotlin_release.manifest",
    "parentId": 4
  }, {
    "id": 12,
    "label": "kotlin",
    "parentId": 4
  }, {
    "id": 11,
    "label": "pkg.tgz",
    "parentId": 12
  }, {
    "id": 16,
    "label": "src",
    "parentId": 4
  }, {
    "id": 15,
    "label": "main",
    "parentId": 16
  }, {
    "id": 14,
    "label": "kotlin",
    "parentId": 15
  }, {
    "id": 13,
    "label": "pkg.tgz",
    "parentId": 14
  }, {
    "id": 18,
    "label": "starlark",
    "parentId": 15
  }, {
    "id": 17,
    "label": "pkg.tgz",
    "parentId": 18
  }, {
    "id": 20,
    "label": "third_party",
    "parentId": 4
  }, {
    "id": 19,
    "label": "pkg.tgz",
    "parentId": 20
  }, {
    "id": 26,
    "label": "external"
  }, {
    "id": 25,
    "label": "rules_pkg",
    "parentId": 26
  }, {
    "id": 24,
    "label": "pkg",
    "parentId": 25
  }, {
    "id": 23,
    "label": "private",
    "parentId": 24
  }, {
    "id": 22,
    "label": "tar",
    "parentId": 23
  }, {
    "id": 21,
    "label": "build_tar.py",
    "parentId": 22
  }, {
    "id": 34,
    "label": "k8-opt-exec-2B5CBBC6",
    "parentId": 6
  }, {
    "id": 33,
    "label": "bin",
    "parentId": 34
  }, {
    "id": 32,
    "label": "external",
    "parentId": 33
  }, {
    "id": 31,
    "label": "rules_pkg",
    "parentId": 32
  }, {
    "id": 30,
    "label": "pkg",
    "parentId": 31
  }, {
    "id": 29,
    "label": "private",
    "parentId": 30
  }, {
    "id": 28,
    "label": "tar",
    "parentId": 29
  }, {
    "id": 27,
    "label": "build_tar",
    "parentId": 28
  }, {
    "id": 37,
    "label": "internal",
    "parentId": 34
  }, {
    "id": 36,
    "label": "_middlemen",
    "parentId": 37
  }, {
    "id": 35,
    "label": "external_Srules_Upkg_Spkg_Sprivate_Star_Sbuild_Utar-runfiles",
    "parentId": 36
  }, {
    "id": 38,
    "label": "rules_kotlin_release.tgz",
    "parentId": 4
  }, {
    "id": 39,
    "label": "pkg.manifest",
    "parentId": 20
  }, {
    "id": 40,
    "label": "empty.jar",
    "parentId": 20
  }, {
    "id": 42,
    "label": "third_party"
  }, {
    "id": 41,
    "label": "empty.jdeps",
    "parentId": 42
  }, {
    "id": 43,
    "label": "jarjar.bzl",
    "parentId": 42
  }, {
    "id": 45,
    "label": "pkg_jarjar.jar",
    "parentId": 20
  }, {
    "id": 44,
    "label": "jarjar.jar",
    "parentId": 45
  }, {
    "id": 47,
    "label": "pkg_BUILD.bazel",
    "parentId": 20
  }, {
    "id": 46,
    "label": "BUILD.bazel",
    "parentId": 47
  }, {
    "id": 48,
    "label": "pkg.manifest",
    "parentId": 12
  }, {
    "id": 50,
    "label": "kotlin"
  }, {
    "id": 49,
    "label": "android.bzl",
    "parentId": 50
  }, {
    "id": 51,
    "label": "core.bzl",
    "parentId": 50
  }, {
    "id": 52,
    "label": "dependencies.release.bzl",
    "parentId": 50
  }, {
    "id": 53,
    "label": "js.bzl",
    "parentId": 50
  }, {
    "id": 54,
    "label": "jvm.bzl",
    "parentId": 50
  }, {
    "id": 55,
    "label": "kotlin.bzl",
    "parentId": 50
  }, {
    "id": 56,
    "label": "lint.bzl",
    "parentId": 50
  }, {
    "id": 57,
    "label": "repositories.bzl",
    "parentId": 50
  }, {
    "id": 59,
    "label": "pkg_dependencies.bzl",
    "parentId": 12
  }, {
    "id": 58,
    "label": "dependencies.bzl",
    "parentId": 59
  }, {
    "id": 61,
    "label": "pkg_BUILD.bazel",
    "parentId": 12
  }, {
    "id": 60,
    "label": "BUILD.bazel",
    "parentId": 61
  }, {
    "id": 63,
    "label": "internal",
    "parentId": 12
  }, {
    "id": 62,
    "label": "pkg.tgz",
    "parentId": 63
  }, {
    "id": 65,
    "label": "settings",
    "parentId": 12
  }, {
    "id": 64,
    "label": "pkg.tgz",
    "parentId": 65
  }, {
    "id": 66,
    "label": "pkg.manifest",
    "parentId": 14
  }, {
    "id": 67,
    "label": "jdeps-gen.jar",
    "parentId": 14
  }, {
    "id": 68,
    "label": "skip-code-gen.jar",
    "parentId": 14
  }, {
    "id": 70,
    "label": "pkg_kotlin_worker.jar",
    "parentId": 14
  }, {
    "id": 69,
    "label": "kotlin_worker.jar",
    "parentId": 70
  }, {
    "id": 72,
    "label": "pkg_jdeps_merger_worker.jar",
    "parentId": 14
  }, {
    "id": 71,
    "label": "jdeps_merger_worker.jar",
    "parentId": 72
  }, {
    "id": 74,
    "label": "pkg_BUILD.bazel",
    "parentId": 14
  }, {
    "id": 73,
    "label": "BUILD.bazel",
    "parentId": 74
  }, {
    "id": 79,
    "label": "io",
    "parentId": 14
  }, {
    "id": 78,
    "label": "bazel",
    "parentId": 79
  }, {
    "id": 77,
    "label": "kotlin",
    "parentId": 78
  }, {
    "id": 76,
    "label": "compiler",
    "parentId": 77
  }, {
    "id": 75,
    "label": "pkg.tgz",
    "parentId": 76
  }, {
    "id": 80,
    "label": "pkg.manifest",
    "parentId": 18
  }, {
    "id": 82,
    "label": "pkg_BUILD.bazel",
    "parentId": 18
  }, {
    "id": 81,
    "label": "BUILD.bazel",
    "parentId": 82
  }, {
    "id": 84,
    "label": "core",
    "parentId": 18
  }, {
    "id": 83,
    "label": "pkg.tgz",
    "parentId": 84
  }, {
    "id": 90,
    "label": "test",
    "parentId": 16
  }, {
    "id": 89,
    "label": "kotlin",
    "parentId": 90
  }, {
    "id": 88,
    "label": "io",
    "parentId": 89
  }, {
    "id": 87,
    "label": "bazel",
    "parentId": 88
  }, {
    "id": 86,
    "label": "kotlin",
    "parentId": 87
  }, {
    "id": 85,
    "label": "assertion_test_case.abi.jar",
    "parentId": 86
  }, {
    "id": 93,
    "label": "com_github_jetbrains_kotlin",
    "parentId": 26
  }, {
    "id": 92,
    "label": "lib",
    "parentId": 93
  }, {
    "id": 91,
    "label": "kotlin-test.jar",
    "parentId": 92
  }, {
    "id": 105,
    "label": "external",
    "parentId": 4
  }, {
    "id": 104,
    "label": "kotlin_rules_maven",
    "parentId": 105
  }, {
    "id": 103,
    "label": "v1",
    "parentId": 104
  }, {
    "id": 102,
    "label": "https",
    "parentId": 103
  }, {
    "id": 101,
    "label": "repo1.maven.org",
    "parentId": 102
  }, {
    "id": 100,
    "label": "maven2",
    "parentId": 101
  }, {
    "id": 99,
    "label": "com",
    "parentId": 100
  }, {
    "id": 98,
    "label": "google",
    "parentId": 99
  }, {
    "id": 97,
    "label": "guava",
    "parentId": 98
  }, {
    "id": 96,
    "label": "guava",
    "parentId": 97
  }, {
    "id": 95,
    "label": "31.0.1-jre",
    "parentId": 96
  }, {
    "id": 94,
    "label": "header_guava-31.0.1-jre.jar",
    "parentId": 95
  }, {
    "id": 115,
    "label": "maven-central.storage.googleapis.com",
    "parentId": 102
  }, {
    "id": 114,
    "label": "repos",
    "parentId": 115
  }, {
    "id": 113,
    "label": "central",
    "parentId": 114
  }, {
    "id": 112,
    "label": "data",
    "parentId": 113
  }, {
    "id": 111,
    "label": "com",
    "parentId": 112
  }, {
    "id": 110,
    "label": "google",
    "parentId": 111
  }, {
    "id": 109,
    "label": "truth",
    "parentId": 110
  }, {
    "id": 108,
    "label": "truth",
    "parentId": 109
  }, {
    "id": 107,
    "label": "0.45",
    "parentId": 108
  }, {
    "id": 106,
    "label": "header_truth-0.45.jar",
    "parentId": 107
  }, {
    "id": 119,
    "label": "junit",
    "parentId": 112
  }, {
    "id": 118,
    "label": "junit",
    "parentId": 119
  }, {
    "id": 117,
    "label": "4.13-beta-3",
    "parentId": 118
  }, {
    "id": 116,
    "label": "header_junit-4.13-beta-3.jar",
    "parentId": 117
  }, {
    "id": 120,
    "label": "annotations-13.0.jar",
    "parentId": 92
  }, {
    "id": 121,
    "label": "kotlin-stdlib.jar",
    "parentId": 92
  }, {
    "id": 122,
    "label": "kotlin-stdlib-jdk7.jar",
    "parentId": 92
  }, {
    "id": 123,
    "label": "kotlin-stdlib-jdk8.jar",
    "parentId": 92
  }, {
    "id": 127,
    "label": "data",
    "parentId": 90
  }, {
    "id": 126,
    "label": "jvm",
    "parentId": 127
  }, {
    "id": 125,
    "label": "basic",
    "parentId": 126
  }, {
    "id": 124,
    "label": "test_associates_library.abi.jar",
    "parentId": 125
  }, {
    "id": 131,
    "label": "guava",
    "parentId": 110
  }, {
    "id": 130,
    "label": "listenablefuture",
    "parentId": 131
  }, {
    "id": 129,
    "label": "9999.0-empty-to-avoid-conflict-with-guava",
    "parentId": 130
  }, {
    "id": 128,
    "label": "header_listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar",
    "parentId": 129
  }, {
    "id": 135,
    "label": "j2objc",
    "parentId": 110
  }, {
    "id": 134,
    "label": "j2objc-annotations",
    "parentId": 135
  }, {
    "id": 133,
    "label": "1.3",
    "parentId": 134
  }, {
    "id": 132,
    "label": "header_j2objc-annotations-1.3.jar",
    "parentId": 133
  }, {
    "id": 140,
    "label": "code",
    "parentId": 110
  }, {
    "id": 139,
    "label": "findbugs",
    "parentId": 140
  }, {
    "id": 138,
    "label": "jsr305",
    "parentId": 139
  }, {
    "id": 137,
    "label": "3.0.2",
    "parentId": 138
  }, {
    "id": 136,
    "label": "header_jsr305-3.0.2.jar",
    "parentId": 137
  }, {
    "id": 144,
    "label": "errorprone",
    "parentId": 98
  }, {
    "id": 143,
    "label": "error_prone_annotations",
    "parentId": 144
  }, {
    "id": 142,
    "label": "2.7.1",
    "parentId": 143
  }, {
    "id": 141,
    "label": "header_error_prone_annotations-2.7.1.jar",
    "parentId": 142
  }, {
    "id": 149,
    "label": "org",
    "parentId": 100
  }, {
    "id": 148,
    "label": "checkerframework",
    "parentId": 149
  }, {
    "id": 147,
    "label": "checker-qual",
    "parentId": 148
  }, {
    "id": 146,
    "label": "3.12.0",
    "parentId": 147
  }, {
    "id": 145,
    "label": "header_checker-qual-3.12.0.jar",
    "parentId": 146
  }, {
    "id": 152,
    "label": "failureaccess",
    "parentId": 131
  }, {
    "id": 151,
    "label": "1.0.1",
    "parentId": 152
  }, {
    "id": 150,
    "label": "header_failureaccess-1.0.1.jar",
    "parentId": 151
  }, {
    "id": 157,
    "label": "org",
    "parentId": 112
  }, {
    "id": 156,
    "label": "hamcrest",
    "parentId": 157
  }, {
    "id": 155,
    "label": "hamcrest-core",
    "parentId": 156
  }, {
    "id": 154,
    "label": "1.3",
    "parentId": 155
  }, {
    "id": 153,
    "label": "header_hamcrest-core-1.3.jar",
    "parentId": 154
  }, {
    "id": 162,
    "label": "googlecode",
    "parentId": 111
  }, {
    "id": 161,
    "label": "java-diff-utils",
    "parentId": 162
  }, {
    "id": 160,
    "label": "diffutils",
    "parentId": 161
  }, {
    "id": 159,
    "label": "1.3.0",
    "parentId": 160
  }, {
    "id": 158,
    "label": "header_diffutils-1.3.0.jar",
    "parentId": 159
  }, {
    "id": 167,
    "label": "auto",
    "parentId": 98
  }, {
    "id": 166,
    "label": "value",
    "parentId": 167
  }, {
    "id": 165,
    "label": "auto-value-annotations",
    "parentId": 166
  }, {
    "id": 164,
    "label": "1.10.1",
    "parentId": 165
  }, {
    "id": 163,
    "label": "header_auto-value-annotations-1.10.1.jar",
    "parentId": 164
  }, {
    "id": 171,
    "label": "checkerframework",
    "parentId": 157
  }, {
    "id": 170,
    "label": "checker-compat-qual",
    "parentId": 171
  }, {
    "id": 169,
    "label": "2.5.5",
    "parentId": 170
  }, {
    "id": 168,
    "label": "header_checker-compat-qual-2.5.5.jar",
    "parentId": 169
  }, {
    "id": 178,
    "label": "src"
  }, {
    "id": 177,
    "label": "test",
    "parentId": 178
  }, {
    "id": 176,
    "label": "kotlin",
    "parentId": 177
  }, {
    "id": 175,
    "label": "io",
    "parentId": 176
  }, {
    "id": 174,
    "label": "bazel",
    "parentId": 175
  }, {
    "id": 173,
    "label": "kotlin",
    "parentId": 174
  }, {
    "id": 172,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.kt",
    "parentId": 173
  }, {
    "id": 187,
    "label": "src",
    "parentId": 33
  }, {
    "id": 186,
    "label": "main",
    "parentId": 187
  }, {
    "id": 185,
    "label": "kotlin",
    "parentId": 186
  }, {
    "id": 184,
    "label": "io",
    "parentId": 185
  }, {
    "id": 183,
    "label": "bazel",
    "parentId": 184
  }, {
    "id": 182,
    "label": "kotlin",
    "parentId": 183
  }, {
    "id": 181,
    "label": "builder",
    "parentId": 182
  }, {
    "id": 180,
    "label": "cmd",
    "parentId": 181
  }, {
    "id": 179,
    "label": "build",
    "parentId": 180
  }, {
    "id": 188,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Scmd_Sbuild-runfiles",
    "parentId": 36
  }, {
    "id": 189,
    "label": "build.jar",
    "parentId": 180
  }, {
    "id": 190,
    "label": "BUILD.bazel",
    "parentId": 93
  }, {
    "id": 191,
    "label": "WORKSPACE",
    "parentId": 93
  }, {
    "id": 193,
    "label": "bin",
    "parentId": 93
  }, {
    "id": 192,
    "label": "kapt",
    "parentId": 193
  }, {
    "id": 194,
    "label": "kapt.bat",
    "parentId": 193
  }, {
    "id": 195,
    "label": "kotlin",
    "parentId": 193
  }, {
    "id": 196,
    "label": "kotlin-dce-js",
    "parentId": 193
  }, {
    "id": 197,
    "label": "kotlin-dce-js.bat",
    "parentId": 193
  }, {
    "id": 198,
    "label": "kotlin.bat",
    "parentId": 193
  }, {
    "id": 199,
    "label": "kotlinc",
    "parentId": 193
  }, {
    "id": 200,
    "label": "kotlinc-js",
    "parentId": 193
  }, {
    "id": 201,
    "label": "kotlinc-js.bat",
    "parentId": 193
  }, {
    "id": 202,
    "label": "kotlinc-jvm",
    "parentId": 193
  }, {
    "id": 203,
    "label": "kotlinc-jvm.bat",
    "parentId": 193
  }, {
    "id": 204,
    "label": "kotlinc.bat",
    "parentId": 193
  }, {
    "id": 205,
    "label": "build.txt",
    "parentId": 93
  }, {
    "id": 206,
    "label": "capabilities.bzl",
    "parentId": 93
  }, {
    "id": 207,
    "label": "allopen-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 208,
    "label": "android-extensions-compiler.jar",
    "parentId": 92
  }, {
    "id": 209,
    "label": "android-extensions-runtime.jar",
    "parentId": 92
  }, {
    "id": 210,
    "label": "assignment-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 211,
    "label": "js.engines.jar",
    "parentId": 92
  }, {
    "id": 212,
    "label": "jvm-abi-gen.jar",
    "parentId": 92
  }, {
    "id": 213,
    "label": "kotlin-annotation-processing-cli.jar",
    "parentId": 92
  }, {
    "id": 214,
    "label": "kotlin-annotation-processing-runtime.jar",
    "parentId": 92
  }, {
    "id": 215,
    "label": "kotlin-annotation-processing.jar",
    "parentId": 92
  }, {
    "id": 216,
    "label": "kotlin-annotations-jvm-sources.jar",
    "parentId": 92
  }, {
    "id": 217,
    "label": "kotlin-annotations-jvm.jar",
    "parentId": 92
  }, {
    "id": 218,
    "label": "kotlin-ant.jar",
    "parentId": 92
  }, {
    "id": 219,
    "label": "kotlin-compiler.jar",
    "parentId": 92
  }, {
    "id": 220,
    "label": "kotlin-daemon-client.jar",
    "parentId": 92
  }, {
    "id": 221,
    "label": "kotlin-daemon.jar",
    "parentId": 92
  }, {
    "id": 222,
    "label": "kotlin-imports-dumper-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 223,
    "label": "kotlin-main-kts.jar",
    "parentId": 92
  }, {
    "id": 224,
    "label": "kotlin-preloader.jar",
    "parentId": 92
  }, {
    "id": 225,
    "label": "kotlin-reflect-sources.jar",
    "parentId": 92
  }, {
    "id": 226,
    "label": "kotlin-reflect.jar",
    "parentId": 92
  }, {
    "id": 227,
    "label": "kotlin-runner.jar",
    "parentId": 92
  }, {
    "id": 228,
    "label": "kotlin-script-runtime-sources.jar",
    "parentId": 92
  }, {
    "id": 229,
    "label": "kotlin-script-runtime.jar",
    "parentId": 92
  }, {
    "id": 230,
    "label": "kotlin-scripting-common.jar",
    "parentId": 92
  }, {
    "id": 231,
    "label": "kotlin-scripting-compiler-impl.jar",
    "parentId": 92
  }, {
    "id": 232,
    "label": "kotlin-scripting-compiler.jar",
    "parentId": 92
  }, {
    "id": 233,
    "label": "kotlin-scripting-jvm.jar",
    "parentId": 92
  }, {
    "id": 234,
    "label": "kotlin-stdlib-jdk7-sources.jar",
    "parentId": 92
  }, {
    "id": 235,
    "label": "kotlin-stdlib-jdk8-sources.jar",
    "parentId": 92
  }, {
    "id": 236,
    "label": "kotlin-stdlib-js-sources.jar",
    "parentId": 92
  }, {
    "id": 237,
    "label": "kotlin-stdlib-js.jar",
    "parentId": 92
  }, {
    "id": 238,
    "label": "kotlin-stdlib-sources.jar",
    "parentId": 92
  }, {
    "id": 239,
    "label": "kotlin-test-js-sources.jar",
    "parentId": 92
  }, {
    "id": 240,
    "label": "kotlin-test-js.jar",
    "parentId": 92
  }, {
    "id": 241,
    "label": "kotlin-test-junit-sources.jar",
    "parentId": 92
  }, {
    "id": 242,
    "label": "kotlin-test-junit.jar",
    "parentId": 92
  }, {
    "id": 243,
    "label": "kotlin-test-junit5-sources.jar",
    "parentId": 92
  }, {
    "id": 244,
    "label": "kotlin-test-junit5.jar",
    "parentId": 92
  }, {
    "id": 245,
    "label": "kotlin-test-sources.jar",
    "parentId": 92
  }, {
    "id": 246,
    "label": "kotlin-test-testng-sources.jar",
    "parentId": 92
  }, {
    "id": 247,
    "label": "kotlin-test-testng.jar",
    "parentId": 92
  }, {
    "id": 248,
    "label": "kotlinx-coroutines-core-jvm.jar",
    "parentId": 92
  }, {
    "id": 249,
    "label": "kotlinx-serialization-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 250,
    "label": "lombok-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 251,
    "label": "mutability-annotations-compat.jar",
    "parentId": 92
  }, {
    "id": 252,
    "label": "noarg-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 253,
    "label": "parcelize-compiler.jar",
    "parentId": 92
  }, {
    "id": 254,
    "label": "parcelize-runtime.jar",
    "parentId": 92
  }, {
    "id": 255,
    "label": "sam-with-receiver-compiler-plugin.jar",
    "parentId": 92
  }, {
    "id": 256,
    "label": "trove4j.jar",
    "parentId": 92
  }, {
    "id": 258,
    "label": "license",
    "parentId": 93
  }, {
    "id": 257,
    "label": "COPYRIGHT.txt",
    "parentId": 258
  }, {
    "id": 259,
    "label": "COPYRIGHT_HEADER.txt",
    "parentId": 258
  }, {
    "id": 260,
    "label": "LICENSE.txt",
    "parentId": 258
  }, {
    "id": 261,
    "label": "NOTICE.txt",
    "parentId": 258
  }, {
    "id": 262,
    "label": "README.md",
    "parentId": 258
  }, {
    "id": 264,
    "label": "third_party",
    "parentId": 258
  }, {
    "id": 263,
    "label": "aether_license.txt",
    "parentId": 264
  }, {
    "id": 265,
    "label": "aosp_license.txt",
    "parentId": 264
  }, {
    "id": 266,
    "label": "args4j_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 267,
    "label": "asm_license.txt",
    "parentId": 264
  }, {
    "id": 268,
    "label": "asmble_license.txt",
    "parentId": 264
  }, {
    "id": 269,
    "label": "assemblyscript_license.txt",
    "parentId": 264
  }, {
    "id": 270,
    "label": "boost_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 271,
    "label": "closure-compiler_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 272,
    "label": "dart_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 273,
    "label": "fastutil_licence",
    "parentId": 264
  }, {
    "id": 274,
    "label": "gradle_license.txt",
    "parentId": 264
  }, {
    "id": 275,
    "label": "guava_license.txt",
    "parentId": 264
  }, {
    "id": 276,
    "label": "gwt_license.txt",
    "parentId": 264
  }, {
    "id": 277,
    "label": "jgit_license.txt",
    "parentId": 264
  }, {
    "id": 278,
    "label": "jquery_license.txt",
    "parentId": 264
  }, {
    "id": 279,
    "label": "jshashtable_license.txt",
    "parentId": 264
  }, {
    "id": 280,
    "label": "karma-teamcity-reporter_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 281,
    "label": "karma_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 282,
    "label": "lodash_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 283,
    "label": "lombok_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 284,
    "label": "maven_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 285,
    "label": "mocha-teamcity-reporter_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 286,
    "label": "okhttp_license.txt",
    "parentId": 264
  }, {
    "id": 287,
    "label": "prototype_license.txt",
    "parentId": 264
  }, {
    "id": 288,
    "label": "qunit_license.txt",
    "parentId": 264
  }, {
    "id": 289,
    "label": "rhino_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 290,
    "label": "scala_license.txt",
    "parentId": 264
  }, {
    "id": 291,
    "label": "sl4f_license.txt",
    "parentId": 264
  }, {
    "id": 292,
    "label": "sun_license.txt",
    "parentId": 264
  }, {
    "id": 293,
    "label": "teamcity-service-messages_LICENSE.txt",
    "parentId": 264
  }, {
    "id": 295,
    "label": "testdata",
    "parentId": 264
  }, {
    "id": 294,
    "label": "dagger_license.txt",
    "parentId": 295
  }, {
    "id": 296,
    "label": "eclipse_distribution_license.txt",
    "parentId": 295
  }, {
    "id": 297,
    "label": "eclipse_license.txt",
    "parentId": 295
  }, {
    "id": 298,
    "label": "findbugs_license.txt",
    "parentId": 295
  }, {
    "id": 299,
    "label": "jspecify_license.txt",
    "parentId": 295
  }, {
    "id": 300,
    "label": "lombok_license.txt",
    "parentId": 295
  }, {
    "id": 301,
    "label": "rxjava_license.txt",
    "parentId": 295
  }, {
    "id": 302,
    "label": "spring_license.txt",
    "parentId": 295
  }, {
    "id": 303,
    "label": "trove_license.txt",
    "parentId": 264
  }, {
    "id": 304,
    "label": "trove_readme_license.txt",
    "parentId": 264
  }, {
    "id": 305,
    "label": "KotlinJvmAssociatesBasicVisibilityTest-kt.jar",
    "parentId": 86
  }, {
    "id": 306,
    "label": "KotlinJvmAssociatesBasicVisibilityTest-kt.jdeps",
    "parentId": 86
  }, {
    "id": 312,
    "label": "remote_java_tools_linux",
    "parentId": 26
  }, {
    "id": 311,
    "label": "java_tools",
    "parentId": 312
  }, {
    "id": 310,
    "label": "src",
    "parentId": 311
  }, {
    "id": 309,
    "label": "tools",
    "parentId": 310
  }, {
    "id": 308,
    "label": "singlejar",
    "parentId": 309
  }, {
    "id": 307,
    "label": "singlejar_local",
    "parentId": 308
  }, {
    "id": 313,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.abi.jar",
    "parentId": 86
  }, {
    "id": 314,
    "label": "merge_jdeps",
    "parentId": 180
  }, {
    "id": 315,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Scmd_Smerge_Ujdeps-runfiles",
    "parentId": 36
  }, {
    "id": 316,
    "label": "merge_jdeps.jar",
    "parentId": 180
  }, {
    "id": 317,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.jdeps",
    "parentId": 86
  }, {
    "id": 318,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.jar",
    "parentId": 86
  }, {
    "id": 319,
    "label": "KotlinJvmAssociatesBasicVisibilityTest-sources.jar",
    "parentId": 86
  }, {
    "id": 322,
    "label": "kt_java_stub_template",
    "parentId": 26
  }, {
    "id": 321,
    "label": "file",
    "parentId": 322
  }, {
    "id": 320,
    "label": "downloaded",
    "parentId": 321
  }, {
    "id": 323,
    "label": "KotlinJvmAssociatesBasicVisibilityTest",
    "parentId": 86
  }, {
    "id": 324,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.runfiles_manifest",
    "parentId": 86
  }, {
    "id": 326,
    "label": "KotlinJvmAssociatesBasicVisibilityTest.runfiles",
    "parentId": 86
  }, {
    "id": 325,
    "label": "MANIFEST",
    "parentId": 326
  }, {
    "id": 327,
    "label": "test_associates_library.jar",
    "parentId": 125
  }, {
    "id": 338,
    "label": "kotlin_rules_maven",
    "parentId": 26
  }, {
    "id": 337,
    "label": "v1",
    "parentId": 338
  }, {
    "id": 336,
    "label": "https",
    "parentId": 337
  }, {
    "id": 335,
    "label": "repo1.maven.org",
    "parentId": 336
  }, {
    "id": 334,
    "label": "maven2",
    "parentId": 335
  }, {
    "id": 333,
    "label": "com",
    "parentId": 334
  }, {
    "id": 332,
    "label": "google",
    "parentId": 333
  }, {
    "id": 331,
    "label": "guava",
    "parentId": 332
  }, {
    "id": 330,
    "label": "guava",
    "parentId": 331
  }, {
    "id": 329,
    "label": "31.0.1-jre",
    "parentId": 330
  }, {
    "id": 328,
    "label": "guava-31.0.1-jre.jar",
    "parentId": 329
  }, {
    "id": 348,
    "label": "maven-central.storage.googleapis.com",
    "parentId": 336
  }, {
    "id": 347,
    "label": "repos",
    "parentId": 348
  }, {
    "id": 346,
    "label": "central",
    "parentId": 347
  }, {
    "id": 345,
    "label": "data",
    "parentId": 346
  }, {
    "id": 344,
    "label": "com",
    "parentId": 345
  }, {
    "id": 343,
    "label": "google",
    "parentId": 344
  }, {
    "id": 342,
    "label": "guava",
    "parentId": 343
  }, {
    "id": 341,
    "label": "listenablefuture",
    "parentId": 342
  }, {
    "id": 340,
    "label": "9999.0-empty-to-avoid-conflict-with-guava",
    "parentId": 341
  }, {
    "id": 339,
    "label": "listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar",
    "parentId": 340
  }, {
    "id": 352,
    "label": "j2objc",
    "parentId": 343
  }, {
    "id": 351,
    "label": "j2objc-annotations",
    "parentId": 352
  }, {
    "id": 350,
    "label": "1.3",
    "parentId": 351
  }, {
    "id": 349,
    "label": "j2objc-annotations-1.3.jar",
    "parentId": 350
  }, {
    "id": 357,
    "label": "code",
    "parentId": 343
  }, {
    "id": 356,
    "label": "findbugs",
    "parentId": 357
  }, {
    "id": 355,
    "label": "jsr305",
    "parentId": 356
  }, {
    "id": 354,
    "label": "3.0.2",
    "parentId": 355
  }, {
    "id": 353,
    "label": "jsr305-3.0.2.jar",
    "parentId": 354
  }, {
    "id": 361,
    "label": "errorprone",
    "parentId": 332
  }, {
    "id": 360,
    "label": "error_prone_annotations",
    "parentId": 361
  }, {
    "id": 359,
    "label": "2.7.1",
    "parentId": 360
  }, {
    "id": 358,
    "label": "error_prone_annotations-2.7.1.jar",
    "parentId": 359
  }, {
    "id": 366,
    "label": "org",
    "parentId": 334
  }, {
    "id": 365,
    "label": "checkerframework",
    "parentId": 366
  }, {
    "id": 364,
    "label": "checker-qual",
    "parentId": 365
  }, {
    "id": 363,
    "label": "3.12.0",
    "parentId": 364
  }, {
    "id": 362,
    "label": "checker-qual-3.12.0.jar",
    "parentId": 363
  }, {
    "id": 369,
    "label": "failureaccess",
    "parentId": 342
  }, {
    "id": 368,
    "label": "1.0.1",
    "parentId": 369
  }, {
    "id": 367,
    "label": "failureaccess-1.0.1.jar",
    "parentId": 368
  }, {
    "id": 373,
    "label": "junit",
    "parentId": 345
  }, {
    "id": 372,
    "label": "junit",
    "parentId": 373
  }, {
    "id": 371,
    "label": "4.13-beta-3",
    "parentId": 372
  }, {
    "id": 370,
    "label": "junit-4.13-beta-3.jar",
    "parentId": 371
  }, {
    "id": 378,
    "label": "org",
    "parentId": 345
  }, {
    "id": 377,
    "label": "hamcrest",
    "parentId": 378
  }, {
    "id": 376,
    "label": "hamcrest-core",
    "parentId": 377
  }, {
    "id": 375,
    "label": "1.3",
    "parentId": 376
  }, {
    "id": 374,
    "label": "hamcrest-core-1.3.jar",
    "parentId": 375
  }, {
    "id": 382,
    "label": "truth",
    "parentId": 343
  }, {
    "id": 381,
    "label": "truth",
    "parentId": 382
  }, {
    "id": 380,
    "label": "0.45",
    "parentId": 381
  }, {
    "id": 379,
    "label": "truth-0.45.jar",
    "parentId": 380
  }, {
    "id": 387,
    "label": "googlecode",
    "parentId": 344
  }, {
    "id": 386,
    "label": "java-diff-utils",
    "parentId": 387
  }, {
    "id": 385,
    "label": "diffutils",
    "parentId": 386
  }, {
    "id": 384,
    "label": "1.3.0",
    "parentId": 385
  }, {
    "id": 383,
    "label": "diffutils-1.3.0.jar",
    "parentId": 384
  }, {
    "id": 392,
    "label": "auto",
    "parentId": 332
  }, {
    "id": 391,
    "label": "value",
    "parentId": 392
  }, {
    "id": 390,
    "label": "auto-value-annotations",
    "parentId": 391
  }, {
    "id": 389,
    "label": "1.10.1",
    "parentId": 390
  }, {
    "id": 388,
    "label": "auto-value-annotations-1.10.1.jar",
    "parentId": 389
  }, {
    "id": 396,
    "label": "checkerframework",
    "parentId": 378
  }, {
    "id": 395,
    "label": "checker-compat-qual",
    "parentId": 396
  }, {
    "id": 394,
    "label": "2.5.5",
    "parentId": 395
  }, {
    "id": 393,
    "label": "checker-compat-qual-2.5.5.jar",
    "parentId": 394
  }, {
    "id": 397,
    "label": "assertion_test_case.jar",
    "parentId": 86
  }, {
    "id": 400,
    "label": "remote_java_tools",
    "parentId": 26
  }, {
    "id": 399,
    "label": "java_tools",
    "parentId": 400
  }, {
    "id": 398,
    "label": "Runner_deploy.jar",
    "parentId": 399
  }, {
    "id": 403,
    "label": "local_jdk",
    "parentId": 26
  }, {
    "id": 402,
    "label": "bin",
    "parentId": 403
  }, {
    "id": 401,
    "label": "jar",
    "parentId": 402
  }, {
    "id": 404,
    "label": "jarsigner",
    "parentId": 402
  }, {
    "id": 405,
    "label": "java",
    "parentId": 402
  }, {
    "id": 406,
    "label": "javac",
    "parentId": 402
  }, {
    "id": 407,
    "label": "javadoc",
    "parentId": 402
  }, {
    "id": 408,
    "label": "javap",
    "parentId": 402
  }, {
    "id": 409,
    "label": "jcmd",
    "parentId": 402
  }, {
    "id": 410,
    "label": "jconsole",
    "parentId": 402
  }, {
    "id": 411,
    "label": "jdb",
    "parentId": 402
  }, {
    "id": 412,
    "label": "jdeprscan",
    "parentId": 402
  }, {
    "id": 413,
    "label": "jdeps",
    "parentId": 402
  }, {
    "id": 414,
    "label": "jfr",
    "parentId": 402
  }, {
    "id": 415,
    "label": "jhsdb",
    "parentId": 402
  }, {
    "id": 416,
    "label": "jimage",
    "parentId": 402
  }, {
    "id": 417,
    "label": "jinfo",
    "parentId": 402
  }, {
    "id": 418,
    "label": "jlink",
    "parentId": 402
  }, {
    "id": 419,
    "label": "jmap",
    "parentId": 402
  }, {
    "id": 420,
    "label": "jmod",
    "parentId": 402
  }, {
    "id": 421,
    "label": "jpackage",
    "parentId": 402
  }, {
    "id": 422,
    "label": "jps",
    "parentId": 402
  }, {
    "id": 423,
    "label": "jrunscript",
    "parentId": 402
  }, {
    "id": 424,
    "label": "jshell",
    "parentId": 402
  }, {
    "id": 425,
    "label": "jstack",
    "parentId": 402
  }, {
    "id": 426,
    "label": "jstat",
    "parentId": 402
  }, {
    "id": 427,
    "label": "jstatd",
    "parentId": 402
  }, {
    "id": 428,
    "label": "keytool",
    "parentId": 402
  }, {
    "id": 429,
    "label": "rmiregistry",
    "parentId": 402
  }, {
    "id": 430,
    "label": "serialver",
    "parentId": 402
  }, {
    "id": 432,
    "label": "conf",
    "parentId": 403
  }, {
    "id": 431,
    "label": "accessibility.properties",
    "parentId": 432
  }, {
    "id": 433,
    "label": "logging.properties",
    "parentId": 432
  }, {
    "id": 435,
    "label": "management",
    "parentId": 432
  }, {
    "id": 434,
    "label": "jmxremote.access",
    "parentId": 435
  }, {
    "id": 436,
    "label": "management.properties",
    "parentId": 435
  }, {
    "id": 437,
    "label": "net.properties",
    "parentId": 432
  }, {
    "id": 439,
    "label": "security",
    "parentId": 432
  }, {
    "id": 438,
    "label": "java.policy",
    "parentId": 439
  }, {
    "id": 440,
    "label": "java.security",
    "parentId": 439
  }, {
    "id": 441,
    "label": "nss.cfg",
    "parentId": 439
  }, {
    "id": 443,
    "label": "policy",
    "parentId": 439
  }, {
    "id": 442,
    "label": "README.txt",
    "parentId": 443
  }, {
    "id": 445,
    "label": "limited",
    "parentId": 443
  }, {
    "id": 444,
    "label": "default_US_export.policy",
    "parentId": 445
  }, {
    "id": 446,
    "label": "default_local.policy",
    "parentId": 445
  }, {
    "id": 447,
    "label": "exempt_local.policy",
    "parentId": 445
  }, {
    "id": 449,
    "label": "unlimited",
    "parentId": 443
  }, {
    "id": 448,
    "label": "default_US_export.policy",
    "parentId": 449
  }, {
    "id": 450,
    "label": "default_local.policy",
    "parentId": 449
  }, {
    "id": 451,
    "label": "sound.properties",
    "parentId": 432
  }, {
    "id": 452,
    "label": "swing.properties",
    "parentId": 432
  }, {
    "id": 454,
    "label": "include",
    "parentId": 403
  }, {
    "id": 453,
    "label": "classfile_constants.h",
    "parentId": 454
  }, {
    "id": 455,
    "label": "jawt.h",
    "parentId": 454
  }, {
    "id": 456,
    "label": "jdwpTransport.h",
    "parentId": 454
  }, {
    "id": 457,
    "label": "jni.h",
    "parentId": 454
  }, {
    "id": 458,
    "label": "jvmti.h",
    "parentId": 454
  }, {
    "id": 459,
    "label": "jvmticmlr.h",
    "parentId": 454
  }, {
    "id": 461,
    "label": "linux",
    "parentId": 454
  }, {
    "id": 460,
    "label": "jawt_md.h",
    "parentId": 461
  }, {
    "id": 462,
    "label": "jni_md.h",
    "parentId": 461
  }, {
    "id": 464,
    "label": "lib",
    "parentId": 403
  }, {
    "id": 463,
    "label": "classlist",
    "parentId": 464
  }, {
    "id": 465,
    "label": "ct.sym",
    "parentId": 464
  }, {
    "id": 466,
    "label": "jar.binfmt",
    "parentId": 464
  }, {
    "id": 467,
    "label": "jexec",
    "parentId": 464
  }, {
    "id": 469,
    "label": "jfr",
    "parentId": 464
  }, {
    "id": 468,
    "label": "default.jfc",
    "parentId": 469
  }, {
    "id": 470,
    "label": "profile.jfc",
    "parentId": 469
  }, {
    "id": 471,
    "label": "jrt-fs.jar",
    "parentId": 464
  }, {
    "id": 472,
    "label": "jspawnhelper",
    "parentId": 464
  }, {
    "id": 473,
    "label": "jvm.cfg",
    "parentId": 464
  }, {
    "id": 474,
    "label": "jvm.cfg-default",
    "parentId": 464
  }, {
    "id": 475,
    "label": "libatk-wrapper.so",
    "parentId": 464
  }, {
    "id": 476,
    "label": "libattach.so",
    "parentId": 464
  }, {
    "id": 477,
    "label": "libawt.so",
    "parentId": 464
  }, {
    "id": 478,
    "label": "libawt_headless.so",
    "parentId": 464
  }, {
    "id": 479,
    "label": "libawt_xawt.so",
    "parentId": 464
  }, {
    "id": 480,
    "label": "libdt_socket.so",
    "parentId": 464
  }, {
    "id": 481,
    "label": "libextnet.so",
    "parentId": 464
  }, {
    "id": 482,
    "label": "libfontmanager.so",
    "parentId": 464
  }, {
    "id": 483,
    "label": "libinstrument.so",
    "parentId": 464
  }, {
    "id": 484,
    "label": "libj2gss.so",
    "parentId": 464
  }, {
    "id": 485,
    "label": "libj2pcsc.so",
    "parentId": 464
  }, {
    "id": 486,
    "label": "libj2pkcs11.so",
    "parentId": 464
  }, {
    "id": 487,
    "label": "libjaas.so",
    "parentId": 464
  }, {
    "id": 488,
    "label": "libjava.so",
    "parentId": 464
  }, {
    "id": 489,
    "label": "libjavajpeg.so",
    "parentId": 464
  }, {
    "id": 490,
    "label": "libjawt.so",
    "parentId": 464
  }, {
    "id": 491,
    "label": "libjdwp.so",
    "parentId": 464
  }, {
    "id": 492,
    "label": "libjimage.so",
    "parentId": 464
  }, {
    "id": 493,
    "label": "libjli.so",
    "parentId": 464
  }, {
    "id": 494,
    "label": "libjsig.so",
    "parentId": 464
  }, {
    "id": 495,
    "label": "libjsound.so",
    "parentId": 464
  }, {
    "id": 496,
    "label": "libjsvml.so",
    "parentId": 464
  }, {
    "id": 497,
    "label": "liblcms.so",
    "parentId": 464
  }, {
    "id": 498,
    "label": "libmanagement.so",
    "parentId": 464
  }, {
    "id": 499,
    "label": "libmanagement_agent.so",
    "parentId": 464
  }, {
    "id": 500,
    "label": "libmanagement_ext.so",
    "parentId": 464
  }, {
    "id": 501,
    "label": "libmlib_image.so",
    "parentId": 464
  }, {
    "id": 502,
    "label": "libnet.so",
    "parentId": 464
  }, {
    "id": 503,
    "label": "libnio.so",
    "parentId": 464
  }, {
    "id": 504,
    "label": "libprefs.so",
    "parentId": 464
  }, {
    "id": 505,
    "label": "librmi.so",
    "parentId": 464
  }, {
    "id": 506,
    "label": "libsaproc.so",
    "parentId": 464
  }, {
    "id": 507,
    "label": "libsctp.so",
    "parentId": 464
  }, {
    "id": 508,
    "label": "libsplashscreen.so",
    "parentId": 464
  }, {
    "id": 509,
    "label": "libsyslookup.so",
    "parentId": 464
  }, {
    "id": 510,
    "label": "libverify.so",
    "parentId": 464
  }, {
    "id": 511,
    "label": "libzip.so",
    "parentId": 464
  }, {
    "id": 512,
    "label": "modules",
    "parentId": 464
  }, {
    "id": 513,
    "label": "psfont.properties.ja",
    "parentId": 464
  }, {
    "id": 514,
    "label": "psfontj2d.properties",
    "parentId": 464
  }, {
    "id": 516,
    "label": "security",
    "parentId": 464
  }, {
    "id": 515,
    "label": "blocked.certs",
    "parentId": 516
  }, {
    "id": 517,
    "label": "cacerts",
    "parentId": 516
  }, {
    "id": 518,
    "label": "default.policy",
    "parentId": 516
  }, {
    "id": 519,
    "label": "public_suffix_list.dat",
    "parentId": 516
  }, {
    "id": 521,
    "label": "server",
    "parentId": 464
  }, {
    "id": 520,
    "label": "classes.jsa",
    "parentId": 521
  }, {
    "id": 522,
    "label": "classes_nocoops.jsa",
    "parentId": 521
  }, {
    "id": 523,
    "label": "libjsig.so",
    "parentId": 521
  }, {
    "id": 524,
    "label": "libjvm.so",
    "parentId": 521
  }, {
    "id": 525,
    "label": "tzdb.dat",
    "parentId": 464
  }, {
    "id": 528,
    "label": "internal",
    "parentId": 5
  }, {
    "id": 527,
    "label": "_middlemen",
    "parentId": 528
  }, {
    "id": 526,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_SKotlinJvmAssociatesBasicVisibilityTest-runfiles",
    "parentId": 527
  }, {
    "id": 532,
    "label": "bazel_tools",
    "parentId": 26
  }, {
    "id": 531,
    "label": "tools",
    "parentId": 532
  }, {
    "id": 530,
    "label": "test",
    "parentId": 531
  }, {
    "id": 529,
    "label": "test-setup.sh",
    "parentId": 530
  }, {
    "id": 533,
    "label": "generate-xml.sh",
    "parentId": 530
  }, {
    "id": 542,
    "label": "testlogs",
    "parentId": 5
  }, {
    "id": 541,
    "label": "src",
    "parentId": 542
  }, {
    "id": 540,
    "label": "test",
    "parentId": 541
  }, {
    "id": 539,
    "label": "kotlin",
    "parentId": 540
  }, {
    "id": 538,
    "label": "io",
    "parentId": 539
  }, {
    "id": 537,
    "label": "bazel",
    "parentId": 538
  }, {
    "id": 536,
    "label": "kotlin",
    "parentId": 537
  }, {
    "id": 535,
    "label": "KotlinJvmAssociatesBasicVisibilityTest",
    "parentId": 536
  }, {
    "id": 534,
    "label": "test.log",
    "parentId": 535
  }, {
    "id": 543,
    "label": "test.cache_status",
    "parentId": 535
  }, {
    "id": 544,
    "label": "KotlinJvmKaptAssertionTest.kt",
    "parentId": 173
  }, {
    "id": 545,
    "label": "KotlinJvmKaptAssertionTest-kt.jar",
    "parentId": 86
  }, {
    "id": 546,
    "label": "KotlinJvmKaptAssertionTest-kt.jdeps",
    "parentId": 86
  }, {
    "id": 547,
    "label": "KotlinJvmKaptAssertionTest.abi.jar",
    "parentId": 86
  }, {
    "id": 548,
    "label": "KotlinJvmKaptAssertionTest.jdeps",
    "parentId": 86
  }, {
    "id": 549,
    "label": "KotlinJvmKaptAssertionTest.jar",
    "parentId": 86
  }, {
    "id": 550,
    "label": "KotlinJvmKaptAssertionTest-sources.jar",
    "parentId": 86
  }, {
    "id": 551,
    "label": "KotlinJvmKaptAssertionTest",
    "parentId": 86
  }, {
    "id": 552,
    "label": "KotlinJvmKaptAssertionTest.runfiles_manifest",
    "parentId": 86
  }, {
    "id": 554,
    "label": "KotlinJvmKaptAssertionTest.runfiles",
    "parentId": 86
  }, {
    "id": 553,
    "label": "MANIFEST",
    "parentId": 554
  }, {
    "id": 556,
    "label": "kapt",
    "parentId": 126
  }, {
    "id": 555,
    "label": "ap_kotlin_mixed.jar",
    "parentId": 556
  }, {
    "id": 557,
    "label": "ap_kotlin_mixed.jdeps",
    "parentId": 556
  }, {
    "id": 558,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps.jar",
    "parentId": 556
  }, {
    "id": 559,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps.jdeps",
    "parentId": 556
  }, {
    "id": 560,
    "label": "ap_kotlin_mixed_multiple_plugins.jar",
    "parentId": 556
  }, {
    "id": 561,
    "label": "ap_kotlin_mixed_multiple_plugins.jdeps",
    "parentId": 556
  }, {
    "id": 562,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class.jar",
    "parentId": 556
  }, {
    "id": 563,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class.jdeps",
    "parentId": 556
  }, {
    "id": 564,
    "label": "ap_kotlin_mixed_no_plugin.jar",
    "parentId": 556
  }, {
    "id": 565,
    "label": "ap_kotlin_mixed_no_plugin.jdeps",
    "parentId": 556
  }, {
    "id": 566,
    "label": "ap_kotlin_resources.jar",
    "parentId": 556
  }, {
    "id": 567,
    "label": "ap_kotlin_resources.jdeps",
    "parentId": 556
  }, {
    "id": 568,
    "label": "ap_kotlin_resources_mixed.jar",
    "parentId": 556
  }, {
    "id": 569,
    "label": "ap_kotlin_resources_mixed.jdeps",
    "parentId": 556
  }, {
    "id": 570,
    "label": "ap_kotlin.jar",
    "parentId": 556
  }, {
    "id": 571,
    "label": "ap_kotlin_mixed_multiple_plugins-sources.jar",
    "parentId": 556
  }, {
    "id": 572,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_SKotlinJvmKaptAssertionTest-runfiles",
    "parentId": 527
  }, {
    "id": 574,
    "label": "KotlinJvmKaptAssertionTest",
    "parentId": 536
  }, {
    "id": 573,
    "label": "test.log",
    "parentId": 574
  }, {
    "id": 575,
    "label": "test.cache_status",
    "parentId": 574
  }, {
    "id": 578,
    "label": "builder",
    "parentId": 77
  }, {
    "id": 577,
    "label": "cmd",
    "parentId": 578
  }, {
    "id": 576,
    "label": "merge_jdeps_deploy.jar",
    "parentId": 577
  }, {
    "id": 579,
    "label": "build_deploy.jar",
    "parentId": 577
  }, {
    "id": 582,
    "label": "main",
    "parentId": 178
  }, {
    "id": 581,
    "label": "starlark",
    "parentId": 582
  }, {
    "id": 580,
    "label": "BUILD.release.bazel",
    "parentId": 581
  }, {
    "id": 583,
    "label": "pkg.manifest",
    "parentId": 63
  }, {
    "id": 585,
    "label": "internal",
    "parentId": 50
  }, {
    "id": 584,
    "label": "compiler_plugins.bzl",
    "parentId": 585
  }, {
    "id": 586,
    "label": "defs.bzl",
    "parentId": 585
  }, {
    "id": 587,
    "label": "opts.bzl",
    "parentId": 585
  }, {
    "id": 588,
    "label": "toolchains.bzl",
    "parentId": 585
  }, {
    "id": 590,
    "label": "pkg_BUILD.bazel",
    "parentId": 63
  }, {
    "id": 589,
    "label": "BUILD.bazel",
    "parentId": 590
  }, {
    "id": 592,
    "label": "js",
    "parentId": 63
  }, {
    "id": 591,
    "label": "pkg.tgz",
    "parentId": 592
  }, {
    "id": 594,
    "label": "jvm",
    "parentId": 63
  }, {
    "id": 593,
    "label": "pkg.tgz",
    "parentId": 594
  }, {
    "id": 596,
    "label": "lint",
    "parentId": 63
  }, {
    "id": 595,
    "label": "pkg.tgz",
    "parentId": 596
  }, {
    "id": 598,
    "label": "utils",
    "parentId": 63
  }, {
    "id": 597,
    "label": "pkg.tgz",
    "parentId": 598
  }, {
    "id": 599,
    "label": "KotlinNormalizationAssertionTest.kt",
    "parentId": 173
  }, {
    "id": 600,
    "label": "KotlinNormalizationAssertionTest-kt.jar",
    "parentId": 86
  }, {
    "id": 601,
    "label": "KotlinNormalizationAssertionTest-kt.jdeps",
    "parentId": 86
  }, {
    "id": 602,
    "label": "KotlinNormalizationAssertionTest.abi.jar",
    "parentId": 86
  }, {
    "id": 603,
    "label": "KotlinNormalizationAssertionTest.jdeps",
    "parentId": 86
  }, {
    "id": 604,
    "label": "KotlinNormalizationAssertionTest.jar",
    "parentId": 86
  }, {
    "id": 605,
    "label": "KotlinNormalizationAssertionTest-sources.jar",
    "parentId": 86
  }, {
    "id": 606,
    "label": "KotlinNormalizationAssertionTest",
    "parentId": 86
  }, {
    "id": 607,
    "label": "KotlinNormalizationAssertionTest.runfiles_manifest",
    "parentId": 86
  }, {
    "id": 609,
    "label": "KotlinNormalizationAssertionTest.runfiles",
    "parentId": 86
  }, {
    "id": 608,
    "label": "MANIFEST",
    "parentId": 609
  }, {
    "id": 610,
    "label": "propagation_ct_consumer.jar",
    "parentId": 125
  }, {
    "id": 611,
    "label": "propagation_ct_consumer",
    "parentId": 125
  }, {
    "id": 612,
    "label": "propagation_rt_via_export_consumer.jar",
    "parentId": 125
  }, {
    "id": 613,
    "label": "propagation_rt_via_export_consumer",
    "parentId": 125
  }, {
    "id": 614,
    "label": "propagation_rt_via_runtime_deps_consumer.jar",
    "parentId": 125
  }, {
    "id": 615,
    "label": "propagation_rt_via_runtime_deps_consumer",
    "parentId": 125
  }, {
    "id": 616,
    "label": "test_module_name_attr_lib.jar",
    "parentId": 125
  }, {
    "id": 617,
    "label": "test_module_name_attr_lib.jdeps",
    "parentId": 125
  }, {
    "id": 618,
    "label": "test_module_name_bin.jar",
    "parentId": 125
  }, {
    "id": 619,
    "label": "test_module_name_bin.jdeps",
    "parentId": 125
  }, {
    "id": 620,
    "label": "test_module_name_lib.jar",
    "parentId": 125
  }, {
    "id": 621,
    "label": "test_module_name_lib.jdeps",
    "parentId": 125
  }, {
    "id": 622,
    "label": "conventional_strip_resources.jar",
    "parentId": 125
  }, {
    "id": 623,
    "label": "test_embed_resources.jar",
    "parentId": 125
  }, {
    "id": 624,
    "label": "test_embed_resources_strip_prefix.jar",
    "parentId": 125
  }, {
    "id": 625,
    "label": "test_merge_resourcesjar.jar",
    "parentId": 125
  }, {
    "id": 626,
    "label": "test_module_name_lib-sources.jar",
    "parentId": 125
  }, {
    "id": 627,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_SKotlinNormalizationAssertionTest-runfiles",
    "parentId": 527
  }, {
    "id": 629,
    "label": "KotlinNormalizationAssertionTest",
    "parentId": 536
  }, {
    "id": 628,
    "label": "test.log",
    "parentId": 629
  }, {
    "id": 630,
    "label": "test.cache_status",
    "parentId": 629
  }, {
    "id": 631,
    "label": "pkg.manifest",
    "parentId": 76
  }, {
    "id": 633,
    "label": "pkg_compiler.jar",
    "parentId": 76
  }, {
    "id": 632,
    "label": "compiler.jar",
    "parentId": 633
  }, {
    "id": 635,
    "label": "pkg_BUILD.bazel",
    "parentId": 76
  }, {
    "id": 634,
    "label": "BUILD.bazel",
    "parentId": 635
  }, {
    "id": 636,
    "label": "jarjar_runner_deploy.jar",
    "parentId": 20
  }, {
    "id": 638,
    "label": "starlark",
    "parentId": 90
  }, {
    "id": 637,
    "label": "convert_tests_test_0.sh",
    "parentId": 638
  }, {
    "id": 639,
    "label": "convert_tests_test_0.sh.runfiles_manifest",
    "parentId": 638
  }, {
    "id": 641,
    "label": "convert_tests_test_0.sh.runfiles",
    "parentId": 638
  }, {
    "id": 640,
    "label": "MANIFEST",
    "parentId": 641
  }, {
    "id": 642,
    "label": "src_Stest_Sstarlark_Sconvert_Utests_Utest_U0.sh-runfiles",
    "parentId": 527
  }, {
    "id": 645,
    "label": "starlark",
    "parentId": 540
  }, {
    "id": 644,
    "label": "convert_tests_test_0",
    "parentId": 645
  }, {
    "id": 643,
    "label": "test.log",
    "parentId": 644
  }, {
    "id": 646,
    "label": "test.cache_status",
    "parentId": 644
  }, {
    "id": 647,
    "label": "convert_tests_test_1.sh",
    "parentId": 638
  }, {
    "id": 648,
    "label": "convert_tests_test_1.sh.runfiles_manifest",
    "parentId": 638
  }, {
    "id": 650,
    "label": "convert_tests_test_1.sh.runfiles",
    "parentId": 638
  }, {
    "id": 649,
    "label": "MANIFEST",
    "parentId": 650
  }, {
    "id": 651,
    "label": "src_Stest_Sstarlark_Sconvert_Utests_Utest_U1.sh-runfiles",
    "parentId": 527
  }, {
    "id": 653,
    "label": "convert_tests_test_1",
    "parentId": 645
  }, {
    "id": 652,
    "label": "test.log",
    "parentId": 653
  }, {
    "id": 654,
    "label": "test.cache_status",
    "parentId": 653
  }, {
    "id": 655,
    "label": "pkg.manifest",
    "parentId": 65
  }, {
    "id": 657,
    "label": "pkg_BUILD.bazel",
    "parentId": 65
  }, {
    "id": 656,
    "label": "BUILD.bazel",
    "parentId": 657
  }, {
    "id": 658,
    "label": "KotlinJvmBasicAssertionTest.kt",
    "parentId": 173
  }, {
    "id": 659,
    "label": "KotlinJvmBasicAssertionTest-kt.jar",
    "parentId": 86
  }, {
    "id": 660,
    "label": "KotlinJvmBasicAssertionTest-kt.jdeps",
    "parentId": 86
  }, {
    "id": 661,
    "label": "KotlinJvmBasicAssertionTest.abi.jar",
    "parentId": 86
  }, {
    "id": 662,
    "label": "KotlinJvmBasicAssertionTest.jdeps",
    "parentId": 86
  }, {
    "id": 663,
    "label": "KotlinJvmBasicAssertionTest.jar",
    "parentId": 86
  }, {
    "id": 664,
    "label": "KotlinJvmBasicAssertionTest-sources.jar",
    "parentId": 86
  }, {
    "id": 665,
    "label": "KotlinJvmBasicAssertionTest",
    "parentId": 86
  }, {
    "id": 666,
    "label": "KotlinJvmBasicAssertionTest.runfiles_manifest",
    "parentId": 86
  }, {
    "id": 668,
    "label": "KotlinJvmBasicAssertionTest.runfiles",
    "parentId": 86
  }, {
    "id": 667,
    "label": "MANIFEST",
    "parentId": 668
  }, {
    "id": 669,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_SKotlinJvmBasicAssertionTest-runfiles",
    "parentId": 527
  }, {
    "id": 671,
    "label": "KotlinJvmBasicAssertionTest",
    "parentId": 536
  }, {
    "id": 670,
    "label": "test.log",
    "parentId": 671
  }, {
    "id": 672,
    "label": "test.cache_status",
    "parentId": 671
  }, {
    "id": 673,
    "label": "pkg.manifest",
    "parentId": 84
  }, {
    "id": 675,
    "label": "core",
    "parentId": 581
  }, {
    "id": 674,
    "label": "toolchains.bzl",
    "parentId": 675
  }, {
    "id": 677,
    "label": "pkg_BUILD.bazel",
    "parentId": 84
  }, {
    "id": 676,
    "label": "BUILD.bazel",
    "parentId": 677
  }, {
    "id": 679,
    "label": "options",
    "parentId": 84
  }, {
    "id": 678,
    "label": "pkg.tgz",
    "parentId": 679
  }, {
    "id": 681,
    "label": "repositories",
    "parentId": 84
  }, {
    "id": 680,
    "label": "pkg.tgz",
    "parentId": 681
  }, {
    "id": 682,
    "label": "BUILD.release.bazel",
    "parentId": 42
  }, {
    "id": 683,
    "label": "BUILD.release.bazel",
    "parentId": 50
  }, {
    "id": 685,
    "label": "kotlin",
    "parentId": 582
  }, {
    "id": 684,
    "label": "BUILD.release.bazel",
    "parentId": 685
  }, {
    "id": 686,
    "label": "KotlinJvm13Test.kt",
    "parentId": 173
  }, {
    "id": 687,
    "label": "KotlinJvm13Test-kt.jar",
    "parentId": 86
  }, {
    "id": 688,
    "label": "KotlinJvm13Test-kt.jdeps",
    "parentId": 86
  }, {
    "id": 689,
    "label": "KotlinJvm13Test.abi.jar",
    "parentId": 86
  }, {
    "id": 690,
    "label": "KotlinJvm13Test.jdeps",
    "parentId": 86
  }, {
    "id": 691,
    "label": "KotlinJvm13Test.jar",
    "parentId": 86
  }, {
    "id": 692,
    "label": "KotlinJvm13Test-sources.jar",
    "parentId": 86
  }, {
    "id": 693,
    "label": "KotlinJvm13Test",
    "parentId": 86
  }, {
    "id": 694,
    "label": "KotlinJvm13Test.runfiles_manifest",
    "parentId": 86
  }, {
    "id": 696,
    "label": "KotlinJvm13Test.runfiles",
    "parentId": 86
  }, {
    "id": 695,
    "label": "MANIFEST",
    "parentId": 696
  }, {
    "id": 697,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_SKotlinJvm13Test-runfiles",
    "parentId": 527
  }, {
    "id": 699,
    "label": "KotlinJvm13Test",
    "parentId": 536
  }, {
    "id": 698,
    "label": "test.log",
    "parentId": 699
  }, {
    "id": 700,
    "label": "test.cache_status",
    "parentId": 699
  }, {
    "id": 705,
    "label": "io",
    "parentId": 685
  }, {
    "id": 704,
    "label": "bazel",
    "parentId": 705
  }, {
    "id": 703,
    "label": "kotlin",
    "parentId": 704
  }, {
    "id": 702,
    "label": "compiler",
    "parentId": 703
  }, {
    "id": 701,
    "label": "BUILD.release.bazel",
    "parentId": 702
  }, {
    "id": 706,
    "label": "pkg.manifest",
    "parentId": 681
  }, {
    "id": 708,
    "label": "repositories",
    "parentId": 675
  }, {
    "id": 707,
    "label": "BUILD.com_github_google_ksp.bazel",
    "parentId": 708
  }, {
    "id": 709,
    "label": "ksp.bzl",
    "parentId": 708
  }, {
    "id": 710,
    "label": "versions.bzl",
    "parentId": 708
  }, {
    "id": 712,
    "label": "pkg_initialize.bzl",
    "parentId": 681
  }, {
    "id": 711,
    "label": "initialize.bzl",
    "parentId": 712
  }, {
    "id": 714,
    "label": "pkg_BUILD.bazel",
    "parentId": 681
  }, {
    "id": 713,
    "label": "BUILD.bazel",
    "parentId": 714
  }, {
    "id": 716,
    "label": "kotlin",
    "parentId": 681
  }, {
    "id": 715,
    "label": "pkg.tgz",
    "parentId": 716
  }, {
    "id": 718,
    "label": "settings",
    "parentId": 50
  }, {
    "id": 717,
    "label": "BUILD.release.bazel",
    "parentId": 718
  }, {
    "id": 720,
    "label": "builder",
    "parentId": 86
  }, {
    "id": 719,
    "label": "libtest_lib-hjar.jar",
    "parentId": 720
  }, {
    "id": 721,
    "label": "libbuilder-hjar.jar",
    "parentId": 578
  }, {
    "id": 733,
    "label": "toolchain",
    "parentId": 578
  }, {
    "id": 732,
    "label": "_ijar",
    "parentId": 733
  }, {
    "id": 731,
    "label": "toolchain",
    "parentId": 732
  }, {
    "id": 730,
    "label": "src",
    "parentId": 731
  }, {
    "id": 729,
    "label": "main",
    "parentId": 730
  }, {
    "id": 728,
    "label": "kotlin",
    "parentId": 729
  }, {
    "id": 727,
    "label": "io",
    "parentId": 728
  }, {
    "id": 726,
    "label": "bazel",
    "parentId": 727
  }, {
    "id": 725,
    "label": "kotlin",
    "parentId": 726
  }, {
    "id": 724,
    "label": "builder",
    "parentId": 725
  }, {
    "id": 723,
    "label": "toolchain",
    "parentId": 724
  }, {
    "id": 722,
    "label": "toolchain-ijar.jar",
    "parentId": 723
  }, {
    "id": 745,
    "label": "utils",
    "parentId": 578
  }, {
    "id": 744,
    "label": "_ijar",
    "parentId": 745
  }, {
    "id": 743,
    "label": "utils",
    "parentId": 744
  }, {
    "id": 742,
    "label": "src",
    "parentId": 743
  }, {
    "id": 741,
    "label": "main",
    "parentId": 742
  }, {
    "id": 740,
    "label": "kotlin",
    "parentId": 741
  }, {
    "id": 739,
    "label": "io",
    "parentId": 740
  }, {
    "id": 738,
    "label": "bazel",
    "parentId": 739
  }, {
    "id": 737,
    "label": "kotlin",
    "parentId": 738
  }, {
    "id": 736,
    "label": "builder",
    "parentId": 737
  }, {
    "id": 735,
    "label": "utils",
    "parentId": 736
  }, {
    "id": 734,
    "label": "utils-ijar.jar",
    "parentId": 735
  }, {
    "id": 747,
    "label": "protobuf",
    "parentId": 15
  }, {
    "id": 746,
    "label": "libkotlin_model_proto-speed-hjar.jar",
    "parentId": 747
  }, {
    "id": 752,
    "label": "bazel_tools",
    "parentId": 105
  }, {
    "id": 751,
    "label": "src",
    "parentId": 752
  }, {
    "id": 750,
    "label": "main",
    "parentId": 751
  }, {
    "id": 749,
    "label": "protobuf",
    "parentId": 750
  }, {
    "id": 748,
    "label": "libdeps_proto-speed-hjar.jar",
    "parentId": 749
  }, {
    "id": 756,
    "label": "com_google_protobuf_protobuf_java",
    "parentId": 105
  }, {
    "id": 755,
    "label": "_ijar",
    "parentId": 756
  }, {
    "id": 754,
    "label": "com_google_protobuf_protobuf_java",
    "parentId": 755
  }, {
    "id": 753,
    "label": "protobuf-java-3.21.7-ijar.jar",
    "parentId": 754
  }, {
    "id": 757,
    "label": "libworker_protocol_proto-speed-hjar.jar",
    "parentId": 749
  }, {
    "id": 761,
    "label": "dagger",
    "parentId": 98
  }, {
    "id": 760,
    "label": "dagger",
    "parentId": 761
  }, {
    "id": 759,
    "label": "2.43.2",
    "parentId": 760
  }, {
    "id": 758,
    "label": "header_dagger-2.43.2.jar",
    "parentId": 759
  }, {
    "id": 766,
    "label": "javax",
    "parentId": 112
  }, {
    "id": 765,
    "label": "inject",
    "parentId": 766
  }, {
    "id": 764,
    "label": "javax.inject",
    "parentId": 765
  }, {
    "id": 763,
    "label": "1",
    "parentId": 764
  }, {
    "id": 762,
    "label": "header_javax.inject-1.jar",
    "parentId": 763
  }, {
    "id": 778,
    "label": "tasks",
    "parentId": 578
  }, {
    "id": 777,
    "label": "_ijar",
    "parentId": 778
  }, {
    "id": 776,
    "label": "tasks",
    "parentId": 777
  }, {
    "id": 775,
    "label": "src",
    "parentId": 776
  }, {
    "id": 774,
    "label": "main",
    "parentId": 775
  }, {
    "id": 773,
    "label": "kotlin",
    "parentId": 774
  }, {
    "id": 772,
    "label": "io",
    "parentId": 773
  }, {
    "id": 771,
    "label": "bazel",
    "parentId": 772
  }, {
    "id": 770,
    "label": "kotlin",
    "parentId": 771
  }, {
    "id": 769,
    "label": "builder",
    "parentId": 770
  }, {
    "id": 768,
    "label": "tasks",
    "parentId": 769
  }, {
    "id": 767,
    "label": "tasks-ijar.jar",
    "parentId": 768
  }, {
    "id": 788,
    "label": "worker",
    "parentId": 78
  }, {
    "id": 787,
    "label": "_ijar",
    "parentId": 788
  }, {
    "id": 786,
    "label": "worker",
    "parentId": 787
  }, {
    "id": 785,
    "label": "src",
    "parentId": 786
  }, {
    "id": 784,
    "label": "main",
    "parentId": 785
  }, {
    "id": 783,
    "label": "kotlin",
    "parentId": 784
  }, {
    "id": 782,
    "label": "io",
    "parentId": 783
  }, {
    "id": 781,
    "label": "bazel",
    "parentId": 782
  }, {
    "id": 780,
    "label": "worker",
    "parentId": 781
  }, {
    "id": 779,
    "label": "worker-ijar.jar",
    "parentId": 780
  }, {
    "id": 792,
    "label": "annotation",
    "parentId": 766
  }, {
    "id": 791,
    "label": "javax.annotation-api",
    "parentId": 792
  }, {
    "id": 790,
    "label": "1.3.2",
    "parentId": 791
  }, {
    "id": 789,
    "label": "header_javax.annotation-api-1.3.2.jar",
    "parentId": 790
  }, {
    "id": 796,
    "label": "builder",
    "parentId": 173
  }, {
    "id": 795,
    "label": "tasks",
    "parentId": 796
  }, {
    "id": 794,
    "label": "jvm",
    "parentId": 795
  }, {
    "id": 793,
    "label": "KotlinBuilderJvmJdepsTest.kt",
    "parentId": 794
  }, {
    "id": 798,
    "label": "tasks",
    "parentId": 720
  }, {
    "id": 797,
    "label": "KotlinBuilderJvmJdepsTest-kt.jar",
    "parentId": 798
  }, {
    "id": 799,
    "label": "KotlinBuilderJvmJdepsTest-kt.jdeps",
    "parentId": 798
  }, {
    "id": 800,
    "label": "KotlinBuilderJvmJdepsTest.abi.jar",
    "parentId": 798
  }, {
    "id": 801,
    "label": "KotlinBuilderJvmJdepsTest.jdeps",
    "parentId": 798
  }, {
    "id": 802,
    "label": "KotlinBuilderJvmJdepsTest.jar",
    "parentId": 798
  }, {
    "id": 803,
    "label": "KotlinBuilderJvmJdepsTest-sources.jar",
    "parentId": 798
  }, {
    "id": 804,
    "label": "KotlinBuilderJvmJdepsTest",
    "parentId": 798
  }, {
    "id": 805,
    "label": "KotlinBuilderJvmJdepsTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 807,
    "label": "KotlinBuilderJvmJdepsTest.runfiles",
    "parentId": 798
  }, {
    "id": 806,
    "label": "MANIFEST",
    "parentId": 807
  }, {
    "id": 809,
    "label": "com_github_google_ksp",
    "parentId": 26
  }, {
    "id": 808,
    "label": "symbol-processing-api.jar",
    "parentId": 809
  }, {
    "id": 810,
    "label": "symbol-processing-cmdline.jar",
    "parentId": 809
  }, {
    "id": 811,
    "label": "libdeps_proto-speed.jar",
    "parentId": 749
  }, {
    "id": 813,
    "label": "com_google_protobuf_protobuf_java",
    "parentId": 26
  }, {
    "id": 812,
    "label": "protobuf-java-3.21.7.jar",
    "parentId": 813
  }, {
    "id": 814,
    "label": "libkotlin_model_proto-speed.jar",
    "parentId": 747
  }, {
    "id": 815,
    "label": "libworker_protocol_proto-speed.jar",
    "parentId": 749
  }, {
    "id": 816,
    "label": "tasks.jar",
    "parentId": 778
  }, {
    "id": 817,
    "label": "toolchain.jar",
    "parentId": 733
  }, {
    "id": 818,
    "label": "utils.jar",
    "parentId": 745
  }, {
    "id": 819,
    "label": "worker.jar",
    "parentId": 788
  }, {
    "id": 820,
    "label": "libbuilder.jar",
    "parentId": 578
  }, {
    "id": 821,
    "label": "compiler.jar",
    "parentId": 76
  }, {
    "id": 822,
    "label": "libtest_lib.jar",
    "parentId": 720
  }, {
    "id": 823,
    "label": "JacocoCoverage_jarjar_deploy.jar",
    "parentId": 399
  }, {
    "id": 827,
    "label": "tools",
    "parentId": 752
  }, {
    "id": 826,
    "label": "java",
    "parentId": 827
  }, {
    "id": 825,
    "label": "runfiles",
    "parentId": 826
  }, {
    "id": 824,
    "label": "librunfiles.jar",
    "parentId": 825
  }, {
    "id": 828,
    "label": "libauto_bazel_repository.jar",
    "parentId": 825
  }, {
    "id": 832,
    "label": "protobuf",
    "parentId": 343
  }, {
    "id": 831,
    "label": "protobuf-java-util",
    "parentId": 832
  }, {
    "id": 830,
    "label": "3.6.0",
    "parentId": 831
  }, {
    "id": 829,
    "label": "protobuf-java-util-3.6.0.jar",
    "parentId": 830
  }, {
    "id": 836,
    "label": "gson",
    "parentId": 357
  }, {
    "id": 835,
    "label": "gson",
    "parentId": 836
  }, {
    "id": 834,
    "label": "2.7",
    "parentId": 835
  }, {
    "id": 833,
    "label": "gson-2.7.jar",
    "parentId": 834
  }, {
    "id": 839,
    "label": "protobuf-java",
    "parentId": 832
  }, {
    "id": 838,
    "label": "3.6.0",
    "parentId": 839
  }, {
    "id": 837,
    "label": "protobuf-java-3.6.0.jar",
    "parentId": 838
  }, {
    "id": 841,
    "label": "jars",
    "parentId": 745
  }, {
    "id": 840,
    "label": "jars.jar",
    "parentId": 841
  }, {
    "id": 844,
    "label": "plugin",
    "parentId": 77
  }, {
    "id": 843,
    "label": "jdeps",
    "parentId": 844
  }, {
    "id": 842,
    "label": "jdeps-gen-lib.jar",
    "parentId": 843
  }, {
    "id": 845,
    "label": "skip-code-gen-lib.jar",
    "parentId": 844
  }, {
    "id": 850,
    "label": "javax",
    "parentId": 345
  }, {
    "id": 849,
    "label": "inject",
    "parentId": 850
  }, {
    "id": 848,
    "label": "javax.inject",
    "parentId": 849
  }, {
    "id": 847,
    "label": "1",
    "parentId": 848
  }, {
    "id": 846,
    "label": "javax.inject-1.jar",
    "parentId": 847
  }, {
    "id": 851,
    "label": "worker_proto_bundle_bin_deploy.jar",
    "parentId": 788
  }, {
    "id": 855,
    "label": "dagger",
    "parentId": 332
  }, {
    "id": 854,
    "label": "dagger",
    "parentId": 855
  }, {
    "id": 853,
    "label": "2.43.2",
    "parentId": 854
  }, {
    "id": 852,
    "label": "dagger-2.43.2.jar",
    "parentId": 853
  }, {
    "id": 859,
    "label": "annotation",
    "parentId": 850
  }, {
    "id": 858,
    "label": "javax.annotation-api",
    "parentId": 859
  }, {
    "id": 857,
    "label": "1.3.2",
    "parentId": 858
  }, {
    "id": 856,
    "label": "javax.annotation-api-1.3.2.jar",
    "parentId": 857
  }, {
    "id": 860,
    "label": "libJdepsParserTestFixtures.jar",
    "parentId": 798
  }, {
    "id": 861,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmJdepsTest-runfiles",
    "parentId": 527
  }, {
    "id": 865,
    "label": "builder",
    "parentId": 536
  }, {
    "id": 864,
    "label": "tasks",
    "parentId": 865
  }, {
    "id": 863,
    "label": "KotlinBuilderJvmJdepsTest",
    "parentId": 864
  }, {
    "id": 862,
    "label": "test.log",
    "parentId": 863
  }, {
    "id": 866,
    "label": "test.cache_status",
    "parentId": 863
  }, {
    "id": 871,
    "label": "data",
    "parentId": 177
  }, {
    "id": 870,
    "label": "jvm",
    "parentId": 871
  }, {
    "id": 869,
    "label": "basic",
    "parentId": 870
  }, {
    "id": 868,
    "label": "test_friends",
    "parentId": 869
  }, {
    "id": 867,
    "label": "Service.kt",
    "parentId": 868
  }, {
    "id": 872,
    "label": "test_associates_library-kt.jar",
    "parentId": 125
  }, {
    "id": 873,
    "label": "test_associates_library-kt.jdeps",
    "parentId": 125
  }, {
    "id": 874,
    "label": "test_associates_library.jdeps",
    "parentId": 125
  }, {
    "id": 875,
    "label": "test_associates_library-sources.jar",
    "parentId": 125
  }, {
    "id": 878,
    "label": "remotejdk11_linux",
    "parentId": 26
  }, {
    "id": 877,
    "label": "bin",
    "parentId": 878
  }, {
    "id": 876,
    "label": "jaotc",
    "parentId": 877
  }, {
    "id": 879,
    "label": "jar",
    "parentId": 877
  }, {
    "id": 880,
    "label": "jarsigner",
    "parentId": 877
  }, {
    "id": 881,
    "label": "java",
    "parentId": 877
  }, {
    "id": 882,
    "label": "javac",
    "parentId": 877
  }, {
    "id": 883,
    "label": "javadoc",
    "parentId": 877
  }, {
    "id": 884,
    "label": "javap",
    "parentId": 877
  }, {
    "id": 885,
    "label": "jcmd",
    "parentId": 877
  }, {
    "id": 886,
    "label": "jconsole",
    "parentId": 877
  }, {
    "id": 887,
    "label": "jdb",
    "parentId": 877
  }, {
    "id": 888,
    "label": "jdeprscan",
    "parentId": 877
  }, {
    "id": 889,
    "label": "jdeps",
    "parentId": 877
  }, {
    "id": 890,
    "label": "jfr",
    "parentId": 877
  }, {
    "id": 891,
    "label": "jhsdb",
    "parentId": 877
  }, {
    "id": 892,
    "label": "jimage",
    "parentId": 877
  }, {
    "id": 893,
    "label": "jinfo",
    "parentId": 877
  }, {
    "id": 894,
    "label": "jjs",
    "parentId": 877
  }, {
    "id": 895,
    "label": "jlink",
    "parentId": 877
  }, {
    "id": 896,
    "label": "jmap",
    "parentId": 877
  }, {
    "id": 897,
    "label": "jmod",
    "parentId": 877
  }, {
    "id": 898,
    "label": "jps",
    "parentId": 877
  }, {
    "id": 899,
    "label": "jrunscript",
    "parentId": 877
  }, {
    "id": 900,
    "label": "jshell",
    "parentId": 877
  }, {
    "id": 901,
    "label": "jstack",
    "parentId": 877
  }, {
    "id": 902,
    "label": "jstat",
    "parentId": 877
  }, {
    "id": 903,
    "label": "jstatd",
    "parentId": 877
  }, {
    "id": 904,
    "label": "keytool",
    "parentId": 877
  }, {
    "id": 905,
    "label": "pack200",
    "parentId": 877
  }, {
    "id": 906,
    "label": "rmic",
    "parentId": 877
  }, {
    "id": 907,
    "label": "rmid",
    "parentId": 877
  }, {
    "id": 908,
    "label": "rmiregistry",
    "parentId": 877
  }, {
    "id": 909,
    "label": "serialver",
    "parentId": 877
  }, {
    "id": 910,
    "label": "unpack200",
    "parentId": 877
  }, {
    "id": 912,
    "label": "conf",
    "parentId": 878
  }, {
    "id": 911,
    "label": "logging.properties",
    "parentId": 912
  }, {
    "id": 914,
    "label": "management",
    "parentId": 912
  }, {
    "id": 913,
    "label": "jmxremote.access",
    "parentId": 914
  }, {
    "id": 915,
    "label": "jmxremote.password.template",
    "parentId": 914
  }, {
    "id": 916,
    "label": "management.properties",
    "parentId": 914
  }, {
    "id": 917,
    "label": "net.properties",
    "parentId": 912
  }, {
    "id": 919,
    "label": "security",
    "parentId": 912
  }, {
    "id": 918,
    "label": "java.policy",
    "parentId": 919
  }, {
    "id": 920,
    "label": "java.security",
    "parentId": 919
  }, {
    "id": 922,
    "label": "policy",
    "parentId": 919
  }, {
    "id": 921,
    "label": "README.txt",
    "parentId": 922
  }, {
    "id": 924,
    "label": "limited",
    "parentId": 922
  }, {
    "id": 923,
    "label": "default_US_export.policy",
    "parentId": 924
  }, {
    "id": 925,
    "label": "default_local.policy",
    "parentId": 924
  }, {
    "id": 926,
    "label": "exempt_local.policy",
    "parentId": 924
  }, {
    "id": 928,
    "label": "unlimited",
    "parentId": 922
  }, {
    "id": 927,
    "label": "default_US_export.policy",
    "parentId": 928
  }, {
    "id": 929,
    "label": "default_local.policy",
    "parentId": 928
  }, {
    "id": 930,
    "label": "sound.properties",
    "parentId": 912
  }, {
    "id": 932,
    "label": "include",
    "parentId": 878
  }, {
    "id": 931,
    "label": "classfile_constants.h",
    "parentId": 932
  }, {
    "id": 933,
    "label": "jawt.h",
    "parentId": 932
  }, {
    "id": 934,
    "label": "jdwpTransport.h",
    "parentId": 932
  }, {
    "id": 935,
    "label": "jni.h",
    "parentId": 932
  }, {
    "id": 936,
    "label": "jvmti.h",
    "parentId": 932
  }, {
    "id": 937,
    "label": "jvmticmlr.h",
    "parentId": 932
  }, {
    "id": 939,
    "label": "linux",
    "parentId": 932
  }, {
    "id": 938,
    "label": "jawt_md.h",
    "parentId": 939
  }, {
    "id": 940,
    "label": "jni_md.h",
    "parentId": 939
  }, {
    "id": 942,
    "label": "lib",
    "parentId": 878
  }, {
    "id": 941,
    "label": "classlist",
    "parentId": 942
  }, {
    "id": 943,
    "label": "ct.sym",
    "parentId": 942
  }, {
    "id": 944,
    "label": "jexec",
    "parentId": 942
  }, {
    "id": 946,
    "label": "jfr",
    "parentId": 942
  }, {
    "id": 945,
    "label": "default.jfc",
    "parentId": 946
  }, {
    "id": 947,
    "label": "profile.jfc",
    "parentId": 946
  }, {
    "id": 949,
    "label": "jli",
    "parentId": 942
  }, {
    "id": 948,
    "label": "libjli.so",
    "parentId": 949
  }, {
    "id": 950,
    "label": "jrt-fs.jar",
    "parentId": 942
  }, {
    "id": 951,
    "label": "jspawnhelper",
    "parentId": 942
  }, {
    "id": 952,
    "label": "jvm.cfg",
    "parentId": 942
  }, {
    "id": 953,
    "label": "libattach.so",
    "parentId": 942
  }, {
    "id": 954,
    "label": "libawt.so",
    "parentId": 942
  }, {
    "id": 955,
    "label": "libawt_headless.so",
    "parentId": 942
  }, {
    "id": 956,
    "label": "libawt_xawt.so",
    "parentId": 942
  }, {
    "id": 957,
    "label": "libdt_socket.so",
    "parentId": 942
  }, {
    "id": 958,
    "label": "libextnet.so",
    "parentId": 942
  }, {
    "id": 959,
    "label": "libfontmanager.so",
    "parentId": 942
  }, {
    "id": 960,
    "label": "libfreetype.so",
    "parentId": 942
  }, {
    "id": 961,
    "label": "libinstrument.so",
    "parentId": 942
  }, {
    "id": 962,
    "label": "libj2gss.so",
    "parentId": 942
  }, {
    "id": 963,
    "label": "libj2pcsc.so",
    "parentId": 942
  }, {
    "id": 964,
    "label": "libj2pkcs11.so",
    "parentId": 942
  }, {
    "id": 965,
    "label": "libjaas.so",
    "parentId": 942
  }, {
    "id": 966,
    "label": "libjava.so",
    "parentId": 942
  }, {
    "id": 967,
    "label": "libjavajpeg.so",
    "parentId": 942
  }, {
    "id": 968,
    "label": "libjawt.so",
    "parentId": 942
  }, {
    "id": 969,
    "label": "libjdwp.so",
    "parentId": 942
  }, {
    "id": 970,
    "label": "libjimage.so",
    "parentId": 942
  }, {
    "id": 971,
    "label": "libjsig.so",
    "parentId": 942
  }, {
    "id": 972,
    "label": "libjsound.so",
    "parentId": 942
  }, {
    "id": 973,
    "label": "liblcms.so",
    "parentId": 942
  }, {
    "id": 974,
    "label": "libmanagement.so",
    "parentId": 942
  }, {
    "id": 975,
    "label": "libmanagement_agent.so",
    "parentId": 942
  }, {
    "id": 976,
    "label": "libmanagement_ext.so",
    "parentId": 942
  }, {
    "id": 977,
    "label": "libmlib_image.so",
    "parentId": 942
  }, {
    "id": 978,
    "label": "libnet.so",
    "parentId": 942
  }, {
    "id": 979,
    "label": "libnio.so",
    "parentId": 942
  }, {
    "id": 980,
    "label": "libprefs.so",
    "parentId": 942
  }, {
    "id": 981,
    "label": "librmi.so",
    "parentId": 942
  }, {
    "id": 982,
    "label": "libsaproc.so",
    "parentId": 942
  }, {
    "id": 983,
    "label": "libsctp.so",
    "parentId": 942
  }, {
    "id": 984,
    "label": "libsplashscreen.so",
    "parentId": 942
  }, {
    "id": 985,
    "label": "libsunec.so",
    "parentId": 942
  }, {
    "id": 986,
    "label": "libunpack.so",
    "parentId": 942
  }, {
    "id": 987,
    "label": "libverify.so",
    "parentId": 942
  }, {
    "id": 988,
    "label": "libzip.so",
    "parentId": 942
  }, {
    "id": 989,
    "label": "modules",
    "parentId": 942
  }, {
    "id": 990,
    "label": "psfont.properties.ja",
    "parentId": 942
  }, {
    "id": 991,
    "label": "psfontj2d.properties",
    "parentId": 942
  }, {
    "id": 993,
    "label": "security",
    "parentId": 942
  }, {
    "id": 992,
    "label": "blocked.certs",
    "parentId": 993
  }, {
    "id": 994,
    "label": "cacerts",
    "parentId": 993
  }, {
    "id": 995,
    "label": "default.policy",
    "parentId": 993
  }, {
    "id": 996,
    "label": "public_suffix_list.dat",
    "parentId": 993
  }, {
    "id": 998,
    "label": "server",
    "parentId": 942
  }, {
    "id": 997,
    "label": "Xusage.txt",
    "parentId": 998
  }, {
    "id": 999,
    "label": "libjsig.so",
    "parentId": 998
  }, {
    "id": 1000,
    "label": "libjvm.so",
    "parentId": 998
  }, {
    "id": 1001,
    "label": "src.zip",
    "parentId": 942
  }, {
    "id": 1002,
    "label": "tzdb.dat",
    "parentId": 942
  }, {
    "id": 1003,
    "label": "JavaBuilder_deploy.jar",
    "parentId": 399
  }, {
    "id": 1005,
    "label": "jdk",
    "parentId": 827
  }, {
    "id": 1004,
    "label": "platformclasspath.jar",
    "parentId": 1005
  }, {
    "id": 1006,
    "label": "JdepsParserTest.java",
    "parentId": 794
  }, {
    "id": 1010,
    "label": "_ijar",
    "parentId": 1005
  }, {
    "id": 1009,
    "label": "TestRunner",
    "parentId": 1010
  }, {
    "id": 1008,
    "label": "java_tools",
    "parentId": 1009
  }, {
    "id": 1007,
    "label": "Runner_deploy-ijar.jar",
    "parentId": 1008
  }, {
    "id": 1011,
    "label": "libbuilder-hjar.jdeps",
    "parentId": 578
  }, {
    "id": 1012,
    "label": "libkotlin_model_proto-speed-hjar.jdeps",
    "parentId": 747
  }, {
    "id": 1013,
    "label": "libdeps_proto-speed-hjar.jdeps",
    "parentId": 749
  }, {
    "id": 1014,
    "label": "libtest_lib-hjar.jdeps",
    "parentId": 720
  }, {
    "id": 1015,
    "label": "JdepsParserTest.jar",
    "parentId": 798
  }, {
    "id": 1016,
    "label": "JdepsParserTest.jdeps",
    "parentId": 798
  }, {
    "id": 1017,
    "label": "JdepsParserTest-native-header.jar",
    "parentId": 798
  }, {
    "id": 1018,
    "label": "JdepsParserTest.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1019,
    "label": "JdepsParserTest-src.jar",
    "parentId": 798
  }, {
    "id": 1020,
    "label": "JdepsParserTest",
    "parentId": 798
  }, {
    "id": 1021,
    "label": "protobuf-java-3.21.7-src.jar",
    "parentId": 813
  }, {
    "id": 1022,
    "label": "deps_proto-speed-src.jar",
    "parentId": 749
  }, {
    "id": 1023,
    "label": "kotlin_model_proto-speed-src.jar",
    "parentId": 747
  }, {
    "id": 1024,
    "label": "worker_protocol_proto-speed-src.jar",
    "parentId": 749
  }, {
    "id": 1025,
    "label": "javax.inject-1-sources.jar",
    "parentId": 847
  }, {
    "id": 1026,
    "label": "dagger-2.43.2-sources.jar",
    "parentId": 853
  }, {
    "id": 1027,
    "label": "libdagger-src.jar",
    "parentId": 20
  }, {
    "id": 1028,
    "label": "javax.annotation-api-1.3.2-sources.jar",
    "parentId": 857
  }, {
    "id": 1029,
    "label": "libbuilder-src.jar",
    "parentId": 578
  }, {
    "id": 1030,
    "label": "hamcrest-core-1.3-sources.jar",
    "parentId": 375
  }, {
    "id": 1031,
    "label": "junit-4.13-beta-3-sources.jar",
    "parentId": 371
  }, {
    "id": 1032,
    "label": "j2objc-annotations-1.3-sources.jar",
    "parentId": 350
  }, {
    "id": 1033,
    "label": "jsr305-3.0.2-sources.jar",
    "parentId": 354
  }, {
    "id": 1034,
    "label": "error_prone_annotations-2.7.1-sources.jar",
    "parentId": 359
  }, {
    "id": 1035,
    "label": "checker-qual-3.12.0-sources.jar",
    "parentId": 363
  }, {
    "id": 1036,
    "label": "failureaccess-1.0.1-sources.jar",
    "parentId": 368
  }, {
    "id": 1037,
    "label": "guava-31.0.1-jre-sources.jar",
    "parentId": 329
  }, {
    "id": 1038,
    "label": "diffutils-1.3.0-sources.jar",
    "parentId": 384
  }, {
    "id": 1039,
    "label": "auto-value-annotations-1.10.1-sources.jar",
    "parentId": 389
  }, {
    "id": 1040,
    "label": "checker-compat-qual-2.5.5-sources.jar",
    "parentId": 394
  }, {
    "id": 1041,
    "label": "truth-0.45-sources.jar",
    "parentId": 380
  }, {
    "id": 1042,
    "label": "libautovalue-src.jar",
    "parentId": 20
  }, {
    "id": 1043,
    "label": "libtest_lib-src.jar",
    "parentId": 720
  }, {
    "id": 1044,
    "label": "JdepsParserTest_deploy-src.jar",
    "parentId": 798
  }, {
    "id": 1045,
    "label": "JdepsParserTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1047,
    "label": "JdepsParserTest.runfiles",
    "parentId": 798
  }, {
    "id": 1046,
    "label": "MANIFEST",
    "parentId": 1047
  }, {
    "id": 1048,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SJdepsParserTest-runfiles",
    "parentId": 527
  }, {
    "id": 1050,
    "label": "include",
    "parentId": 5
  }, {
    "id": 1049,
    "label": "build-info-redacted.properties",
    "parentId": 1050
  }, {
    "id": 1051,
    "label": "JdepsParserTest_deploy.jar",
    "parentId": 798
  }, {
    "id": 1052,
    "label": "JdepsParserTest_deploy.jar.unstripped",
    "parentId": 798
  }, {
    "id": 1054,
    "label": "JdepsParserTest",
    "parentId": 864
  }, {
    "id": 1053,
    "label": "test.log",
    "parentId": 1054
  }, {
    "id": 1055,
    "label": "test.cache_status",
    "parentId": 1054
  }, {
    "id": 1056,
    "label": "pkg.manifest",
    "parentId": 594
  }, {
    "id": 1058,
    "label": "jvm",
    "parentId": 585
  }, {
    "id": 1057,
    "label": "android.bzl",
    "parentId": 1058
  }, {
    "id": 1059,
    "label": "associates.bzl",
    "parentId": 1058
  }, {
    "id": 1060,
    "label": "compile.bzl",
    "parentId": 1058
  }, {
    "id": 1061,
    "label": "impl.bzl",
    "parentId": 1058
  }, {
    "id": 1062,
    "label": "jvm.bzl",
    "parentId": 1058
  }, {
    "id": 1063,
    "label": "plugins.bzl",
    "parentId": 1058
  }, {
    "id": 1064,
    "label": "jetbrains-deshade.jarjar",
    "parentId": 1058
  }, {
    "id": 1066,
    "label": "pkg_BUILD.bazel",
    "parentId": 594
  }, {
    "id": 1065,
    "label": "BUILD.bazel",
    "parentId": 1066
  }, {
    "id": 1067,
    "label": "shade.jarjar",
    "parentId": 685
  }, {
    "id": 1068,
    "label": "jdeps-gen_deploy.jar",
    "parentId": 843
  }, {
    "id": 1070,
    "label": "third_party",
    "parentId": 33
  }, {
    "id": 1069,
    "label": "jarjar_runner.jar",
    "parentId": 1070
  }, {
    "id": 1071,
    "label": "jarjar_runner",
    "parentId": 1070
  }, {
    "id": 1072,
    "label": "third_Uparty_Sjarjar_Urunner-runfiles",
    "parentId": 36
  }, {
    "id": 1073,
    "label": "skip-code-gen_deploy.jar",
    "parentId": 844
  }, {
    "id": 1074,
    "label": "pkg.manifest",
    "parentId": 592
  }, {
    "id": 1076,
    "label": "js",
    "parentId": 585
  }, {
    "id": 1075,
    "label": "impl.bzl",
    "parentId": 1076
  }, {
    "id": 1077,
    "label": "importer.py",
    "parentId": 1076
  }, {
    "id": 1078,
    "label": "js.bzl",
    "parentId": 1076
  }, {
    "id": 1080,
    "label": "pkg_BUILD.bazel",
    "parentId": 592
  }, {
    "id": 1079,
    "label": "BUILD.bazel",
    "parentId": 1080
  }, {
    "id": 1083,
    "label": "utils",
    "parentId": 796
  }, {
    "id": 1082,
    "label": "jars",
    "parentId": 1083
  }, {
    "id": 1081,
    "label": "SourceJarCreatorTest.java",
    "parentId": 1082
  }, {
    "id": 1095,
    "label": "_ijar",
    "parentId": 841
  }, {
    "id": 1094,
    "label": "jars",
    "parentId": 1095
  }, {
    "id": 1093,
    "label": "src",
    "parentId": 1094
  }, {
    "id": 1092,
    "label": "main",
    "parentId": 1093
  }, {
    "id": 1091,
    "label": "kotlin",
    "parentId": 1092
  }, {
    "id": 1090,
    "label": "io",
    "parentId": 1091
  }, {
    "id": 1089,
    "label": "bazel",
    "parentId": 1090
  }, {
    "id": 1088,
    "label": "kotlin",
    "parentId": 1089
  }, {
    "id": 1087,
    "label": "builder",
    "parentId": 1088
  }, {
    "id": 1086,
    "label": "utils",
    "parentId": 1087
  }, {
    "id": 1085,
    "label": "jars",
    "parentId": 1086
  }, {
    "id": 1084,
    "label": "jars-ijar.jar",
    "parentId": 1085
  }, {
    "id": 1097,
    "label": "utils",
    "parentId": 720
  }, {
    "id": 1096,
    "label": "SourceJarCreatorTest.jar",
    "parentId": 1097
  }, {
    "id": 1098,
    "label": "SourceJarCreatorTest.jdeps",
    "parentId": 1097
  }, {
    "id": 1099,
    "label": "SourceJarCreatorTest-native-header.jar",
    "parentId": 1097
  }, {
    "id": 1100,
    "label": "SourceJarCreatorTest.jar_manifest_proto",
    "parentId": 1097
  }, {
    "id": 1101,
    "label": "SourceJarCreatorTest-src.jar",
    "parentId": 1097
  }, {
    "id": 1102,
    "label": "SourceJarCreatorTest",
    "parentId": 1097
  }, {
    "id": 1103,
    "label": "SourceJarCreatorTest_deploy-src.jar",
    "parentId": 1097
  }, {
    "id": 1104,
    "label": "SourceJarCreatorTest.runfiles_manifest",
    "parentId": 1097
  }, {
    "id": 1106,
    "label": "SourceJarCreatorTest.runfiles",
    "parentId": 1097
  }, {
    "id": 1105,
    "label": "MANIFEST",
    "parentId": 1106
  }, {
    "id": 1107,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Sutils_SSourceJarCreatorTest-runfiles",
    "parentId": 527
  }, {
    "id": 1108,
    "label": "SourceJarCreatorTest_deploy.jar",
    "parentId": 1097
  }, {
    "id": 1109,
    "label": "SourceJarCreatorTest_deploy.jar.unstripped",
    "parentId": 1097
  }, {
    "id": 1112,
    "label": "utils",
    "parentId": 865
  }, {
    "id": 1111,
    "label": "SourceJarCreatorTest",
    "parentId": 1112
  }, {
    "id": 1110,
    "label": "test.log",
    "parentId": 1111
  }, {
    "id": 1113,
    "label": "test.cache_status",
    "parentId": 1111
  }, {
    "id": 1114,
    "label": "KotlinBuilderJvmStrictDepsTest.kt",
    "parentId": 794
  }, {
    "id": 1115,
    "label": "KotlinBuilderJvmStrictDepsTest-kt.jar",
    "parentId": 798
  }, {
    "id": 1116,
    "label": "KotlinBuilderJvmStrictDepsTest-kt.jdeps",
    "parentId": 798
  }, {
    "id": 1117,
    "label": "KotlinBuilderJvmStrictDepsTest.abi.jar",
    "parentId": 798
  }, {
    "id": 1118,
    "label": "KotlinBuilderJvmStrictDepsTest.jdeps",
    "parentId": 798
  }, {
    "id": 1119,
    "label": "KotlinBuilderJvmStrictDepsTest.jar",
    "parentId": 798
  }, {
    "id": 1120,
    "label": "KotlinBuilderJvmStrictDepsTest-sources.jar",
    "parentId": 798
  }, {
    "id": 1121,
    "label": "KotlinBuilderJvmStrictDepsTest",
    "parentId": 798
  }, {
    "id": 1122,
    "label": "KotlinBuilderJvmStrictDepsTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1124,
    "label": "KotlinBuilderJvmStrictDepsTest.runfiles",
    "parentId": 798
  }, {
    "id": 1123,
    "label": "MANIFEST",
    "parentId": 1124
  }, {
    "id": 1125,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmStrictDepsTest-runfiles",
    "parentId": 527
  }, {
    "id": 1127,
    "label": "KotlinBuilderJvmStrictDepsTest",
    "parentId": 864
  }, {
    "id": 1126,
    "label": "test.log",
    "parentId": 1127
  }, {
    "id": 1128,
    "label": "test.cache_status",
    "parentId": 1127
  }, {
    "id": 1129,
    "label": "pkg.manifest",
    "parentId": 598
  }, {
    "id": 1131,
    "label": "utils",
    "parentId": 585
  }, {
    "id": 1130,
    "label": "generate_jvm_service.bzl",
    "parentId": 1131
  }, {
    "id": 1132,
    "label": "sets.bzl",
    "parentId": 1131
  }, {
    "id": 1133,
    "label": "utils.bzl",
    "parentId": 1131
  }, {
    "id": 1134,
    "label": "windows.bzl",
    "parentId": 1131
  }, {
    "id": 1136,
    "label": "pkg_BUILD.bazel",
    "parentId": 598
  }, {
    "id": 1135,
    "label": "BUILD.bazel",
    "parentId": 1136
  }, {
    "id": 1137,
    "label": "KotlinBuilderJvmBasicTest.java",
    "parentId": 794
  }, {
    "id": 1138,
    "label": "KotlinBuilderJvmBasicTest.jar",
    "parentId": 798
  }, {
    "id": 1139,
    "label": "KotlinBuilderJvmBasicTest.jdeps",
    "parentId": 798
  }, {
    "id": 1140,
    "label": "KotlinBuilderJvmBasicTest-native-header.jar",
    "parentId": 798
  }, {
    "id": 1141,
    "label": "KotlinBuilderJvmBasicTest.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1142,
    "label": "KotlinBuilderJvmBasicTest-src.jar",
    "parentId": 798
  }, {
    "id": 1143,
    "label": "KotlinBuilderJvmBasicTest",
    "parentId": 798
  }, {
    "id": 1144,
    "label": "KotlinBuilderJvmBasicTest_deploy-src.jar",
    "parentId": 798
  }, {
    "id": 1145,
    "label": "KotlinBuilderJvmBasicTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1147,
    "label": "KotlinBuilderJvmBasicTest.runfiles",
    "parentId": 798
  }, {
    "id": 1146,
    "label": "MANIFEST",
    "parentId": 1147
  }, {
    "id": 1148,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmBasicTest-runfiles",
    "parentId": 527
  }, {
    "id": 1149,
    "label": "KotlinBuilderJvmBasicTest_deploy.jar",
    "parentId": 798
  }, {
    "id": 1150,
    "label": "KotlinBuilderJvmBasicTest_deploy.jar.unstripped",
    "parentId": 798
  }, {
    "id": 1152,
    "label": "KotlinBuilderJvmBasicTest",
    "parentId": 864
  }, {
    "id": 1151,
    "label": "test.log",
    "parentId": 1152
  }, {
    "id": 1153,
    "label": "test.cache_status",
    "parentId": 1152
  }, {
    "id": 1154,
    "label": "KotlinAssertionTestCase.kt",
    "parentId": 173
  }, {
    "id": 1155,
    "label": "assertion_test_case-kt.jar",
    "parentId": 86
  }, {
    "id": 1156,
    "label": "assertion_test_case-kt.jdeps",
    "parentId": 86
  }, {
    "id": 1157,
    "label": "assertion_test_case.jdeps",
    "parentId": 86
  }, {
    "id": 1158,
    "label": "assertion_test_case-sources.jar",
    "parentId": 86
  }, {
    "id": 1159,
    "label": "KotlinBuilderJvmKaptTest.java",
    "parentId": 794
  }, {
    "id": 1160,
    "label": "KotlinBuilderJvmKaptTest.jar",
    "parentId": 798
  }, {
    "id": 1161,
    "label": "KotlinBuilderJvmKaptTest.jdeps",
    "parentId": 798
  }, {
    "id": 1162,
    "label": "KotlinBuilderJvmKaptTest-native-header.jar",
    "parentId": 798
  }, {
    "id": 1163,
    "label": "KotlinBuilderJvmKaptTest.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1164,
    "label": "KotlinBuilderJvmKaptTest-src.jar",
    "parentId": 798
  }, {
    "id": 1165,
    "label": "KotlinBuilderJvmKaptTest",
    "parentId": 798
  }, {
    "id": 1166,
    "label": "KotlinBuilderJvmKaptTest_deploy-src.jar",
    "parentId": 798
  }, {
    "id": 1167,
    "label": "KotlinBuilderJvmKaptTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1169,
    "label": "KotlinBuilderJvmKaptTest.runfiles",
    "parentId": 798
  }, {
    "id": 1168,
    "label": "MANIFEST",
    "parentId": 1169
  }, {
    "id": 1172,
    "label": "auto-value",
    "parentId": 391
  }, {
    "id": 1171,
    "label": "1.10.1",
    "parentId": 1172
  }, {
    "id": 1170,
    "label": "auto-value-1.10.1.jar",
    "parentId": 1171
  }, {
    "id": 1173,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmKaptTest-runfiles",
    "parentId": 527
  }, {
    "id": 1174,
    "label": "KotlinBuilderJvmKaptTest_deploy.jar",
    "parentId": 798
  }, {
    "id": 1175,
    "label": "KotlinBuilderJvmKaptTest_deploy.jar.unstripped",
    "parentId": 798
  }, {
    "id": 1177,
    "label": "KotlinBuilderJvmKaptTest",
    "parentId": 864
  }, {
    "id": 1176,
    "label": "test.log",
    "parentId": 1177
  }, {
    "id": 1178,
    "label": "test.cache_status",
    "parentId": 1177
  }, {
    "id": 1180,
    "label": "js",
    "parentId": 795
  }, {
    "id": 1179,
    "label": "KotlinBuilderJsTest.java",
    "parentId": 1180
  }, {
    "id": 1181,
    "label": "KotlinBuilderJsTest.jar",
    "parentId": 798
  }, {
    "id": 1182,
    "label": "KotlinBuilderJsTest.jdeps",
    "parentId": 798
  }, {
    "id": 1183,
    "label": "KotlinBuilderJsTest-native-header.jar",
    "parentId": 798
  }, {
    "id": 1184,
    "label": "KotlinBuilderJsTest.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1185,
    "label": "KotlinBuilderJsTest-src.jar",
    "parentId": 798
  }, {
    "id": 1186,
    "label": "KotlinBuilderJsTest",
    "parentId": 798
  }, {
    "id": 1187,
    "label": "KotlinBuilderJsTest_deploy-src.jar",
    "parentId": 798
  }, {
    "id": 1188,
    "label": "KotlinBuilderJsTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1190,
    "label": "KotlinBuilderJsTest.runfiles",
    "parentId": 798
  }, {
    "id": 1189,
    "label": "MANIFEST",
    "parentId": 1190
  }, {
    "id": 1191,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJsTest-runfiles",
    "parentId": 527
  }, {
    "id": 1192,
    "label": "KotlinBuilderJsTest_deploy.jar",
    "parentId": 798
  }, {
    "id": 1193,
    "label": "KotlinBuilderJsTest_deploy.jar.unstripped",
    "parentId": 798
  }, {
    "id": 1195,
    "label": "KotlinBuilderJsTest",
    "parentId": 864
  }, {
    "id": 1194,
    "label": "test.log",
    "parentId": 1195
  }, {
    "id": 1196,
    "label": "test.cache_status",
    "parentId": 1195
  }, {
    "id": 1197,
    "label": "BUILD.release.bazel",
    "parentId": 585
  }, {
    "id": 1198,
    "label": "pkg.manifest",
    "parentId": 596
  }, {
    "id": 1200,
    "label": "lint",
    "parentId": 585
  }, {
    "id": 1199,
    "label": "editorconfig.bzl",
    "parentId": 1200
  }, {
    "id": 1201,
    "label": "ktlint_config.bzl",
    "parentId": 1200
  }, {
    "id": 1202,
    "label": "ktlint_fix.bzl",
    "parentId": 1200
  }, {
    "id": 1203,
    "label": "ktlint_test.bzl",
    "parentId": 1200
  }, {
    "id": 1205,
    "label": "pkg_BUILD.bazel",
    "parentId": 596
  }, {
    "id": 1204,
    "label": "BUILD.bazel",
    "parentId": 1205
  }, {
    "id": 1206,
    "label": "pkg.manifest",
    "parentId": 679
  }, {
    "id": 1208,
    "label": "options",
    "parentId": 675
  }, {
    "id": 1207,
    "label": "convert.bzl",
    "parentId": 1208
  }, {
    "id": 1209,
    "label": "derive.bzl",
    "parentId": 1208
  }, {
    "id": 1210,
    "label": "opts.javac.bzl",
    "parentId": 1208
  }, {
    "id": 1211,
    "label": "opts.kotlinc.bzl",
    "parentId": 1208
  }, {
    "id": 1213,
    "label": "pkg_BUILD.bazel",
    "parentId": 679
  }, {
    "id": 1212,
    "label": "BUILD.bazel",
    "parentId": 1213
  }, {
    "id": 1214,
    "label": "ArgMapTest.kt",
    "parentId": 1083
  }, {
    "id": 1215,
    "label": "ArgMapTest-kt.jar",
    "parentId": 1097
  }, {
    "id": 1216,
    "label": "ArgMapTest-kt.jdeps",
    "parentId": 1097
  }, {
    "id": 1217,
    "label": "ArgMapTest.abi.jar",
    "parentId": 1097
  }, {
    "id": 1218,
    "label": "ArgMapTest.jdeps",
    "parentId": 1097
  }, {
    "id": 1219,
    "label": "ArgMapTest.jar",
    "parentId": 1097
  }, {
    "id": 1220,
    "label": "ArgMapTest-sources.jar",
    "parentId": 1097
  }, {
    "id": 1221,
    "label": "ArgMapTest",
    "parentId": 1097
  }, {
    "id": 1222,
    "label": "ArgMapTest.runfiles_manifest",
    "parentId": 1097
  }, {
    "id": 1224,
    "label": "ArgMapTest.runfiles",
    "parentId": 1097
  }, {
    "id": 1223,
    "label": "MANIFEST",
    "parentId": 1224
  }, {
    "id": 1225,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Sutils_SArgMapTest-runfiles",
    "parentId": 527
  }, {
    "id": 1227,
    "label": "ArgMapTest",
    "parentId": 1112
  }, {
    "id": 1226,
    "label": "test.log",
    "parentId": 1227
  }, {
    "id": 1228,
    "label": "test.cache_status",
    "parentId": 1227
  }, {
    "id": 1230,
    "label": "testing",
    "parentId": 87
  }, {
    "id": 1229,
    "label": "testing.abi.jar",
    "parentId": 1230
  }, {
    "id": 1231,
    "label": "JarCreatorTest.kt",
    "parentId": 1082
  }, {
    "id": 1232,
    "label": "JarCreatorTest-kt.jar",
    "parentId": 1097
  }, {
    "id": 1233,
    "label": "JarCreatorTest-kt.jdeps",
    "parentId": 1097
  }, {
    "id": 1234,
    "label": "JarCreatorTest.abi.jar",
    "parentId": 1097
  }, {
    "id": 1235,
    "label": "JarCreatorTest.jdeps",
    "parentId": 1097
  }, {
    "id": 1236,
    "label": "JarCreatorTest.jar",
    "parentId": 1097
  }, {
    "id": 1237,
    "label": "JarCreatorTest-sources.jar",
    "parentId": 1097
  }, {
    "id": 1238,
    "label": "JarCreatorTest",
    "parentId": 1097
  }, {
    "id": 1239,
    "label": "JarCreatorTest.runfiles_manifest",
    "parentId": 1097
  }, {
    "id": 1241,
    "label": "JarCreatorTest.runfiles",
    "parentId": 1097
  }, {
    "id": 1240,
    "label": "MANIFEST",
    "parentId": 1241
  }, {
    "id": 1242,
    "label": "testing.jar",
    "parentId": 1230
  }, {
    "id": 1243,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Sutils_SJarCreatorTest-runfiles",
    "parentId": 527
  }, {
    "id": 1245,
    "label": "JarCreatorTest",
    "parentId": 1112
  }, {
    "id": 1244,
    "label": "test.log",
    "parentId": 1245
  }, {
    "id": 1246,
    "label": "test.cache_status",
    "parentId": 1245
  }, {
    "id": 1247,
    "label": "empty-definately-not-binary-jar.txt",
    "parentId": 42
  }, {
    "id": 1249,
    "label": "genrule",
    "parentId": 531
  }, {
    "id": 1248,
    "label": "genrule-setup.sh",
    "parentId": 1249
  }, {
    "id": 1250,
    "label": "KotlinBuilderJvmCoverageTest.kt",
    "parentId": 794
  }, {
    "id": 1251,
    "label": "KotlinBuilderJvmCoverageTest-kt.jar",
    "parentId": 798
  }, {
    "id": 1252,
    "label": "KotlinBuilderJvmCoverageTest-kt.jdeps",
    "parentId": 798
  }, {
    "id": 1253,
    "label": "KotlinBuilderJvmCoverageTest.abi.jar",
    "parentId": 798
  }, {
    "id": 1254,
    "label": "KotlinBuilderJvmCoverageTest.jdeps",
    "parentId": 798
  }, {
    "id": 1255,
    "label": "KotlinBuilderJvmCoverageTest.jar",
    "parentId": 798
  }, {
    "id": 1256,
    "label": "KotlinBuilderJvmCoverageTest-sources.jar",
    "parentId": 798
  }, {
    "id": 1257,
    "label": "KotlinBuilderJvmCoverageTest",
    "parentId": 798
  }, {
    "id": 1258,
    "label": "KotlinBuilderJvmCoverageTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1260,
    "label": "KotlinBuilderJvmCoverageTest.runfiles",
    "parentId": 798
  }, {
    "id": 1259,
    "label": "MANIFEST",
    "parentId": 1260
  }, {
    "id": 1261,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmCoverageTest-runfiles",
    "parentId": 527
  }, {
    "id": 1263,
    "label": "KotlinBuilderJvmCoverageTest",
    "parentId": 864
  }, {
    "id": 1262,
    "label": "test.log",
    "parentId": 1263
  }, {
    "id": 1264,
    "label": "test.cache_status",
    "parentId": 1263
  }, {
    "id": 1265,
    "label": "KotlinBuilderJvmAbiTest.java",
    "parentId": 794
  }, {
    "id": 1266,
    "label": "KotlinBuilderJvmAbiTest.jar",
    "parentId": 798
  }, {
    "id": 1267,
    "label": "KotlinBuilderJvmAbiTest.jdeps",
    "parentId": 798
  }, {
    "id": 1268,
    "label": "KotlinBuilderJvmAbiTest-native-header.jar",
    "parentId": 798
  }, {
    "id": 1269,
    "label": "KotlinBuilderJvmAbiTest.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1270,
    "label": "KotlinBuilderJvmAbiTest-src.jar",
    "parentId": 798
  }, {
    "id": 1271,
    "label": "KotlinBuilderJvmAbiTest",
    "parentId": 798
  }, {
    "id": 1272,
    "label": "KotlinBuilderJvmAbiTest_deploy-src.jar",
    "parentId": 798
  }, {
    "id": 1273,
    "label": "KotlinBuilderJvmAbiTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1275,
    "label": "KotlinBuilderJvmAbiTest.runfiles",
    "parentId": 798
  }, {
    "id": 1274,
    "label": "MANIFEST",
    "parentId": 1275
  }, {
    "id": 1276,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SKotlinBuilderJvmAbiTest-runfiles",
    "parentId": 527
  }, {
    "id": 1277,
    "label": "KotlinBuilderJvmAbiTest_deploy.jar",
    "parentId": 798
  }, {
    "id": 1278,
    "label": "KotlinBuilderJvmAbiTest_deploy.jar.unstripped",
    "parentId": 798
  }, {
    "id": 1280,
    "label": "KotlinBuilderJvmAbiTest",
    "parentId": 864
  }, {
    "id": 1279,
    "label": "test.log",
    "parentId": 1280
  }, {
    "id": 1281,
    "label": "test.cache_status",
    "parentId": 1280
  }, {
    "id": 1282,
    "label": "BUILD.release.bazel",
    "parentId": 675
  }, {
    "id": 1283,
    "label": "JdepsMergerTest.kt",
    "parentId": 794
  }, {
    "id": 1284,
    "label": "JdepsMergerTest-kt.jar",
    "parentId": 798
  }, {
    "id": 1285,
    "label": "JdepsMergerTest-kt.jdeps",
    "parentId": 798
  }, {
    "id": 1286,
    "label": "JdepsMergerTest.abi.jar",
    "parentId": 798
  }, {
    "id": 1287,
    "label": "JdepsMergerTest.jdeps",
    "parentId": 798
  }, {
    "id": 1288,
    "label": "JdepsMergerTest.jar",
    "parentId": 798
  }, {
    "id": 1289,
    "label": "JdepsMergerTest-sources.jar",
    "parentId": 798
  }, {
    "id": 1290,
    "label": "JdepsMergerTest",
    "parentId": 798
  }, {
    "id": 1291,
    "label": "JdepsMergerTest.runfiles_manifest",
    "parentId": 798
  }, {
    "id": 1293,
    "label": "JdepsMergerTest.runfiles",
    "parentId": 798
  }, {
    "id": 1292,
    "label": "MANIFEST",
    "parentId": 1293
  }, {
    "id": 1294,
    "label": "src_Stest_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Stasks_SJdepsMergerTest-runfiles",
    "parentId": 527
  }, {
    "id": 1296,
    "label": "JdepsMergerTest",
    "parentId": 864
  }, {
    "id": 1295,
    "label": "test.log",
    "parentId": 1296
  }, {
    "id": 1297,
    "label": "test.cache_status",
    "parentId": 1296
  }, {
    "id": 1299,
    "label": "jdk",
    "parentId": 531
  }, {
    "id": 1298,
    "label": "DumpPlatformClassPath.java",
    "parentId": 1299
  }, {
    "id": 1300,
    "label": "platformclasspath_classes",
    "parentId": 1005
  }, {
    "id": 1302,
    "label": "testFixtures",
    "parentId": 795
  }, {
    "id": 1301,
    "label": "AbstractObjectAssert.java",
    "parentId": 1302
  }, {
    "id": 1303,
    "label": "AnotherClass.java",
    "parentId": 1302
  }, {
    "id": 1304,
    "label": "Constants.java",
    "parentId": 1302
  }, {
    "id": 1305,
    "label": "InnerJavaEnum.java",
    "parentId": 1302
  }, {
    "id": 1306,
    "label": "JavaAnnotation.java",
    "parentId": 1302
  }, {
    "id": 1307,
    "label": "JavaClass.java",
    "parentId": 1302
  }, {
    "id": 1308,
    "label": "LayoutRes.java",
    "parentId": 1302
  }, {
    "id": 1309,
    "label": "libJdepsParserTestFixtures.jdeps",
    "parentId": 798
  }, {
    "id": 1310,
    "label": "libJdepsParserTestFixtures-native-header.jar",
    "parentId": 798
  }, {
    "id": 1311,
    "label": "libJdepsParserTestFixtures.jar_manifest_proto",
    "parentId": 798
  }, {
    "id": 1312,
    "label": "turbine_direct_binary_deploy.jar",
    "parentId": 399
  }, {
    "id": 1313,
    "label": "libJdepsParserTestFixtures-hjar.jar",
    "parentId": 798
  }, {
    "id": 1314,
    "label": "libJdepsParserTestFixtures-hjar.jdeps",
    "parentId": 798
  }, {
    "id": 1315,
    "label": "libJdepsParserTestFixtures-src.jar",
    "parentId": 798
  }, {
    "id": 1316,
    "label": "BUILD.release.bazel",
    "parentId": 1058
  }, {
    "id": 1317,
    "label": "BUILD.release.bazel",
    "parentId": 1200
  }, {
    "id": 1318,
    "label": "merge_jdeps.jar",
    "parentId": 577
  }, {
    "id": 1319,
    "label": "merge_jdeps-native-header.jar",
    "parentId": 577
  }, {
    "id": 1320,
    "label": "merge_jdeps.jar_manifest_proto",
    "parentId": 577
  }, {
    "id": 1321,
    "label": "merge_jdeps-src.jar",
    "parentId": 577
  }, {
    "id": 1322,
    "label": "merge_jdeps",
    "parentId": 577
  }, {
    "id": 1323,
    "label": "merge_jdeps_deploy-src.jar",
    "parentId": 577
  }, {
    "id": 1324,
    "label": "merge_jdeps.runfiles_manifest",
    "parentId": 577
  }, {
    "id": 1326,
    "label": "merge_jdeps.runfiles",
    "parentId": 577
  }, {
    "id": 1325,
    "label": "MANIFEST",
    "parentId": 1326
  }, {
    "id": 1327,
    "label": "merge_jdeps_jarjar.jar",
    "parentId": 577
  }, {
    "id": 1328,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Scmd_Smerge_Ujdeps-runfiles",
    "parentId": 527
  }, {
    "id": 1329,
    "label": "merge_jdeps_deploy.jar.unstripped",
    "parentId": 577
  }, {
    "id": 1330,
    "label": "BUILD.release.bazel",
    "parentId": 708
  }, {
    "id": 1332,
    "label": "ijar",
    "parentId": 311
  }, {
    "id": 1331,
    "label": "ijar",
    "parentId": 1332
  }, {
    "id": 1336,
    "label": "service",
    "parentId": 167
  }, {
    "id": 1335,
    "label": "auto-service-annotations",
    "parentId": 1336
  }, {
    "id": 1334,
    "label": "1.0.1",
    "parentId": 1335
  }, {
    "id": 1333,
    "label": "header_auto-service-annotations-1.0.1.jar",
    "parentId": 1334
  }, {
    "id": 1339,
    "label": "auto-common",
    "parentId": 392
  }, {
    "id": 1338,
    "label": "1.2",
    "parentId": 1339
  }, {
    "id": 1337,
    "label": "auto-common-1.2.jar",
    "parentId": 1338
  }, {
    "id": 1343,
    "label": "service",
    "parentId": 392
  }, {
    "id": 1342,
    "label": "auto-service",
    "parentId": 1343
  }, {
    "id": 1341,
    "label": "1.0.1",
    "parentId": 1342
  }, {
    "id": 1340,
    "label": "auto-service-1.0.1.jar",
    "parentId": 1341
  }, {
    "id": 1346,
    "label": "auto-service-annotations",
    "parentId": 1343
  }, {
    "id": 1345,
    "label": "1.0.1",
    "parentId": 1346
  }, {
    "id": 1344,
    "label": "auto-service-annotations-1.0.1.jar",
    "parentId": 1345
  }, {
    "id": 1349,
    "label": "kapt",
    "parentId": 870
  }, {
    "id": 1348,
    "label": "kotlin",
    "parentId": 1349
  }, {
    "id": 1347,
    "label": "TestKtService.kt",
    "parentId": 1348
  }, {
    "id": 1350,
    "label": "TestKtValue.kt",
    "parentId": 1348
  }, {
    "id": 1352,
    "label": "java",
    "parentId": 1349
  }, {
    "id": 1351,
    "label": "TestAutoValue.java",
    "parentId": 1352
  }, {
    "id": 1353,
    "label": "TestJavaService.java",
    "parentId": 1352
  }, {
    "id": 1354,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1355,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1356,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1357,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-kt.jar",
    "parentId": 556
  }, {
    "id": 1358,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1359,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1360,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java.jar",
    "parentId": 556
  }, {
    "id": 1361,
    "label": "GenClass_deploy.jar",
    "parentId": 399
  }, {
    "id": 1362,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1363,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java.jdeps",
    "parentId": 556
  }, {
    "id": 1364,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1365,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1366,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1367,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1368,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-java-src.jar",
    "parentId": 556
  }, {
    "id": 1369,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps.abi.jar",
    "parentId": 556
  }, {
    "id": 1370,
    "label": "ap_kotlin_mixed_inherit_plugin_via_exported_deps-sources.jar",
    "parentId": 556
  }, {
    "id": 1372,
    "label": "helloworld",
    "parentId": 869
  }, {
    "id": 1371,
    "label": "Main.kt",
    "parentId": 1372
  }, {
    "id": 1373,
    "label": "test_module_name_bin-kt.jar",
    "parentId": 125
  }, {
    "id": 1374,
    "label": "test_module_name_bin-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1375,
    "label": "test_module_name_bin.abi.jar",
    "parentId": 125
  }, {
    "id": 1376,
    "label": "test_module_name_bin-sources.jar",
    "parentId": 125
  }, {
    "id": 1377,
    "label": "test_module_name_bin",
    "parentId": 125
  }, {
    "id": 1378,
    "label": "test_module_name_bin.runfiles_manifest",
    "parentId": 125
  }, {
    "id": 1380,
    "label": "test_module_name_bin.runfiles",
    "parentId": 125
  }, {
    "id": 1379,
    "label": "MANIFEST",
    "parentId": 1380
  }, {
    "id": 1381,
    "label": "src_Stest_Sdata_Sjvm_Sbasic_Stest_Umodule_Uname_Ubin-runfiles",
    "parentId": 527
  }, {
    "id": 1390,
    "label": "rules_jvm_external",
    "parentId": 32
  }, {
    "id": 1389,
    "label": "private",
    "parentId": 1390
  }, {
    "id": 1388,
    "label": "tools",
    "parentId": 1389
  }, {
    "id": 1387,
    "label": "java",
    "parentId": 1388
  }, {
    "id": 1386,
    "label": "rules",
    "parentId": 1387
  }, {
    "id": 1385,
    "label": "jvm",
    "parentId": 1386
  }, {
    "id": 1384,
    "label": "external",
    "parentId": 1385
  }, {
    "id": 1383,
    "label": "jar",
    "parentId": 1384
  }, {
    "id": 1382,
    "label": "AddJarManifestEntry.jar",
    "parentId": 1383
  }, {
    "id": 1391,
    "label": "AddJarManifestEntry",
    "parentId": 1383
  }, {
    "id": 1392,
    "label": "external_Srules_Ujvm_Uexternal_Sprivate_Stools_Sjava_Srules_Sjvm_Sexternal_Sjar_SAddJarManifestEntry-runfiles",
    "parentId": 36
  }, {
    "id": 1393,
    "label": "TestKtAPNoGenReference.kt",
    "parentId": 1348
  }, {
    "id": 1394,
    "label": "TestAPNoGenReferences.java",
    "parentId": 1352
  }, {
    "id": 1395,
    "label": "ap_kotlin_mixed_no_plugin-kt.jar",
    "parentId": 556
  }, {
    "id": 1396,
    "label": "ap_kotlin_mixed_no_plugin-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1397,
    "label": "ap_kotlin_mixed_no_plugin-java.jar",
    "parentId": 556
  }, {
    "id": 1398,
    "label": "ap_kotlin_mixed_no_plugin-java.jdeps",
    "parentId": 556
  }, {
    "id": 1399,
    "label": "ap_kotlin_mixed_no_plugin-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1400,
    "label": "ap_kotlin_mixed_no_plugin-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1401,
    "label": "ap_kotlin_mixed_no_plugin-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1402,
    "label": "ap_kotlin_mixed_no_plugin-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1403,
    "label": "ap_kotlin_mixed_no_plugin-java-src.jar",
    "parentId": 556
  }, {
    "id": 1404,
    "label": "ap_kotlin_mixed_no_plugin.abi.jar",
    "parentId": 556
  }, {
    "id": 1405,
    "label": "ap_kotlin_mixed_no_plugin-sources.jar",
    "parentId": 556
  }, {
    "id": 1406,
    "label": "libtest_lib.jar_manifest_proto",
    "parentId": 720
  }, {
    "id": 1407,
    "label": "libtest_lib-gen.jar",
    "parentId": 720
  }, {
    "id": 1412,
    "label": "jetbrains",
    "parentId": 366
  }, {
    "id": 1411,
    "label": "kotlin",
    "parentId": 1412
  }, {
    "id": 1410,
    "label": "kotlin-stdlib",
    "parentId": 1411
  }, {
    "id": 1409,
    "label": "1.7.0",
    "parentId": 1410
  }, {
    "id": 1408,
    "label": "kotlin-stdlib-1.7.0.jar",
    "parentId": 1409
  }, {
    "id": 1416,
    "label": "jetbrains",
    "parentId": 378
  }, {
    "id": 1415,
    "label": "annotations",
    "parentId": 1416
  }, {
    "id": 1414,
    "label": "13.0",
    "parentId": 1415
  }, {
    "id": 1413,
    "label": "annotations-13.0.jar",
    "parentId": 1414
  }, {
    "id": 1419,
    "label": "kotlin-stdlib-common",
    "parentId": 1411
  }, {
    "id": 1418,
    "label": "1.7.0",
    "parentId": 1419
  }, {
    "id": 1417,
    "label": "kotlin-stdlib-common-1.7.0.jar",
    "parentId": 1418
  }, {
    "id": 1422,
    "label": "dagger-producers",
    "parentId": 855
  }, {
    "id": 1421,
    "label": "2.43.2",
    "parentId": 1422
  }, {
    "id": 1420,
    "label": "dagger-producers-2.43.2.jar",
    "parentId": 1421
  }, {
    "id": 1425,
    "label": "kotlin-stdlib-jdk7",
    "parentId": 1411
  }, {
    "id": 1424,
    "label": "1.7.0",
    "parentId": 1425
  }, {
    "id": 1423,
    "label": "kotlin-stdlib-jdk7-1.7.0.jar",
    "parentId": 1424
  }, {
    "id": 1428,
    "label": "kotlin-stdlib-jdk8",
    "parentId": 1411
  }, {
    "id": 1427,
    "label": "1.7.0",
    "parentId": 1428
  }, {
    "id": 1426,
    "label": "kotlin-stdlib-jdk8-1.7.0.jar",
    "parentId": 1427
  }, {
    "id": 1433,
    "label": "devtools",
    "parentId": 332
  }, {
    "id": 1432,
    "label": "ksp",
    "parentId": 1433
  }, {
    "id": 1431,
    "label": "symbol-processing-api",
    "parentId": 1432
  }, {
    "id": 1430,
    "label": "1.7.0-1.0.6",
    "parentId": 1431
  }, {
    "id": 1429,
    "label": "symbol-processing-api-1.7.0-1.0.6.jar",
    "parentId": 1430
  }, {
    "id": 1436,
    "label": "dagger-spi",
    "parentId": 855
  }, {
    "id": 1435,
    "label": "2.43.2",
    "parentId": 1436
  }, {
    "id": 1434,
    "label": "dagger-spi-2.43.2.jar",
    "parentId": 1435
  }, {
    "id": 1440,
    "label": "squareup",
    "parentId": 333
  }, {
    "id": 1439,
    "label": "javapoet",
    "parentId": 1440
  }, {
    "id": 1438,
    "label": "1.13.0",
    "parentId": 1439
  }, {
    "id": 1437,
    "label": "javapoet-1.13.0.jar",
    "parentId": 1438
  }, {
    "id": 1444,
    "label": "kotlinx",
    "parentId": 1412
  }, {
    "id": 1443,
    "label": "kotlinx-metadata-jvm",
    "parentId": 1444
  }, {
    "id": 1442,
    "label": "0.5.0",
    "parentId": 1443
  }, {
    "id": 1441,
    "label": "kotlinx-metadata-jvm-0.5.0.jar",
    "parentId": 1442
  }, {
    "id": 1448,
    "label": "googlejavaformat",
    "parentId": 343
  }, {
    "id": 1447,
    "label": "google-java-format",
    "parentId": 1448
  }, {
    "id": 1446,
    "label": "1.5",
    "parentId": 1447
  }, {
    "id": 1445,
    "label": "google-java-format-1.5.jar",
    "parentId": 1446
  }, {
    "id": 1452,
    "label": "errorprone",
    "parentId": 343
  }, {
    "id": 1451,
    "label": "javac-shaded",
    "parentId": 1452
  }, {
    "id": 1450,
    "label": "9-dev-r4023-3",
    "parentId": 1451
  }, {
    "id": 1449,
    "label": "javac-shaded-9-dev-r4023-3.jar",
    "parentId": 1450
  }, {
    "id": 1455,
    "label": "dagger-compiler",
    "parentId": 855
  }, {
    "id": 1454,
    "label": "2.43.2",
    "parentId": 1455
  }, {
    "id": 1453,
    "label": "dagger-compiler-2.43.2.jar",
    "parentId": 1454
  }, {
    "id": 1462,
    "label": "net",
    "parentId": 345
  }, {
    "id": 1461,
    "label": "ltgt",
    "parentId": 1462
  }, {
    "id": 1460,
    "label": "gradle",
    "parentId": 1461
  }, {
    "id": 1459,
    "label": "incap",
    "parentId": 1460
  }, {
    "id": 1458,
    "label": "incap",
    "parentId": 1459
  }, {
    "id": 1457,
    "label": "0.2",
    "parentId": 1458
  }, {
    "id": 1456,
    "label": "incap-0.2.jar",
    "parentId": 1457
  }, {
    "id": 1463,
    "label": "Deps.java",
    "parentId": 796
  }, {
    "id": 1464,
    "label": "DirectoryType.java",
    "parentId": 796
  }, {
    "id": 1465,
    "label": "JdepsMergerTestComponent.java",
    "parentId": 796
  }, {
    "id": 1466,
    "label": "KotlinAbstractTestBuilder.java",
    "parentId": 796
  }, {
    "id": 1467,
    "label": "KotlinBuilderTestComponent.java",
    "parentId": 796
  }, {
    "id": 1468,
    "label": "KotlinJsTestBuilder.java",
    "parentId": 796
  }, {
    "id": 1469,
    "label": "KotlinJvmTestBuilder.java",
    "parentId": 796
  }, {
    "id": 1470,
    "label": "libtest_lib.jdeps",
    "parentId": 720
  }, {
    "id": 1471,
    "label": "libtest_lib-native-header.jar",
    "parentId": 720
  }, {
    "id": 1472,
    "label": "libtest_lib-gensrc.jar",
    "parentId": 720
  }, {
    "id": 1482,
    "label": "_ijar",
    "parentId": 76
  }, {
    "id": 1481,
    "label": "compiler",
    "parentId": 1482
  }, {
    "id": 1480,
    "label": "src",
    "parentId": 1481
  }, {
    "id": 1479,
    "label": "main",
    "parentId": 1480
  }, {
    "id": 1478,
    "label": "kotlin",
    "parentId": 1479
  }, {
    "id": 1477,
    "label": "io",
    "parentId": 1478
  }, {
    "id": 1476,
    "label": "bazel",
    "parentId": 1477
  }, {
    "id": 1475,
    "label": "kotlin",
    "parentId": 1476
  }, {
    "id": 1474,
    "label": "compiler",
    "parentId": 1475
  }, {
    "id": 1473,
    "label": "compiler-ijar.jar",
    "parentId": 1474
  }, {
    "id": 1483,
    "label": "BUILD.release.bazel",
    "parentId": 1076
  }, {
    "id": 1484,
    "label": "ap_kotlin_mixed-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1485,
    "label": "ap_kotlin_mixed-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1486,
    "label": "ap_kotlin_mixed-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1487,
    "label": "ap_kotlin_mixed-kt.jar",
    "parentId": 556
  }, {
    "id": 1488,
    "label": "ap_kotlin_mixed-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1489,
    "label": "ap_kotlin_mixed-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1490,
    "label": "ap_kotlin_mixed-java.jar",
    "parentId": 556
  }, {
    "id": 1491,
    "label": "ap_kotlin_mixed-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1492,
    "label": "ap_kotlin_mixed-java.jdeps",
    "parentId": 556
  }, {
    "id": 1493,
    "label": "ap_kotlin_mixed-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1494,
    "label": "ap_kotlin_mixed-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1495,
    "label": "ap_kotlin_mixed-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1496,
    "label": "ap_kotlin_mixed-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1497,
    "label": "ap_kotlin_mixed-java-src.jar",
    "parentId": 556
  }, {
    "id": 1498,
    "label": "ap_kotlin_mixed.abi.jar",
    "parentId": 556
  }, {
    "id": 1499,
    "label": "ap_kotlin_mixed-sources.jar",
    "parentId": 556
  }, {
    "id": 1500,
    "label": "build.jar",
    "parentId": 577
  }, {
    "id": 1501,
    "label": "build-native-header.jar",
    "parentId": 577
  }, {
    "id": 1502,
    "label": "build.jar_manifest_proto",
    "parentId": 577
  }, {
    "id": 1503,
    "label": "build-src.jar",
    "parentId": 577
  }, {
    "id": 1504,
    "label": "build",
    "parentId": 577
  }, {
    "id": 1505,
    "label": "build_deploy-src.jar",
    "parentId": 577
  }, {
    "id": 1506,
    "label": "build.runfiles_manifest",
    "parentId": 577
  }, {
    "id": 1508,
    "label": "build.runfiles",
    "parentId": 577
  }, {
    "id": 1507,
    "label": "MANIFEST",
    "parentId": 1508
  }, {
    "id": 1509,
    "label": "build_jarjar.jar",
    "parentId": 577
  }, {
    "id": 1510,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Sbuilder_Scmd_Sbuild-runfiles",
    "parentId": 527
  }, {
    "id": 1511,
    "label": "build_deploy.jar.unstripped",
    "parentId": 577
  }, {
    "id": 1512,
    "label": "jarjar_runner.jar",
    "parentId": 20
  }, {
    "id": 1513,
    "label": "jarjar_runner-native-header.jar",
    "parentId": 20
  }, {
    "id": 1514,
    "label": "jarjar_runner.jar_manifest_proto",
    "parentId": 20
  }, {
    "id": 1515,
    "label": "jarjar_runner-src.jar",
    "parentId": 20
  }, {
    "id": 1516,
    "label": "jarjar_runner",
    "parentId": 20
  }, {
    "id": 1521,
    "label": "apache",
    "parentId": 378
  }, {
    "id": 1520,
    "label": "ant",
    "parentId": 1521
  }, {
    "id": 1519,
    "label": "ant-launcher",
    "parentId": 1520
  }, {
    "id": 1518,
    "label": "1.9.9",
    "parentId": 1519
  }, {
    "id": 1517,
    "label": "ant-launcher-1.9.9-sources.jar",
    "parentId": 1518
  }, {
    "id": 1524,
    "label": "ant",
    "parentId": 1520
  }, {
    "id": 1523,
    "label": "1.9.9",
    "parentId": 1524
  }, {
    "id": 1522,
    "label": "ant-1.9.9-sources.jar",
    "parentId": 1523
  }, {
    "id": 1528,
    "label": "commons",
    "parentId": 1521
  }, {
    "id": 1527,
    "label": "commons-lang3",
    "parentId": 1528
  }, {
    "id": 1526,
    "label": "3.4",
    "parentId": 1527
  }, {
    "id": 1525,
    "label": "commons-lang3-3.4-sources.jar",
    "parentId": 1526
  }, {
    "id": 1533,
    "label": "codehaus",
    "parentId": 378
  }, {
    "id": 1532,
    "label": "plexus",
    "parentId": 1533
  }, {
    "id": 1531,
    "label": "plexus-utils",
    "parentId": 1532
  }, {
    "id": 1530,
    "label": "3.0.22",
    "parentId": 1531
  }, {
    "id": 1529,
    "label": "plexus-utils-3.0.22-sources.jar",
    "parentId": 1530
  }, {
    "id": 1537,
    "label": "maven",
    "parentId": 1521
  }, {
    "id": 1536,
    "label": "maven-artifact",
    "parentId": 1537
  }, {
    "id": 1535,
    "label": "3.3.9",
    "parentId": 1536
  }, {
    "id": 1534,
    "label": "maven-artifact-3.3.9-sources.jar",
    "parentId": 1535
  }, {
    "id": 1540,
    "label": "maven-model",
    "parentId": 1537
  }, {
    "id": 1539,
    "label": "3.3.9",
    "parentId": 1540
  }, {
    "id": 1538,
    "label": "maven-model-3.3.9-sources.jar",
    "parentId": 1539
  }, {
    "id": 1543,
    "label": "jsr250-api",
    "parentId": 859
  }, {
    "id": 1542,
    "label": "1.0",
    "parentId": 1543
  }, {
    "id": 1541,
    "label": "jsr250-api-1.0-sources.jar",
    "parentId": 1542
  }, {
    "id": 1547,
    "label": "enterprise",
    "parentId": 850
  }, {
    "id": 1546,
    "label": "cdi-api",
    "parentId": 1547
  }, {
    "id": 1545,
    "label": "1.0",
    "parentId": 1546
  }, {
    "id": 1544,
    "label": "cdi-api-1.0-sources.jar",
    "parentId": 1545
  }, {
    "id": 1550,
    "label": "plexus-component-annotations",
    "parentId": 1532
  }, {
    "id": 1549,
    "label": "1.5.5",
    "parentId": 1550
  }, {
    "id": 1548,
    "label": "plexus-component-annotations-1.5.5-sources.jar",
    "parentId": 1549
  }, {
    "id": 1555,
    "label": "eclipse",
    "parentId": 378
  }, {
    "id": 1554,
    "label": "sisu",
    "parentId": 1555
  }, {
    "id": 1553,
    "label": "org.eclipse.sisu.inject",
    "parentId": 1554
  }, {
    "id": 1552,
    "label": "0.3.2",
    "parentId": 1553
  }, {
    "id": 1551,
    "label": "org.eclipse.sisu.inject-0.3.2-sources.jar",
    "parentId": 1552
  }, {
    "id": 1558,
    "label": "plexus-classworlds",
    "parentId": 1532
  }, {
    "id": 1557,
    "label": "2.5.2",
    "parentId": 1558
  }, {
    "id": 1556,
    "label": "plexus-classworlds-2.5.2-sources.jar",
    "parentId": 1557
  }, {
    "id": 1561,
    "label": "org.eclipse.sisu.plexus",
    "parentId": 1554
  }, {
    "id": 1560,
    "label": "0.3.2",
    "parentId": 1561
  }, {
    "id": 1559,
    "label": "org.eclipse.sisu.plexus-0.3.2-sources.jar",
    "parentId": 1560
  }, {
    "id": 1564,
    "label": "maven-plugin-api",
    "parentId": 1537
  }, {
    "id": 1563,
    "label": "3.3.9",
    "parentId": 1564
  }, {
    "id": 1562,
    "label": "maven-plugin-api-3.3.9-sources.jar",
    "parentId": 1563
  }, {
    "id": 1569,
    "label": "ow2",
    "parentId": 378
  }, {
    "id": 1568,
    "label": "asm",
    "parentId": 1569
  }, {
    "id": 1567,
    "label": "asm",
    "parentId": 1568
  }, {
    "id": 1566,
    "label": "7.0",
    "parentId": 1567
  }, {
    "id": 1565,
    "label": "asm-7.0-sources.jar",
    "parentId": 1566
  }, {
    "id": 1572,
    "label": "asm-tree",
    "parentId": 1568
  }, {
    "id": 1571,
    "label": "7.0",
    "parentId": 1572
  }, {
    "id": 1570,
    "label": "asm-tree-7.0-sources.jar",
    "parentId": 1571
  }, {
    "id": 1575,
    "label": "asm-analysis",
    "parentId": 1568
  }, {
    "id": 1574,
    "label": "7.0",
    "parentId": 1575
  }, {
    "id": 1573,
    "label": "asm-analysis-7.0-sources.jar",
    "parentId": 1574
  }, {
    "id": 1578,
    "label": "asm-commons",
    "parentId": 1568
  }, {
    "id": 1577,
    "label": "7.0",
    "parentId": 1578
  }, {
    "id": 1576,
    "label": "asm-commons-7.0-sources.jar",
    "parentId": 1577
  }, {
    "id": 1582,
    "label": "pantsbuild",
    "parentId": 378
  }, {
    "id": 1581,
    "label": "jarjar",
    "parentId": 1582
  }, {
    "id": 1580,
    "label": "1.7.2",
    "parentId": 1581
  }, {
    "id": 1579,
    "label": "jarjar-1.7.2-sources.jar",
    "parentId": 1580
  }, {
    "id": 1583,
    "label": "jarjar_runner_deploy-src.jar",
    "parentId": 20
  }, {
    "id": 1584,
    "label": "jarjar_runner.runfiles_manifest",
    "parentId": 20
  }, {
    "id": 1586,
    "label": "jarjar_runner.runfiles",
    "parentId": 20
  }, {
    "id": 1585,
    "label": "MANIFEST",
    "parentId": 1586
  }, {
    "id": 1587,
    "label": "ant-1.9.9.jar",
    "parentId": 1523
  }, {
    "id": 1588,
    "label": "ant-launcher-1.9.9.jar",
    "parentId": 1518
  }, {
    "id": 1589,
    "label": "maven-artifact-3.3.9.jar",
    "parentId": 1535
  }, {
    "id": 1590,
    "label": "commons-lang3-3.4.jar",
    "parentId": 1526
  }, {
    "id": 1591,
    "label": "plexus-utils-3.0.22.jar",
    "parentId": 1530
  }, {
    "id": 1592,
    "label": "maven-model-3.3.9.jar",
    "parentId": 1539
  }, {
    "id": 1593,
    "label": "cdi-api-1.0.jar",
    "parentId": 1545
  }, {
    "id": 1594,
    "label": "jsr250-api-1.0.jar",
    "parentId": 1542
  }, {
    "id": 1595,
    "label": "org.eclipse.sisu.plexus-0.3.2.jar",
    "parentId": 1560
  }, {
    "id": 1596,
    "label": "plexus-component-annotations-1.5.5.jar",
    "parentId": 1549
  }, {
    "id": 1597,
    "label": "org.eclipse.sisu.inject-0.3.2.jar",
    "parentId": 1552
  }, {
    "id": 1598,
    "label": "plexus-classworlds-2.5.2.jar",
    "parentId": 1557
  }, {
    "id": 1599,
    "label": "maven-plugin-api-3.3.9.jar",
    "parentId": 1563
  }, {
    "id": 1600,
    "label": "asm-tree-7.0.jar",
    "parentId": 1571
  }, {
    "id": 1601,
    "label": "asm-7.0.jar",
    "parentId": 1566
  }, {
    "id": 1602,
    "label": "asm-analysis-7.0.jar",
    "parentId": 1574
  }, {
    "id": 1603,
    "label": "asm-commons-7.0.jar",
    "parentId": 1577
  }, {
    "id": 1604,
    "label": "jarjar-1.7.2.jar",
    "parentId": 1580
  }, {
    "id": 1605,
    "label": "third_Uparty_Sjarjar_Urunner-runfiles",
    "parentId": 527
  }, {
    "id": 1606,
    "label": "jarjar_runner_deploy.jar.unstripped",
    "parentId": 20
  }, {
    "id": 1607,
    "label": "pkg.manifest",
    "parentId": 716
  }, {
    "id": 1609,
    "label": "kotlin",
    "parentId": 708
  }, {
    "id": 1608,
    "label": "BUILD",
    "parentId": 1609
  }, {
    "id": 1610,
    "label": "BUILD.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1611,
    "label": "compiler.bzl",
    "parentId": 1609
  }, {
    "id": 1612,
    "label": "capabilities_1.4.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1613,
    "label": "capabilities_1.5.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1614,
    "label": "capabilities_1.6.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1615,
    "label": "capabilities_1.7.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1616,
    "label": "capabilities_1.8.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1617,
    "label": "capabilities_legacy.bzl.com_github_jetbrains_kotlin.bazel",
    "parentId": 1609
  }, {
    "id": 1619,
    "label": "propagation",
    "parentId": 869
  }, {
    "id": 1618,
    "label": "RuntimeDependent.java",
    "parentId": 1619
  }, {
    "id": 1620,
    "label": "propagation_test_exporter_lib.abi.jar",
    "parentId": 125
  }, {
    "id": 1621,
    "label": "propagation_rt_via_export_consumer.jdeps",
    "parentId": 125
  }, {
    "id": 1622,
    "label": "propagation_rt_via_export_consumer-native-header.jar",
    "parentId": 125
  }, {
    "id": 1623,
    "label": "propagation_rt_via_export_consumer.jar_manifest_proto",
    "parentId": 125
  }, {
    "id": 1624,
    "label": "propagation_rt_via_export_consumer-src.jar",
    "parentId": 125
  }, {
    "id": 1625,
    "label": "propagation_test_exporter_lib-sources.jar",
    "parentId": 125
  }, {
    "id": 1626,
    "label": "propagation_rt_via_export_consumer_deploy-src.jar",
    "parentId": 125
  }, {
    "id": 1627,
    "label": "propagation_rt_via_export_consumer.runfiles_manifest",
    "parentId": 125
  }, {
    "id": 1629,
    "label": "propagation_rt_via_export_consumer.runfiles",
    "parentId": 125
  }, {
    "id": 1628,
    "label": "MANIFEST",
    "parentId": 1629
  }, {
    "id": 1630,
    "label": "propagation_test_exporter_lib.jar",
    "parentId": 125
  }, {
    "id": 1631,
    "label": "src_Stest_Sdata_Sjvm_Sbasic_Spropagation_Urt_Uvia_Uexport_Uconsumer-runfiles",
    "parentId": 527
  }, {
    "id": 1632,
    "label": "propagation_rt_via_export_consumer_deploy.jar",
    "parentId": 125
  }, {
    "id": 1633,
    "label": "propagation_rt_via_export_consumer_deploy.jar.unstripped",
    "parentId": 125
  }, {
    "id": 1634,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1635,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1636,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1637,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-kt.jar",
    "parentId": 556
  }, {
    "id": 1638,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1639,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1640,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java.jar",
    "parentId": 556
  }, {
    "id": 1641,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1642,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java.jdeps",
    "parentId": 556
  }, {
    "id": 1643,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1644,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1645,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1646,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1647,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-java-src.jar",
    "parentId": 556
  }, {
    "id": 1648,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class.abi.jar",
    "parentId": 556
  }, {
    "id": 1649,
    "label": "ap_kotlin_mixed_multiple_plugins_one_without_processor_class-sources.jar",
    "parentId": 556
  }, {
    "id": 1650,
    "label": "propagation_test_runtime_lib.abi.jar",
    "parentId": 125
  }, {
    "id": 1651,
    "label": "propagation_rt_via_runtime_deps_consumer.jdeps",
    "parentId": 125
  }, {
    "id": 1652,
    "label": "propagation_rt_via_runtime_deps_consumer-native-header.jar",
    "parentId": 125
  }, {
    "id": 1653,
    "label": "propagation_rt_via_runtime_deps_consumer.jar_manifest_proto",
    "parentId": 125
  }, {
    "id": 1654,
    "label": "propagation_rt_via_runtime_deps_consumer-src.jar",
    "parentId": 125
  }, {
    "id": 1655,
    "label": "propagation_test_runtime_lib-sources.jar",
    "parentId": 125
  }, {
    "id": 1656,
    "label": "propagation_rt_via_runtime_deps_consumer_deploy-src.jar",
    "parentId": 125
  }, {
    "id": 1657,
    "label": "propagation_rt_via_runtime_deps_consumer.runfiles_manifest",
    "parentId": 125
  }, {
    "id": 1659,
    "label": "propagation_rt_via_runtime_deps_consumer.runfiles",
    "parentId": 125
  }, {
    "id": 1658,
    "label": "MANIFEST",
    "parentId": 1659
  }, {
    "id": 1660,
    "label": "propagation_test_runtime_lib.jar",
    "parentId": 125
  }, {
    "id": 1661,
    "label": "src_Stest_Sdata_Sjvm_Sbasic_Spropagation_Urt_Uvia_Uruntime_Udeps_Uconsumer-runfiles",
    "parentId": 527
  }, {
    "id": 1662,
    "label": "propagation_rt_via_runtime_deps_consumer_deploy.jar",
    "parentId": 125
  }, {
    "id": 1663,
    "label": "propagation_rt_via_runtime_deps_consumer_deploy.jar.unstripped",
    "parentId": 125
  }, {
    "id": 1664,
    "label": "BUILD.release.bazel",
    "parentId": 1208
  }, {
    "id": 1665,
    "label": "CompileTimeDependent.java",
    "parentId": 1619
  }, {
    "id": 1666,
    "label": "propagation_ct_consumer.jdeps",
    "parentId": 125
  }, {
    "id": 1667,
    "label": "propagation_ct_consumer-native-header.jar",
    "parentId": 125
  }, {
    "id": 1668,
    "label": "propagation_ct_consumer.jar_manifest_proto",
    "parentId": 125
  }, {
    "id": 1669,
    "label": "propagation_ct_consumer-src.jar",
    "parentId": 125
  }, {
    "id": 1670,
    "label": "propagation_ct_consumer_deploy-src.jar",
    "parentId": 125
  }, {
    "id": 1671,
    "label": "propagation_ct_consumer.runfiles_manifest",
    "parentId": 125
  }, {
    "id": 1673,
    "label": "propagation_ct_consumer.runfiles",
    "parentId": 125
  }, {
    "id": 1672,
    "label": "MANIFEST",
    "parentId": 1673
  }, {
    "id": 1674,
    "label": "src_Stest_Sdata_Sjvm_Sbasic_Spropagation_Uct_Uconsumer-runfiles",
    "parentId": 527
  }, {
    "id": 1675,
    "label": "propagation_ct_consumer_deploy.jar",
    "parentId": 125
  }, {
    "id": 1676,
    "label": "propagation_ct_consumer_deploy.jar.unstripped",
    "parentId": 125
  }, {
    "id": 1677,
    "label": "test_module_name_lib-kt.jar",
    "parentId": 125
  }, {
    "id": 1678,
    "label": "test_module_name_lib-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1679,
    "label": "test_module_name_lib.abi.jar",
    "parentId": 125
  }, {
    "id": 1680,
    "label": "ap_kotlin_resources_mixed-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1681,
    "label": "ap_kotlin_resources_mixed-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1682,
    "label": "ap_kotlin_resources_mixed-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1683,
    "label": "ap_kotlin_resources_mixed-kt.jar",
    "parentId": 556
  }, {
    "id": 1684,
    "label": "ap_kotlin_resources_mixed-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1685,
    "label": "ap_kotlin_resources_mixed-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1686,
    "label": "ap_kotlin_resources_mixed-java.jar",
    "parentId": 556
  }, {
    "id": 1687,
    "label": "ap_kotlin_resources_mixed-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1688,
    "label": "ap_kotlin_resources_mixed-java.jdeps",
    "parentId": 556
  }, {
    "id": 1689,
    "label": "ap_kotlin_resources_mixed-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1690,
    "label": "ap_kotlin_resources_mixed-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1691,
    "label": "ap_kotlin_resources_mixed-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1692,
    "label": "ap_kotlin_resources_mixed-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1693,
    "label": "ap_kotlin_resources_mixed-java-src.jar",
    "parentId": 556
  }, {
    "id": 1694,
    "label": "ap_kotlin_resources_mixed.abi.jar",
    "parentId": 556
  }, {
    "id": 1695,
    "label": "ap_kotlin_resources_mixed-sources.jar",
    "parentId": 556
  }, {
    "id": 1696,
    "label": "ap_kotlin_mixed_multiple_plugins-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1697,
    "label": "ap_kotlin_mixed_multiple_plugins-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1698,
    "label": "ap_kotlin_mixed_multiple_plugins-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1699,
    "label": "ap_kotlin_mixed_multiple_plugins-kt.jar",
    "parentId": 556
  }, {
    "id": 1700,
    "label": "ap_kotlin_mixed_multiple_plugins-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1701,
    "label": "ap_kotlin_mixed_multiple_plugins-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1702,
    "label": "ap_kotlin_mixed_multiple_plugins-java.jar",
    "parentId": 556
  }, {
    "id": 1703,
    "label": "ap_kotlin_mixed_multiple_plugins-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1704,
    "label": "ap_kotlin_mixed_multiple_plugins-java.jdeps",
    "parentId": 556
  }, {
    "id": 1705,
    "label": "ap_kotlin_mixed_multiple_plugins-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1706,
    "label": "ap_kotlin_mixed_multiple_plugins-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1707,
    "label": "ap_kotlin_mixed_multiple_plugins-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1708,
    "label": "ap_kotlin_mixed_multiple_plugins-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1709,
    "label": "ap_kotlin_mixed_multiple_plugins-java-src.jar",
    "parentId": 556
  }, {
    "id": 1710,
    "label": "ap_kotlin_mixed_multiple_plugins.abi.jar",
    "parentId": 556
  }, {
    "id": 1711,
    "label": "ap_kotlin_resources-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1712,
    "label": "ap_kotlin_resources-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1713,
    "label": "ap_kotlin_resources-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1714,
    "label": "ap_kotlin_resources-kt.jar",
    "parentId": 556
  }, {
    "id": 1715,
    "label": "ap_kotlin_resources-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1716,
    "label": "ap_kotlin_resources-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1717,
    "label": "ap_kotlin_resources-java.jar",
    "parentId": 556
  }, {
    "id": 1718,
    "label": "ap_kotlin_resources-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1719,
    "label": "ap_kotlin_resources-java.jdeps",
    "parentId": 556
  }, {
    "id": 1720,
    "label": "ap_kotlin_resources-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1721,
    "label": "ap_kotlin_resources-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1722,
    "label": "ap_kotlin_resources-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1723,
    "label": "ap_kotlin_resources-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1724,
    "label": "ap_kotlin_resources-java-src.jar",
    "parentId": 556
  }, {
    "id": 1725,
    "label": "ap_kotlin_resources.abi.jar",
    "parentId": 556
  }, {
    "id": 1726,
    "label": "ap_kotlin_resources-sources.jar",
    "parentId": 556
  }, {
    "id": 1727,
    "label": "test_module_name_attr_lib-kt.jar",
    "parentId": 125
  }, {
    "id": 1728,
    "label": "test_module_name_attr_lib-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1729,
    "label": "test_module_name_attr_lib.abi.jar",
    "parentId": 125
  }, {
    "id": 1730,
    "label": "test_module_name_attr_lib-sources.jar",
    "parentId": 125
  }, {
    "id": 1731,
    "label": "initialize.release.bzl",
    "parentId": 708
  }, {
    "id": 1733,
    "label": "testing",
    "parentId": 174
  }, {
    "id": 1732,
    "label": "Temporary.kt",
    "parentId": 1733
  }, {
    "id": 1734,
    "label": "testing-kt.jar",
    "parentId": 1230
  }, {
    "id": 1735,
    "label": "testing-kt.jdeps",
    "parentId": 1230
  }, {
    "id": 1736,
    "label": "testing.jdeps",
    "parentId": 1230
  }, {
    "id": 1737,
    "label": "testing-sources.jar",
    "parentId": 1230
  }, {
    "id": 1738,
    "label": "BUILD.release.bazel",
    "parentId": 1131
  }, {
    "id": 1742,
    "label": "protobuf",
    "parentId": 110
  }, {
    "id": 1741,
    "label": "protobuf-java-util",
    "parentId": 1742
  }, {
    "id": 1740,
    "label": "3.6.0",
    "parentId": 1741
  }, {
    "id": 1739,
    "label": "header_protobuf-java-util-3.6.0.jar",
    "parentId": 1740
  }, {
    "id": 1745,
    "label": "java",
    "parentId": 531
  }, {
    "id": 1744,
    "label": "runfiles",
    "parentId": 1745
  }, {
    "id": 1743,
    "label": "Runfiles.java",
    "parentId": 1744
  }, {
    "id": 1746,
    "label": "Util.java",
    "parentId": 1744
  }, {
    "id": 1747,
    "label": "librunfiles.jdeps",
    "parentId": 825
  }, {
    "id": 1748,
    "label": "librunfiles-native-header.jar",
    "parentId": 825
  }, {
    "id": 1749,
    "label": "librunfiles.jar_manifest_proto",
    "parentId": 825
  }, {
    "id": 1750,
    "label": "librunfiles-hjar.jar",
    "parentId": 825
  }, {
    "id": 1751,
    "label": "librunfiles-hjar.jdeps",
    "parentId": 825
  }, {
    "id": 1752,
    "label": "librunfiles-src.jar",
    "parentId": 825
  }, {
    "id": 1753,
    "label": "skip-code-gen.jar",
    "parentId": 844
  }, {
    "id": 1754,
    "label": "skip-code-gen-native-header.jar",
    "parentId": 844
  }, {
    "id": 1755,
    "label": "skip-code-gen.jar_manifest_proto",
    "parentId": 844
  }, {
    "id": 1756,
    "label": "skip-code-gen-src.jar",
    "parentId": 844
  }, {
    "id": 1757,
    "label": "skip-code-gen",
    "parentId": 844
  }, {
    "id": 1758,
    "label": "skip-code-gen-services.jar",
    "parentId": 844
  }, {
    "id": 1759,
    "label": "skip-code-gen_deploy-src.jar",
    "parentId": 844
  }, {
    "id": 1760,
    "label": "skip-code-gen.runfiles_manifest",
    "parentId": 844
  }, {
    "id": 1762,
    "label": "skip-code-gen.runfiles",
    "parentId": 844
  }, {
    "id": 1761,
    "label": "MANIFEST",
    "parentId": 1762
  }, {
    "id": 1763,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Splugin_Sskip-code-gen-runfiles",
    "parentId": 527
  }, {
    "id": 1764,
    "label": "skip-code-gen_deploy.jar.unstripped",
    "parentId": 844
  }, {
    "id": 1767,
    "label": "testresources",
    "parentId": 869
  }, {
    "id": 1766,
    "label": "src",
    "parentId": 1767
  }, {
    "id": 1765,
    "label": "AClass.kt",
    "parentId": 1766
  }, {
    "id": 1768,
    "label": "test_embed_resources-kt.jar",
    "parentId": 125
  }, {
    "id": 1769,
    "label": "test_embed_resources-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1770,
    "label": "test_embed_resources.abi.jar",
    "parentId": 125
  }, {
    "id": 1771,
    "label": "test_embed_resources.jdeps",
    "parentId": 125
  }, {
    "id": 1772,
    "label": "test_embed_resources_resources_zipper_args",
    "parentId": 125
  }, {
    "id": 1775,
    "label": "resources",
    "parentId": 1767
  }, {
    "id": 1774,
    "label": "one",
    "parentId": 1775
  }, {
    "id": 1773,
    "label": "alsoAFile.txt",
    "parentId": 1774
  }, {
    "id": 1777,
    "label": "two",
    "parentId": 1774
  }, {
    "id": 1776,
    "label": "aFile.txt",
    "parentId": 1777
  }, {
    "id": 1780,
    "label": "zip",
    "parentId": 531
  }, {
    "id": 1779,
    "label": "zipper",
    "parentId": 1780
  }, {
    "id": 1778,
    "label": "zipper",
    "parentId": 1779
  }, {
    "id": 1781,
    "label": "test_embed_resources-resources.jar",
    "parentId": 125
  }, {
    "id": 1782,
    "label": "test_embed_resources-sources.jar",
    "parentId": 125
  }, {
    "id": 1783,
    "label": "conventional_strip_resources-kt.jar",
    "parentId": 125
  }, {
    "id": 1784,
    "label": "conventional_strip_resources-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1785,
    "label": "conventional_strip_resources.abi.jar",
    "parentId": 125
  }, {
    "id": 1786,
    "label": "conventional_strip_resources.jdeps",
    "parentId": 125
  }, {
    "id": 1787,
    "label": "conventional_strip_resources_resources_zipper_args",
    "parentId": 125
  }, {
    "id": 1792,
    "label": "conventional_strip_resources",
    "parentId": 869
  }, {
    "id": 1791,
    "label": "src",
    "parentId": 1792
  }, {
    "id": 1790,
    "label": "main",
    "parentId": 1791
  }, {
    "id": 1789,
    "label": "java",
    "parentId": 1790
  }, {
    "id": 1788,
    "label": "java_main.txt",
    "parentId": 1789
  }, {
    "id": 1794,
    "label": "resources",
    "parentId": 1790
  }, {
    "id": 1793,
    "label": "main.txt",
    "parentId": 1794
  }, {
    "id": 1797,
    "label": "test",
    "parentId": 1791
  }, {
    "id": 1796,
    "label": "java",
    "parentId": 1797
  }, {
    "id": 1795,
    "label": "java_test.txt",
    "parentId": 1796
  }, {
    "id": 1799,
    "label": "resources",
    "parentId": 1797
  }, {
    "id": 1798,
    "label": "test.txt",
    "parentId": 1799
  }, {
    "id": 1800,
    "label": "conventional_strip_resources-resources.jar",
    "parentId": 125
  }, {
    "id": 1801,
    "label": "conventional_strip_resources-sources.jar",
    "parentId": 125
  }, {
    "id": 1806,
    "label": "com_github_jetbrains_kotlin",
    "parentId": 105
  }, {
    "id": 1805,
    "label": "_ijar",
    "parentId": 1806
  }, {
    "id": 1804,
    "label": "kotlin-preloader",
    "parentId": 1805
  }, {
    "id": 1803,
    "label": "lib",
    "parentId": 1804
  }, {
    "id": 1802,
    "label": "kotlin-preloader-ijar.jar",
    "parentId": 1803
  }, {
    "id": 1809,
    "label": "protobuf-java",
    "parentId": 1742
  }, {
    "id": 1808,
    "label": "3.6.0",
    "parentId": 1809
  }, {
    "id": 1807,
    "label": "header_protobuf-java-3.6.0.jar",
    "parentId": 1808
  }, {
    "id": 1810,
    "label": "merge_jdeps_raw_deploy.jar",
    "parentId": 577
  }, {
    "id": 1814,
    "label": "builder",
    "parentId": 703
  }, {
    "id": 1813,
    "label": "utils",
    "parentId": 1814
  }, {
    "id": 1812,
    "label": "jars",
    "parentId": 1813
  }, {
    "id": 1811,
    "label": "JarCreator.kt",
    "parentId": 1812
  }, {
    "id": 1815,
    "label": "JarExtractor.kt",
    "parentId": 1812
  }, {
    "id": 1816,
    "label": "JarHelper.kt",
    "parentId": 1812
  }, {
    "id": 1817,
    "label": "JarOwner.kt",
    "parentId": 1812
  }, {
    "id": 1818,
    "label": "SourceJarCreator.kt",
    "parentId": 1812
  }, {
    "id": 1819,
    "label": "SourceJarExtractor.kt",
    "parentId": 1812
  }, {
    "id": 1824,
    "label": "bazel_tools",
    "parentId": 32
  }, {
    "id": 1823,
    "label": "src",
    "parentId": 1824
  }, {
    "id": 1822,
    "label": "main",
    "parentId": 1823
  }, {
    "id": 1821,
    "label": "protobuf",
    "parentId": 1822
  }, {
    "id": 1820,
    "label": "deps_proto-speed-src.jar",
    "parentId": 1821
  }, {
    "id": 1825,
    "label": "libdeps_proto-speed.jar",
    "parentId": 1821
  }, {
    "id": 1827,
    "label": "tasks",
    "parentId": 1814
  }, {
    "id": 1826,
    "label": "CompileKotlin.kt",
    "parentId": 1827
  }, {
    "id": 1828,
    "label": "KotlinBuilder.kt",
    "parentId": 1827
  }, {
    "id": 1829,
    "label": "MergeJdeps.kt",
    "parentId": 1827
  }, {
    "id": 1831,
    "label": "js",
    "parentId": 1827
  }, {
    "id": 1830,
    "label": "Kotlin2JsTaskExecutor.kt",
    "parentId": 1831
  }, {
    "id": 1833,
    "label": "jvm",
    "parentId": 1827
  }, {
    "id": 1832,
    "label": "CompilationArgs.kt",
    "parentId": 1833
  }, {
    "id": 1834,
    "label": "CompilationTask.kt",
    "parentId": 1833
  }, {
    "id": 1835,
    "label": "InternalCompilerPlugins.kt",
    "parentId": 1833
  }, {
    "id": 1836,
    "label": "JDepsGenerator.kt",
    "parentId": 1833
  }, {
    "id": 1837,
    "label": "JacocoInstrumentation.kt",
    "parentId": 1833
  }, {
    "id": 1838,
    "label": "JdepsMerger.kt",
    "parentId": 1833
  }, {
    "id": 1839,
    "label": "JdepsParser.kt",
    "parentId": 1833
  }, {
    "id": 1840,
    "label": "KotlinJvmTaskExecutor.kt",
    "parentId": 1833
  }, {
    "id": 1842,
    "label": "protobuf",
    "parentId": 186
  }, {
    "id": 1841,
    "label": "kotlin_model_proto-speed-src.jar",
    "parentId": 1842
  }, {
    "id": 1843,
    "label": "libkotlin_model_proto-speed.jar",
    "parentId": 1842
  }, {
    "id": 1844,
    "label": "worker_protocol_proto-speed-src.jar",
    "parentId": 1821
  }, {
    "id": 1845,
    "label": "libworker_protocol_proto-speed.jar",
    "parentId": 1821
  }, {
    "id": 1847,
    "label": "toolchain",
    "parentId": 181
  }, {
    "id": 1846,
    "label": "toolchain.jar",
    "parentId": 1847
  }, {
    "id": 1849,
    "label": "utils",
    "parentId": 181
  }, {
    "id": 1848,
    "label": "utils.jar",
    "parentId": 1849
  }, {
    "id": 1851,
    "label": "jars",
    "parentId": 1849
  }, {
    "id": 1850,
    "label": "jars.jar",
    "parentId": 1851
  }, {
    "id": 1853,
    "label": "worker",
    "parentId": 183
  }, {
    "id": 1852,
    "label": "worker.jar",
    "parentId": 1853
  }, {
    "id": 1854,
    "label": "libbuilder.jar_manifest_proto",
    "parentId": 578
  }, {
    "id": 1855,
    "label": "libbuilder-gen.jar",
    "parentId": 578
  }, {
    "id": 1856,
    "label": "JdepsMergerComponent.java",
    "parentId": 1814
  }, {
    "id": 1857,
    "label": "KotlinBuilderComponent.java",
    "parentId": 1814
  }, {
    "id": 1858,
    "label": "libworker_protocol_proto-speed-hjar.jdeps",
    "parentId": 749
  }, {
    "id": 1859,
    "label": "libbuilder.jdeps",
    "parentId": 578
  }, {
    "id": 1860,
    "label": "libbuilder-native-header.jar",
    "parentId": 578
  }, {
    "id": 1861,
    "label": "libbuilder-gensrc.jar",
    "parentId": 578
  }, {
    "id": 1864,
    "label": "auto-value",
    "parentId": 166
  }, {
    "id": 1863,
    "label": "1.10.1",
    "parentId": 1864
  }, {
    "id": 1862,
    "label": "header_auto-value-1.10.1.jar",
    "parentId": 1863
  }, {
    "id": 1865,
    "label": "build_raw_deploy.jar",
    "parentId": 577
  }, {
    "id": 1868,
    "label": "tools",
    "parentId": 1824
  }, {
    "id": 1867,
    "label": "jdk",
    "parentId": 1868
  }, {
    "id": 1866,
    "label": "platformclasspath.jar",
    "parentId": 1867
  }, {
    "id": 1879,
    "label": "kotlin_rules_maven",
    "parentId": 32
  }, {
    "id": 1878,
    "label": "v1",
    "parentId": 1879
  }, {
    "id": 1877,
    "label": "https",
    "parentId": 1878
  }, {
    "id": 1876,
    "label": "repo1.maven.org",
    "parentId": 1877
  }, {
    "id": 1875,
    "label": "maven2",
    "parentId": 1876
  }, {
    "id": 1874,
    "label": "com",
    "parentId": 1875
  }, {
    "id": 1873,
    "label": "google",
    "parentId": 1874
  }, {
    "id": 1872,
    "label": "guava",
    "parentId": 1873
  }, {
    "id": 1871,
    "label": "guava",
    "parentId": 1872
  }, {
    "id": 1870,
    "label": "31.0.1-jre",
    "parentId": 1871
  }, {
    "id": 1869,
    "label": "header_guava-31.0.1-jre.jar",
    "parentId": 1870
  }, {
    "id": 1889,
    "label": "maven-central.storage.googleapis.com",
    "parentId": 1877
  }, {
    "id": 1888,
    "label": "repos",
    "parentId": 1889
  }, {
    "id": 1887,
    "label": "central",
    "parentId": 1888
  }, {
    "id": 1886,
    "label": "data",
    "parentId": 1887
  }, {
    "id": 1885,
    "label": "com",
    "parentId": 1886
  }, {
    "id": 1884,
    "label": "google",
    "parentId": 1885
  }, {
    "id": 1883,
    "label": "guava",
    "parentId": 1884
  }, {
    "id": 1882,
    "label": "listenablefuture",
    "parentId": 1883
  }, {
    "id": 1881,
    "label": "9999.0-empty-to-avoid-conflict-with-guava",
    "parentId": 1882
  }, {
    "id": 1880,
    "label": "header_listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar",
    "parentId": 1881
  }, {
    "id": 1893,
    "label": "j2objc",
    "parentId": 1884
  }, {
    "id": 1892,
    "label": "j2objc-annotations",
    "parentId": 1893
  }, {
    "id": 1891,
    "label": "1.3",
    "parentId": 1892
  }, {
    "id": 1890,
    "label": "header_j2objc-annotations-1.3.jar",
    "parentId": 1891
  }, {
    "id": 1898,
    "label": "code",
    "parentId": 1884
  }, {
    "id": 1897,
    "label": "findbugs",
    "parentId": 1898
  }, {
    "id": 1896,
    "label": "jsr305",
    "parentId": 1897
  }, {
    "id": 1895,
    "label": "3.0.2",
    "parentId": 1896
  }, {
    "id": 1894,
    "label": "header_jsr305-3.0.2.jar",
    "parentId": 1895
  }, {
    "id": 1902,
    "label": "errorprone",
    "parentId": 1873
  }, {
    "id": 1901,
    "label": "error_prone_annotations",
    "parentId": 1902
  }, {
    "id": 1900,
    "label": "2.7.1",
    "parentId": 1901
  }, {
    "id": 1899,
    "label": "header_error_prone_annotations-2.7.1.jar",
    "parentId": 1900
  }, {
    "id": 1907,
    "label": "org",
    "parentId": 1875
  }, {
    "id": 1906,
    "label": "checkerframework",
    "parentId": 1907
  }, {
    "id": 1905,
    "label": "checker-qual",
    "parentId": 1906
  }, {
    "id": 1904,
    "label": "3.12.0",
    "parentId": 1905
  }, {
    "id": 1903,
    "label": "header_checker-qual-3.12.0.jar",
    "parentId": 1904
  }, {
    "id": 1910,
    "label": "failureaccess",
    "parentId": 1883
  }, {
    "id": 1909,
    "label": "1.0.1",
    "parentId": 1910
  }, {
    "id": 1908,
    "label": "header_failureaccess-1.0.1.jar",
    "parentId": 1909
  }, {
    "id": 1914,
    "label": "auto",
    "parentId": 1873
  }, {
    "id": 1913,
    "label": "auto-common",
    "parentId": 1914
  }, {
    "id": 1912,
    "label": "1.2",
    "parentId": 1913
  }, {
    "id": 1911,
    "label": "header_auto-common-1.2.jar",
    "parentId": 1912
  }, {
    "id": 1918,
    "label": "service",
    "parentId": 1914
  }, {
    "id": 1917,
    "label": "auto-service",
    "parentId": 1918
  }, {
    "id": 1916,
    "label": "1.0.1",
    "parentId": 1917
  }, {
    "id": 1915,
    "label": "header_auto-service-1.0.1.jar",
    "parentId": 1916
  }, {
    "id": 1921,
    "label": "auto-service-annotations",
    "parentId": 1918
  }, {
    "id": 1920,
    "label": "1.0.1",
    "parentId": 1921
  }, {
    "id": 1919,
    "label": "header_auto-service-annotations-1.0.1.jar",
    "parentId": 1920
  }, {
    "id": 1926,
    "label": "test",
    "parentId": 187
  }, {
    "id": 1925,
    "label": "data",
    "parentId": 1926
  }, {
    "id": 1924,
    "label": "jvm",
    "parentId": 1925
  }, {
    "id": 1923,
    "label": "kapt",
    "parentId": 1924
  }, {
    "id": 1922,
    "label": "libautoservice.jar",
    "parentId": 1923
  }, {
    "id": 1927,
    "label": "libautoservice-native-header.jar",
    "parentId": 1923
  }, {
    "id": 1928,
    "label": "libautoservice.jar_manifest_proto",
    "parentId": 1923
  }, {
    "id": 1929,
    "label": "libautoservice-src.jar",
    "parentId": 1923
  }, {
    "id": 1930,
    "label": "test_embed_resources_strip_prefix-kt.jar",
    "parentId": 125
  }, {
    "id": 1931,
    "label": "test_embed_resources_strip_prefix-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1932,
    "label": "test_embed_resources_strip_prefix.abi.jar",
    "parentId": 125
  }, {
    "id": 1933,
    "label": "test_embed_resources_strip_prefix.jdeps",
    "parentId": 125
  }, {
    "id": 1934,
    "label": "test_embed_resources_strip_prefix_resources_zipper_args",
    "parentId": 125
  }, {
    "id": 1935,
    "label": "test_embed_resources_strip_prefix-resources.jar",
    "parentId": 125
  }, {
    "id": 1936,
    "label": "test_embed_resources_strip_prefix-sources.jar",
    "parentId": 125
  }, {
    "id": 1937,
    "label": "Stub.kt",
    "parentId": 1619
  }, {
    "id": 1938,
    "label": "propagation_test_exporter_lib-kt.jar",
    "parentId": 125
  }, {
    "id": 1939,
    "label": "propagation_test_exporter_lib-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1940,
    "label": "propagation_test_exporter_lib.jdeps",
    "parentId": 125
  }, {
    "id": 1941,
    "label": "propagation_test_runtime_lib-kt.jar",
    "parentId": 125
  }, {
    "id": 1942,
    "label": "propagation_test_runtime_lib-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1943,
    "label": "propagation_test_runtime_lib.jdeps",
    "parentId": 125
  }, {
    "id": 1944,
    "label": "test_merge_resourcesjar-kt.jar",
    "parentId": 125
  }, {
    "id": 1945,
    "label": "test_merge_resourcesjar-kt.jdeps",
    "parentId": 125
  }, {
    "id": 1946,
    "label": "test_merge_resourcesjar.abi.jar",
    "parentId": 125
  }, {
    "id": 1947,
    "label": "test_merge_resourcesjar.jdeps",
    "parentId": 125
  }, {
    "id": 1948,
    "label": "libresourcejar.jar",
    "parentId": 125
  }, {
    "id": 1949,
    "label": "test_merge_resourcesjar-sources.jar",
    "parentId": 125
  }, {
    "id": 1953,
    "label": "value",
    "parentId": 1914
  }, {
    "id": 1952,
    "label": "auto-value",
    "parentId": 1953
  }, {
    "id": 1951,
    "label": "1.10.1",
    "parentId": 1952
  }, {
    "id": 1950,
    "label": "header_auto-value-1.10.1.jar",
    "parentId": 1951
  }, {
    "id": 1954,
    "label": "libautovalue.jar",
    "parentId": 1923
  }, {
    "id": 1955,
    "label": "libautovalue-native-header.jar",
    "parentId": 1923
  }, {
    "id": 1956,
    "label": "libautovalue.jar_manifest_proto",
    "parentId": 1923
  }, {
    "id": 1957,
    "label": "libautovalue-src.jar",
    "parentId": 1923
  }, {
    "id": 1958,
    "label": "libdagger.jar",
    "parentId": 20
  }, {
    "id": 1959,
    "label": "libdagger-native-header.jar",
    "parentId": 20
  }, {
    "id": 1960,
    "label": "libdagger.jar_manifest_proto",
    "parentId": 20
  }, {
    "id": 1961,
    "label": "liblibrary_exporting_autovalue_and_junit.jar",
    "parentId": 556
  }, {
    "id": 1962,
    "label": "liblibrary_exporting_autovalue_and_junit-native-header.jar",
    "parentId": 556
  }, {
    "id": 1963,
    "label": "liblibrary_exporting_autovalue_and_junit.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1964,
    "label": "liblibrary_exporting_autovalue_and_junit-src.jar",
    "parentId": 556
  }, {
    "id": 1965,
    "label": "ap_kotlin-kapt-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1966,
    "label": "ap_kotlin-kapt-generated-stub.jar",
    "parentId": 556
  }, {
    "id": 1967,
    "label": "ap_kotlin-kapt-generated-class.jar",
    "parentId": 556
  }, {
    "id": 1968,
    "label": "ap_kotlin-kt.jar",
    "parentId": 556
  }, {
    "id": 1969,
    "label": "ap_kotlin-kt.jdeps",
    "parentId": 556
  }, {
    "id": 1970,
    "label": "ap_kotlin-java.jar_manifest_proto",
    "parentId": 556
  }, {
    "id": 1971,
    "label": "ap_kotlin-java.jar",
    "parentId": 556
  }, {
    "id": 1972,
    "label": "ap_kotlin-java-gen.jar",
    "parentId": 556
  }, {
    "id": 1973,
    "label": "ap_kotlin-java.jdeps",
    "parentId": 556
  }, {
    "id": 1974,
    "label": "ap_kotlin-java-native-header.jar",
    "parentId": 556
  }, {
    "id": 1975,
    "label": "ap_kotlin-java-gensrc.jar",
    "parentId": 556
  }, {
    "id": 1976,
    "label": "ap_kotlin-java-hjar.jar",
    "parentId": 556
  }, {
    "id": 1977,
    "label": "ap_kotlin-java-hjar.jdeps",
    "parentId": 556
  }, {
    "id": 1978,
    "label": "ap_kotlin-java-src.jar",
    "parentId": 556
  }, {
    "id": 1979,
    "label": "ap_kotlin.abi.jar",
    "parentId": 556
  }, {
    "id": 1980,
    "label": "ap_kotlin.jdeps",
    "parentId": 556
  }, {
    "id": 1981,
    "label": "ap_kotlin-sources.jar",
    "parentId": 556
  }, {
    "id": 1982,
    "label": "BazelK2JVMCompiler.kt",
    "parentId": 702
  }, {
    "id": 1983,
    "label": "jdeps-gen.jar",
    "parentId": 843
  }, {
    "id": 1984,
    "label": "jdeps-gen-native-header.jar",
    "parentId": 843
  }, {
    "id": 1985,
    "label": "jdeps-gen.jar_manifest_proto",
    "parentId": 843
  }, {
    "id": 1986,
    "label": "jdeps-gen-src.jar",
    "parentId": 843
  }, {
    "id": 1987,
    "label": "jdeps-gen",
    "parentId": 843
  }, {
    "id": 1988,
    "label": "jdeps-gen-services.jar",
    "parentId": 843
  }, {
    "id": 1989,
    "label": "jdeps-gen_deploy-src.jar",
    "parentId": 843
  }, {
    "id": 1990,
    "label": "jdeps-gen.runfiles_manifest",
    "parentId": 843
  }, {
    "id": 1992,
    "label": "jdeps-gen.runfiles",
    "parentId": 843
  }, {
    "id": 1991,
    "label": "MANIFEST",
    "parentId": 1992
  }, {
    "id": 1993,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Skotlin_Splugin_Sjdeps_Sjdeps-gen-runfiles",
    "parentId": 527
  }, {
    "id": 1994,
    "label": "jdeps-gen_deploy.jar.unstripped",
    "parentId": 843
  }, {
    "id": 1997,
    "label": "auto-value-annotations",
    "parentId": 1953
  }, {
    "id": 1996,
    "label": "1.10.1",
    "parentId": 1997
  }, {
    "id": 1995,
    "label": "header_auto-value-annotations-1.10.1.jar",
    "parentId": 1996
  }, {
    "id": 1998,
    "label": "libautovalue_no_processor_class.jar",
    "parentId": 1923
  }, {
    "id": 1999,
    "label": "libautovalue_no_processor_class-native-header.jar",
    "parentId": 1923
  }, {
    "id": 2000,
    "label": "libautovalue_no_processor_class.jar_manifest_proto",
    "parentId": 1923
  }, {
    "id": 2001,
    "label": "libautovalue_no_processor_class-src.jar",
    "parentId": 1923
  }, {
    "id": 2002,
    "label": "libautovalue.jar",
    "parentId": 20
  }, {
    "id": 2003,
    "label": "libautovalue-native-header.jar",
    "parentId": 20
  }, {
    "id": 2004,
    "label": "libautovalue.jar_manifest_proto",
    "parentId": 20
  }, {
    "id": 2005,
    "label": "ArgMap.kt",
    "parentId": 1813
  }, {
    "id": 2006,
    "label": "BazelRunFiles.kt",
    "parentId": 1813
  }, {
    "id": 2007,
    "label": "IOUtils.kt",
    "parentId": 1813
  }, {
    "id": 2008,
    "label": "MiscUtils.kt",
    "parentId": 1813
  }, {
    "id": 2009,
    "label": "TaskUtils.kt",
    "parentId": 1813
  }, {
    "id": 2010,
    "label": "WorkingDirectoryContext.kt",
    "parentId": 1813
  }, {
    "id": 2013,
    "label": "java",
    "parentId": 1868
  }, {
    "id": 2012,
    "label": "runfiles",
    "parentId": 2013
  }, {
    "id": 2011,
    "label": "librunfiles.jar",
    "parentId": 2012
  }, {
    "id": 2017,
    "label": "pantsbuild",
    "parentId": 157
  }, {
    "id": 2016,
    "label": "jarjar",
    "parentId": 2017
  }, {
    "id": 2015,
    "label": "1.7.2",
    "parentId": 2016
  }, {
    "id": 2014,
    "label": "header_jarjar-1.7.2.jar",
    "parentId": 2015
  }, {
    "id": 2028,
    "label": "_ijar",
    "parentId": 843
  }, {
    "id": 2027,
    "label": "jdeps-gen-lib",
    "parentId": 2028
  }, {
    "id": 2026,
    "label": "src",
    "parentId": 2027
  }, {
    "id": 2025,
    "label": "main",
    "parentId": 2026
  }, {
    "id": 2024,
    "label": "kotlin",
    "parentId": 2025
  }, {
    "id": 2023,
    "label": "io",
    "parentId": 2024
  }, {
    "id": 2022,
    "label": "bazel",
    "parentId": 2023
  }, {
    "id": 2021,
    "label": "kotlin",
    "parentId": 2022
  }, {
    "id": 2020,
    "label": "plugin",
    "parentId": 2021
  }, {
    "id": 2019,
    "label": "jdeps",
    "parentId": 2020
  }, {
    "id": 2018,
    "label": "jdeps-gen-lib-ijar.jar",
    "parentId": 2019
  }, {
    "id": 2030,
    "label": "toolchain",
    "parentId": 1814
  }, {
    "id": 2029,
    "label": "CompilationTaskContext.kt",
    "parentId": 2030
  }, {
    "id": 2031,
    "label": "KotlinToolException.kt",
    "parentId": 2030
  }, {
    "id": 2032,
    "label": "KotlinToolchain.kt",
    "parentId": 2030
  }, {
    "id": 2034,
    "label": "plugin",
    "parentId": 182
  }, {
    "id": 2033,
    "label": "skip-code-gen-lib.jar",
    "parentId": 2034
  }, {
    "id": 2036,
    "label": "jdeps",
    "parentId": 2034
  }, {
    "id": 2035,
    "label": "jdeps-gen-lib.jar",
    "parentId": 2036
  }, {
    "id": 2041,
    "label": "remote_java_tools",
    "parentId": 105
  }, {
    "id": 2040,
    "label": "_ijar",
    "parentId": 2041
  }, {
    "id": 2039,
    "label": "jacoco_coverage_runner",
    "parentId": 2040
  }, {
    "id": 2038,
    "label": "java_tools",
    "parentId": 2039
  }, {
    "id": 2037,
    "label": "JacocoCoverage_jarjar_deploy-ijar.jar",
    "parentId": 2038
  }, {
    "id": 2042,
    "label": "libresourcejar-class.jar",
    "parentId": 125
  }, {
    "id": 2045,
    "label": "resourcejar",
    "parentId": 869
  }, {
    "id": 2044,
    "label": "pkg",
    "parentId": 2045
  }, {
    "id": 2043,
    "label": "file.txt",
    "parentId": 2044
  }, {
    "id": 2046,
    "label": "libresourcejar-native-header.jar",
    "parentId": 125
  }, {
    "id": 2047,
    "label": "libresourcejar.jar_manifest_proto",
    "parentId": 125
  }, {
    "id": 2048,
    "label": "libresourcejar-src.jar",
    "parentId": 125
  }, {
    "id": 2053,
    "label": "ow2",
    "parentId": 157
  }, {
    "id": 2052,
    "label": "asm",
    "parentId": 2053
  }, {
    "id": 2051,
    "label": "asm",
    "parentId": 2052
  }, {
    "id": 2050,
    "label": "7.0",
    "parentId": 2051
  }, {
    "id": 2049,
    "label": "header_asm-7.0.jar",
    "parentId": 2050
  }, {
    "id": 2061,
    "label": "worker_proto",
    "parentId": 787
  }, {
    "id": 2060,
    "label": "src",
    "parentId": 2061
  }, {
    "id": 2059,
    "label": "main",
    "parentId": 2060
  }, {
    "id": 2058,
    "label": "kotlin",
    "parentId": 2059
  }, {
    "id": 2057,
    "label": "io",
    "parentId": 2058
  }, {
    "id": 2056,
    "label": "bazel",
    "parentId": 2057
  }, {
    "id": 2055,
    "label": "worker",
    "parentId": 2056
  }, {
    "id": 2054,
    "label": "worker_proto_bundle_bin_deploy-ijar.jar",
    "parentId": 2055
  }, {
    "id": 2062,
    "label": "AutoBazelRepositoryProcessor.java",
    "parentId": 1744
  }, {
    "id": 2063,
    "label": "libauto_bazel_repository_processor.jar",
    "parentId": 2012
  }, {
    "id": 2064,
    "label": "libauto_bazel_repository_processor.jdeps",
    "parentId": 2012
  }, {
    "id": 2065,
    "label": "libauto_bazel_repository_processor-native-header.jar",
    "parentId": 2012
  }, {
    "id": 2066,
    "label": "libauto_bazel_repository_processor.jar_manifest_proto",
    "parentId": 2012
  }, {
    "id": 2067,
    "label": "libauto_bazel_repository_processor-hjar.jar",
    "parentId": 2012
  }, {
    "id": 2068,
    "label": "libauto_bazel_repository_processor-hjar.jdeps",
    "parentId": 2012
  }, {
    "id": 2069,
    "label": "libauto_bazel_repository_processor-src.jar",
    "parentId": 2012
  }, {
    "id": 2071,
    "label": "worker",
    "parentId": 704
  }, {
    "id": 2070,
    "label": "ContextLog.kt",
    "parentId": 2071
  }, {
    "id": 2072,
    "label": "CpuTimeBasedGcScheduler.kt",
    "parentId": 2071
  }, {
    "id": 2073,
    "label": "GcScheduler.kt",
    "parentId": 2071
  }, {
    "id": 2074,
    "label": "IO.kt",
    "parentId": 2071
  }, {
    "id": 2075,
    "label": "InvocationWorker.kt",
    "parentId": 2071
  }, {
    "id": 2076,
    "label": "PersistentWorker.kt",
    "parentId": 2071
  }, {
    "id": 2077,
    "label": "Status.kt",
    "parentId": 2071
  }, {
    "id": 2078,
    "label": "TaskResult.kt",
    "parentId": 2071
  }, {
    "id": 2079,
    "label": "Work.kt",
    "parentId": 2071
  }, {
    "id": 2080,
    "label": "Worker.kt",
    "parentId": 2071
  }, {
    "id": 2081,
    "label": "WorkerContext.kt",
    "parentId": 2071
  }, {
    "id": 2082,
    "label": "WorkingDirectoryContext.kt",
    "parentId": 2071
  }, {
    "id": 2083,
    "label": "worker_proto_bundle_bin_deploy.jar",
    "parentId": 1853
  }, {
    "id": 2084,
    "label": "libautovalue_plugin.jar",
    "parentId": 1070
  }, {
    "id": 2085,
    "label": "libautovalue_plugin-native-header.jar",
    "parentId": 1070
  }, {
    "id": 2086,
    "label": "libautovalue_plugin.jar_manifest_proto",
    "parentId": 1070
  }, {
    "id": 2087,
    "label": "libautovalue_plugin-src.jar",
    "parentId": 1070
  }, {
    "id": 2088,
    "label": "AutoBazelRepository.java",
    "parentId": 1744
  }, {
    "id": 2089,
    "label": "libauto_bazel_repository.jdeps",
    "parentId": 825
  }, {
    "id": 2090,
    "label": "libauto_bazel_repository-native-header.jar",
    "parentId": 825
  }, {
    "id": 2091,
    "label": "libauto_bazel_repository.jar_manifest_proto",
    "parentId": 825
  }, {
    "id": 2092,
    "label": "libauto_bazel_repository-hjar.jar",
    "parentId": 825
  }, {
    "id": 2093,
    "label": "libauto_bazel_repository-hjar.jdeps",
    "parentId": 825
  }, {
    "id": 2094,
    "label": "libauto_bazel_repository-src.jar",
    "parentId": 825
  }, {
    "id": 2099,
    "label": "apache",
    "parentId": 157
  }, {
    "id": 2098,
    "label": "ant",
    "parentId": 2099
  }, {
    "id": 2097,
    "label": "ant",
    "parentId": 2098
  }, {
    "id": 2096,
    "label": "1.9.9",
    "parentId": 2097
  }, {
    "id": 2095,
    "label": "header_ant-1.9.9.jar",
    "parentId": 2096
  }, {
    "id": 2104,
    "label": "jetbrains",
    "parentId": 1907
  }, {
    "id": 2103,
    "label": "kotlin",
    "parentId": 2104
  }, {
    "id": 2102,
    "label": "kotlin-stdlib",
    "parentId": 2103
  }, {
    "id": 2101,
    "label": "1.7.0",
    "parentId": 2102
  }, {
    "id": 2100,
    "label": "header_kotlin-stdlib-1.7.0.jar",
    "parentId": 2101
  }, {
    "id": 2109,
    "label": "org",
    "parentId": 1886
  }, {
    "id": 2108,
    "label": "jetbrains",
    "parentId": 2109
  }, {
    "id": 2107,
    "label": "annotations",
    "parentId": 2108
  }, {
    "id": 2106,
    "label": "13.0",
    "parentId": 2107
  }, {
    "id": 2105,
    "label": "header_annotations-13.0.jar",
    "parentId": 2106
  }, {
    "id": 2112,
    "label": "kotlin-stdlib-common",
    "parentId": 2103
  }, {
    "id": 2111,
    "label": "1.7.0",
    "parentId": 2112
  }, {
    "id": 2110,
    "label": "header_kotlin-stdlib-common-1.7.0.jar",
    "parentId": 2111
  }, {
    "id": 2116,
    "label": "dagger",
    "parentId": 1873
  }, {
    "id": 2115,
    "label": "dagger",
    "parentId": 2116
  }, {
    "id": 2114,
    "label": "2.43.2",
    "parentId": 2115
  }, {
    "id": 2113,
    "label": "header_dagger-2.43.2.jar",
    "parentId": 2114
  }, {
    "id": 2121,
    "label": "javax",
    "parentId": 1886
  }, {
    "id": 2120,
    "label": "inject",
    "parentId": 2121
  }, {
    "id": 2119,
    "label": "javax.inject",
    "parentId": 2120
  }, {
    "id": 2118,
    "label": "1",
    "parentId": 2119
  }, {
    "id": 2117,
    "label": "header_javax.inject-1.jar",
    "parentId": 2118
  }, {
    "id": 2124,
    "label": "dagger-producers",
    "parentId": 2116
  }, {
    "id": 2123,
    "label": "2.43.2",
    "parentId": 2124
  }, {
    "id": 2122,
    "label": "header_dagger-producers-2.43.2.jar",
    "parentId": 2123
  }, {
    "id": 2128,
    "label": "checkerframework",
    "parentId": 2109
  }, {
    "id": 2127,
    "label": "checker-compat-qual",
    "parentId": 2128
  }, {
    "id": 2126,
    "label": "2.5.5",
    "parentId": 2127
  }, {
    "id": 2125,
    "label": "header_checker-compat-qual-2.5.5.jar",
    "parentId": 2126
  }, {
    "id": 2131,
    "label": "kotlin-stdlib-jdk7",
    "parentId": 2103
  }, {
    "id": 2130,
    "label": "1.7.0",
    "parentId": 2131
  }, {
    "id": 2129,
    "label": "header_kotlin-stdlib-jdk7-1.7.0.jar",
    "parentId": 2130
  }, {
    "id": 2134,
    "label": "kotlin-stdlib-jdk8",
    "parentId": 2103
  }, {
    "id": 2133,
    "label": "1.7.0",
    "parentId": 2134
  }, {
    "id": 2132,
    "label": "header_kotlin-stdlib-jdk8-1.7.0.jar",
    "parentId": 2133
  }, {
    "id": 2139,
    "label": "devtools",
    "parentId": 1873
  }, {
    "id": 2138,
    "label": "ksp",
    "parentId": 2139
  }, {
    "id": 2137,
    "label": "symbol-processing-api",
    "parentId": 2138
  }, {
    "id": 2136,
    "label": "1.7.0-1.0.6",
    "parentId": 2137
  }, {
    "id": 2135,
    "label": "header_symbol-processing-api-1.7.0-1.0.6.jar",
    "parentId": 2136
  }, {
    "id": 2142,
    "label": "dagger-spi",
    "parentId": 2116
  }, {
    "id": 2141,
    "label": "2.43.2",
    "parentId": 2142
  }, {
    "id": 2140,
    "label": "header_dagger-spi-2.43.2.jar",
    "parentId": 2141
  }, {
    "id": 2146,
    "label": "squareup",
    "parentId": 1874
  }, {
    "id": 2145,
    "label": "javapoet",
    "parentId": 2146
  }, {
    "id": 2144,
    "label": "1.13.0",
    "parentId": 2145
  }, {
    "id": 2143,
    "label": "header_javapoet-1.13.0.jar",
    "parentId": 2144
  }, {
    "id": 2150,
    "label": "kotlinx",
    "parentId": 2104
  }, {
    "id": 2149,
    "label": "kotlinx-metadata-jvm",
    "parentId": 2150
  }, {
    "id": 2148,
    "label": "0.5.0",
    "parentId": 2149
  }, {
    "id": 2147,
    "label": "header_kotlinx-metadata-jvm-0.5.0.jar",
    "parentId": 2148
  }, {
    "id": 2154,
    "label": "googlejavaformat",
    "parentId": 1884
  }, {
    "id": 2153,
    "label": "google-java-format",
    "parentId": 2154
  }, {
    "id": 2152,
    "label": "1.5",
    "parentId": 2153
  }, {
    "id": 2151,
    "label": "header_google-java-format-1.5.jar",
    "parentId": 2152
  }, {
    "id": 2158,
    "label": "errorprone",
    "parentId": 1884
  }, {
    "id": 2157,
    "label": "javac-shaded",
    "parentId": 2158
  }, {
    "id": 2156,
    "label": "9-dev-r4023-3",
    "parentId": 2157
  }, {
    "id": 2155,
    "label": "header_javac-shaded-9-dev-r4023-3.jar",
    "parentId": 2156
  }, {
    "id": 2161,
    "label": "dagger-compiler",
    "parentId": 2116
  }, {
    "id": 2160,
    "label": "2.43.2",
    "parentId": 2161
  }, {
    "id": 2159,
    "label": "header_dagger-compiler-2.43.2.jar",
    "parentId": 2160
  }, {
    "id": 2168,
    "label": "net",
    "parentId": 1886
  }, {
    "id": 2167,
    "label": "ltgt",
    "parentId": 2168
  }, {
    "id": 2166,
    "label": "gradle",
    "parentId": 2167
  }, {
    "id": 2165,
    "label": "incap",
    "parentId": 2166
  }, {
    "id": 2164,
    "label": "incap",
    "parentId": 2165
  }, {
    "id": 2163,
    "label": "0.2",
    "parentId": 2164
  }, {
    "id": 2162,
    "label": "header_incap-0.2.jar",
    "parentId": 2163
  }, {
    "id": 2169,
    "label": "libdagger_component_plugin.jar",
    "parentId": 1070
  }, {
    "id": 2170,
    "label": "libdagger_component_plugin-native-header.jar",
    "parentId": 1070
  }, {
    "id": 2171,
    "label": "libdagger_component_plugin.jar_manifest_proto",
    "parentId": 1070
  }, {
    "id": 2172,
    "label": "libdagger_component_plugin-src.jar",
    "parentId": 1070
  }, {
    "id": 2174,
    "label": "jdeps-gen-services",
    "parentId": 843
  }, {
    "id": 2173,
    "label": "org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar",
    "parentId": 2174
  }, {
    "id": 2175,
    "label": "org.jetbrains.kotlin.compiler.plugin.CommandLineProcessor",
    "parentId": 2174
  }, {
    "id": 2180,
    "label": "com_github_jetbrains_kotlin",
    "parentId": 32
  }, {
    "id": 2179,
    "label": "_ijar",
    "parentId": 2180
  }, {
    "id": 2178,
    "label": "kotlin-preloader",
    "parentId": 2179
  }, {
    "id": 2177,
    "label": "lib",
    "parentId": 2178
  }, {
    "id": 2176,
    "label": "kotlin-preloader-ijar.jar",
    "parentId": 2177
  }, {
    "id": 2184,
    "label": "gson",
    "parentId": 140
  }, {
    "id": 2183,
    "label": "gson",
    "parentId": 2184
  }, {
    "id": 2182,
    "label": "2.7",
    "parentId": 2183
  }, {
    "id": 2181,
    "label": "header_gson-2.7.jar",
    "parentId": 2182
  }, {
    "id": 2186,
    "label": "skip-code-gen-services",
    "parentId": 844
  }, {
    "id": 2185,
    "label": "org.jetbrains.kotlin.compiler.plugin.ComponentRegistrar",
    "parentId": 2186
  }, {
    "id": 2190,
    "label": "maven",
    "parentId": 2099
  }, {
    "id": 2189,
    "label": "maven-plugin-api",
    "parentId": 2190
  }, {
    "id": 2188,
    "label": "3.3.9",
    "parentId": 2189
  }, {
    "id": 2187,
    "label": "header_maven-plugin-api-3.3.9.jar",
    "parentId": 2188
  }, {
    "id": 2193,
    "label": "asm-commons",
    "parentId": 2052
  }, {
    "id": 2192,
    "label": "7.0",
    "parentId": 2193
  }, {
    "id": 2191,
    "label": "header_asm-commons-7.0.jar",
    "parentId": 2192
  }, {
    "id": 2203,
    "label": "_ijar",
    "parentId": 844
  }, {
    "id": 2202,
    "label": "skip-code-gen-lib",
    "parentId": 2203
  }, {
    "id": 2201,
    "label": "src",
    "parentId": 2202
  }, {
    "id": 2200,
    "label": "main",
    "parentId": 2201
  }, {
    "id": 2199,
    "label": "kotlin",
    "parentId": 2200
  }, {
    "id": 2198,
    "label": "io",
    "parentId": 2199
  }, {
    "id": 2197,
    "label": "bazel",
    "parentId": 2198
  }, {
    "id": 2196,
    "label": "kotlin",
    "parentId": 2197
  }, {
    "id": 2195,
    "label": "plugin",
    "parentId": 2196
  }, {
    "id": 2194,
    "label": "skip-code-gen-lib-ijar.jar",
    "parentId": 2195
  }, {
    "id": 2205,
    "label": "protobuf",
    "parentId": 582
  }, {
    "id": 2204,
    "label": "kotlin_model.proto",
    "parentId": 2205
  }, {
    "id": 2207,
    "label": "com_google_protobuf_protoc_linux_x86_64",
    "parentId": 32
  }, {
    "id": 2206,
    "label": "protoc.exe",
    "parentId": 2207
  }, {
    "id": 2208,
    "label": "kotlin_model_proto-descriptor-set.proto.bin",
    "parentId": 747
  }, {
    "id": 2209,
    "label": "libkotlin_model_proto-speed.jdeps",
    "parentId": 747
  }, {
    "id": 2210,
    "label": "libkotlin_model_proto-speed-native-header.jar",
    "parentId": 747
  }, {
    "id": 2211,
    "label": "libkotlin_model_proto-speed.jar_manifest_proto",
    "parentId": 747
  }, {
    "id": 2215,
    "label": "src",
    "parentId": 532
  }, {
    "id": 2214,
    "label": "main",
    "parentId": 2215
  }, {
    "id": 2213,
    "label": "protobuf",
    "parentId": 2214
  }, {
    "id": 2212,
    "label": "deps.proto",
    "parentId": 2213
  }, {
    "id": 2216,
    "label": "deps_proto-descriptor-set.proto.bin",
    "parentId": 749
  }, {
    "id": 2217,
    "label": "libdeps_proto-speed.jdeps",
    "parentId": 749
  }, {
    "id": 2218,
    "label": "libdeps_proto-speed-native-header.jar",
    "parentId": 749
  }, {
    "id": 2219,
    "label": "libdeps_proto-speed.jar_manifest_proto",
    "parentId": 749
  }, {
    "id": 2231,
    "label": "_ijar",
    "parentId": 1851
  }, {
    "id": 2230,
    "label": "jars",
    "parentId": 2231
  }, {
    "id": 2229,
    "label": "src",
    "parentId": 2230
  }, {
    "id": 2228,
    "label": "main",
    "parentId": 2229
  }, {
    "id": 2227,
    "label": "kotlin",
    "parentId": 2228
  }, {
    "id": 2226,
    "label": "io",
    "parentId": 2227
  }, {
    "id": 2225,
    "label": "bazel",
    "parentId": 2226
  }, {
    "id": 2224,
    "label": "kotlin",
    "parentId": 2225
  }, {
    "id": 2223,
    "label": "builder",
    "parentId": 2224
  }, {
    "id": 2222,
    "label": "utils",
    "parentId": 2223
  }, {
    "id": 2221,
    "label": "jars",
    "parentId": 2222
  }, {
    "id": 2220,
    "label": "jars-ijar.jar",
    "parentId": 2221
  }, {
    "id": 2232,
    "label": "worker_protocol.proto",
    "parentId": 2213
  }, {
    "id": 2233,
    "label": "worker_protocol_proto-descriptor-set.proto.bin",
    "parentId": 749
  }, {
    "id": 2234,
    "label": "libworker_protocol_proto-speed.jdeps",
    "parentId": 749
  }, {
    "id": 2235,
    "label": "libworker_protocol_proto-speed-native-header.jar",
    "parentId": 749
  }, {
    "id": 2236,
    "label": "libworker_protocol_proto-speed.jar_manifest_proto",
    "parentId": 749
  }, {
    "id": 2245,
    "label": "_ijar",
    "parentId": 1853
  }, {
    "id": 2244,
    "label": "worker",
    "parentId": 2245
  }, {
    "id": 2243,
    "label": "src",
    "parentId": 2244
  }, {
    "id": 2242,
    "label": "main",
    "parentId": 2243
  }, {
    "id": 2241,
    "label": "kotlin",
    "parentId": 2242
  }, {
    "id": 2240,
    "label": "io",
    "parentId": 2241
  }, {
    "id": 2239,
    "label": "bazel",
    "parentId": 2240
  }, {
    "id": 2238,
    "label": "worker",
    "parentId": 2239
  }, {
    "id": 2237,
    "label": "worker-ijar.jar",
    "parentId": 2238
  }, {
    "id": 2248,
    "label": "asm-tree",
    "parentId": 2052
  }, {
    "id": 2247,
    "label": "7.0",
    "parentId": 2248
  }, {
    "id": 2246,
    "label": "header_asm-tree-7.0.jar",
    "parentId": 2247
  }, {
    "id": 2251,
    "label": "maven-artifact",
    "parentId": 2190
  }, {
    "id": 2250,
    "label": "3.3.9",
    "parentId": 2251
  }, {
    "id": 2249,
    "label": "header_maven-artifact-3.3.9.jar",
    "parentId": 2250
  }, {
    "id": 2255,
    "label": "protobuf",
    "parentId": 1884
  }, {
    "id": 2254,
    "label": "protobuf-java-util",
    "parentId": 2255
  }, {
    "id": 2253,
    "label": "3.6.0",
    "parentId": 2254
  }, {
    "id": 2252,
    "label": "header_protobuf-java-util-3.6.0.jar",
    "parentId": 2253
  }, {
    "id": 2266,
    "label": "_ijar",
    "parentId": 1847
  }, {
    "id": 2265,
    "label": "toolchain",
    "parentId": 2266
  }, {
    "id": 2264,
    "label": "src",
    "parentId": 2265
  }, {
    "id": 2263,
    "label": "main",
    "parentId": 2264
  }, {
    "id": 2262,
    "label": "kotlin",
    "parentId": 2263
  }, {
    "id": 2261,
    "label": "io",
    "parentId": 2262
  }, {
    "id": 2260,
    "label": "bazel",
    "parentId": 2261
  }, {
    "id": 2259,
    "label": "kotlin",
    "parentId": 2260
  }, {
    "id": 2258,
    "label": "builder",
    "parentId": 2259
  }, {
    "id": 2257,
    "label": "toolchain",
    "parentId": 2258
  }, {
    "id": 2256,
    "label": "toolchain-ijar.jar",
    "parentId": 2257
  }, {
    "id": 2271,
    "label": "eclipse",
    "parentId": 157
  }, {
    "id": 2270,
    "label": "sisu",
    "parentId": 2271
  }, {
    "id": 2269,
    "label": "org.eclipse.sisu.plexus",
    "parentId": 2270
  }, {
    "id": 2268,
    "label": "0.3.2",
    "parentId": 2269
  }, {
    "id": 2267,
    "label": "header_org.eclipse.sisu.plexus-0.3.2.jar",
    "parentId": 2268
  }, {
    "id": 2274,
    "label": "protobuf-java",
    "parentId": 2255
  }, {
    "id": 2273,
    "label": "3.6.0",
    "parentId": 2274
  }, {
    "id": 2272,
    "label": "header_protobuf-java-3.6.0.jar",
    "parentId": 2273
  }, {
    "id": 2285,
    "label": "_ijar",
    "parentId": 1849
  }, {
    "id": 2284,
    "label": "utils",
    "parentId": 2285
  }, {
    "id": 2283,
    "label": "src",
    "parentId": 2284
  }, {
    "id": 2282,
    "label": "main",
    "parentId": 2283
  }, {
    "id": 2281,
    "label": "kotlin",
    "parentId": 2282
  }, {
    "id": 2280,
    "label": "io",
    "parentId": 2281
  }, {
    "id": 2279,
    "label": "bazel",
    "parentId": 2280
  }, {
    "id": 2278,
    "label": "kotlin",
    "parentId": 2279
  }, {
    "id": 2277,
    "label": "builder",
    "parentId": 2278
  }, {
    "id": 2276,
    "label": "utils",
    "parentId": 2277
  }, {
    "id": 2275,
    "label": "utils-ijar.jar",
    "parentId": 2276
  }, {
    "id": 2288,
    "label": "plugin",
    "parentId": 703
  }, {
    "id": 2287,
    "label": "jdeps",
    "parentId": 2288
  }, {
    "id": 2286,
    "label": "JdepsGenCommandLineProcessor.kt",
    "parentId": 2287
  }, {
    "id": 2289,
    "label": "JdepsGenComponentRegistrar.kt",
    "parentId": 2287
  }, {
    "id": 2290,
    "label": "JdepsGenConfigurationKeys.kt",
    "parentId": 2287
  }, {
    "id": 2291,
    "label": "JdepsGenExtension.kt",
    "parentId": 2287
  }, {
    "id": 2294,
    "label": "maven-model",
    "parentId": 2190
  }, {
    "id": 2293,
    "label": "3.3.9",
    "parentId": 2294
  }, {
    "id": 2292,
    "label": "header_maven-model-3.3.9.jar",
    "parentId": 2293
  }, {
    "id": 2295,
    "label": "SkipCodeGen.kt",
    "parentId": 2288
  }, {
    "id": 2296,
    "label": "merge_jdeps_raw.jar",
    "parentId": 577
  }, {
    "id": 2297,
    "label": "merge_jdeps_raw-native-header.jar",
    "parentId": 577
  }, {
    "id": 2298,
    "label": "merge_jdeps_raw.jar_manifest_proto",
    "parentId": 577
  }, {
    "id": 2299,
    "label": "merge_jdeps_raw-src.jar",
    "parentId": 577
  }, {
    "id": 2300,
    "label": "merge_jdeps_raw_deploy-src.jar",
    "parentId": 577
  }, {
    "id": 2301,
    "label": "merge_jdeps_lib.jar",
    "parentId": 577
  }, {
    "id": 2302,
    "label": "merge_jdeps_raw_deploy.jar.unstripped",
    "parentId": 577
  }, {
    "id": 2303,
    "label": "build_raw.jar",
    "parentId": 577
  }, {
    "id": 2304,
    "label": "build_raw-native-header.jar",
    "parentId": 577
  }, {
    "id": 2305,
    "label": "build_raw.jar_manifest_proto",
    "parentId": 577
  }, {
    "id": 2306,
    "label": "build_raw-src.jar",
    "parentId": 577
  }, {
    "id": 2307,
    "label": "build_raw_deploy-src.jar",
    "parentId": 577
  }, {
    "id": 2308,
    "label": "build_lib.jar",
    "parentId": 577
  }, {
    "id": 2309,
    "label": "build_raw_deploy.jar.unstripped",
    "parentId": 577
  }, {
    "id": 2310,
    "label": "librunfiles.jdeps",
    "parentId": 2012
  }, {
    "id": 2311,
    "label": "librunfiles-native-header.jar",
    "parentId": 2012
  }, {
    "id": 2312,
    "label": "librunfiles.jar_manifest_proto",
    "parentId": 2012
  }, {
    "id": 2313,
    "label": "librunfiles-hjar.jar",
    "parentId": 2012
  }, {
    "id": 2314,
    "label": "librunfiles-hjar.jdeps",
    "parentId": 2012
  }, {
    "id": 2315,
    "label": "librunfiles-src.jar",
    "parentId": 2012
  }, {
    "id": 2318,
    "label": "asm-analysis",
    "parentId": 2052
  }, {
    "id": 2317,
    "label": "7.0",
    "parentId": 2318
  }, {
    "id": 2316,
    "label": "header_asm-analysis-7.0.jar",
    "parentId": 2317
  }, {
    "id": 2321,
    "label": "ant-launcher",
    "parentId": 2098
  }, {
    "id": 2320,
    "label": "1.9.9",
    "parentId": 2321
  }, {
    "id": 2319,
    "label": "header_ant-launcher-1.9.9.jar",
    "parentId": 2320
  }, {
    "id": 2332,
    "label": "_ijar",
    "parentId": 577
  }, {
    "id": 2331,
    "label": "build_lib",
    "parentId": 2332
  }, {
    "id": 2330,
    "label": "src",
    "parentId": 2331
  }, {
    "id": 2329,
    "label": "main",
    "parentId": 2330
  }, {
    "id": 2328,
    "label": "kotlin",
    "parentId": 2329
  }, {
    "id": 2327,
    "label": "io",
    "parentId": 2328
  }, {
    "id": 2326,
    "label": "bazel",
    "parentId": 2327
  }, {
    "id": 2325,
    "label": "kotlin",
    "parentId": 2326
  }, {
    "id": 2324,
    "label": "builder",
    "parentId": 2325
  }, {
    "id": 2323,
    "label": "cmd",
    "parentId": 2324
  }, {
    "id": 2322,
    "label": "build_lib-ijar.jar",
    "parentId": 2323
  }, {
    "id": 2342,
    "label": "_ijar",
    "parentId": 2034
  }, {
    "id": 2341,
    "label": "skip-code-gen-lib",
    "parentId": 2342
  }, {
    "id": 2340,
    "label": "src",
    "parentId": 2341
  }, {
    "id": 2339,
    "label": "main",
    "parentId": 2340
  }, {
    "id": 2338,
    "label": "kotlin",
    "parentId": 2339
  }, {
    "id": 2337,
    "label": "io",
    "parentId": 2338
  }, {
    "id": 2336,
    "label": "bazel",
    "parentId": 2337
  }, {
    "id": 2335,
    "label": "kotlin",
    "parentId": 2336
  }, {
    "id": 2334,
    "label": "plugin",
    "parentId": 2335
  }, {
    "id": 2333,
    "label": "skip-code-gen-lib-ijar.jar",
    "parentId": 2334
  }, {
    "id": 2343,
    "label": "libauto_bazel_repository.jar",
    "parentId": 2012
  }, {
    "id": 2344,
    "label": "libauto_bazel_repository.jdeps",
    "parentId": 2012
  }, {
    "id": 2345,
    "label": "libauto_bazel_repository-native-header.jar",
    "parentId": 2012
  }, {
    "id": 2346,
    "label": "libauto_bazel_repository.jar_manifest_proto",
    "parentId": 2012
  }, {
    "id": 2347,
    "label": "libauto_bazel_repository-hjar.jar",
    "parentId": 2012
  }, {
    "id": 2348,
    "label": "libauto_bazel_repository-hjar.jdeps",
    "parentId": 2012
  }, {
    "id": 2349,
    "label": "libauto_bazel_repository-src.jar",
    "parentId": 2012
  }, {
    "id": 2353,
    "label": "commons",
    "parentId": 2099
  }, {
    "id": 2352,
    "label": "commons-lang3",
    "parentId": 2353
  }, {
    "id": 2351,
    "label": "3.4",
    "parentId": 2352
  }, {
    "id": 2350,
    "label": "header_commons-lang3-3.4.jar",
    "parentId": 2351
  }, {
    "id": 2363,
    "label": "merge_jdeps_lib",
    "parentId": 2332
  }, {
    "id": 2362,
    "label": "src",
    "parentId": 2363
  }, {
    "id": 2361,
    "label": "main",
    "parentId": 2362
  }, {
    "id": 2360,
    "label": "kotlin",
    "parentId": 2361
  }, {
    "id": 2359,
    "label": "io",
    "parentId": 2360
  }, {
    "id": 2358,
    "label": "bazel",
    "parentId": 2359
  }, {
    "id": 2357,
    "label": "kotlin",
    "parentId": 2358
  }, {
    "id": 2356,
    "label": "builder",
    "parentId": 2357
  }, {
    "id": 2355,
    "label": "cmd",
    "parentId": 2356
  }, {
    "id": 2354,
    "label": "merge_jdeps_lib-ijar.jar",
    "parentId": 2355
  }, {
    "id": 2371,
    "label": "worker_proto",
    "parentId": 2245
  }, {
    "id": 2370,
    "label": "src",
    "parentId": 2371
  }, {
    "id": 2369,
    "label": "main",
    "parentId": 2370
  }, {
    "id": 2368,
    "label": "kotlin",
    "parentId": 2369
  }, {
    "id": 2367,
    "label": "io",
    "parentId": 2368
  }, {
    "id": 2366,
    "label": "bazel",
    "parentId": 2367
  }, {
    "id": 2365,
    "label": "worker",
    "parentId": 2366
  }, {
    "id": 2364,
    "label": "worker_proto_bundle_bin_deploy-ijar.jar",
    "parentId": 2365
  }, {
    "id": 2372,
    "label": "kotlin_model_proto-descriptor-set.proto.bin",
    "parentId": 1842
  }, {
    "id": 2376,
    "label": "com_google_protobuf_protobuf_java",
    "parentId": 32
  }, {
    "id": 2375,
    "label": "_ijar",
    "parentId": 2376
  }, {
    "id": 2374,
    "label": "com_google_protobuf_protobuf_java",
    "parentId": 2375
  }, {
    "id": 2373,
    "label": "protobuf-java-3.21.7-ijar.jar",
    "parentId": 2374
  }, {
    "id": 2377,
    "label": "libkotlin_model_proto-speed.jdeps",
    "parentId": 1842
  }, {
    "id": 2378,
    "label": "libkotlin_model_proto-speed-native-header.jar",
    "parentId": 1842
  }, {
    "id": 2379,
    "label": "libkotlin_model_proto-speed.jar_manifest_proto",
    "parentId": 1842
  }, {
    "id": 2380,
    "label": "libkotlin_model_proto-speed-hjar.jar",
    "parentId": 1842
  }, {
    "id": 2381,
    "label": "libkotlin_model_proto-speed-hjar.jdeps",
    "parentId": 1842
  }, {
    "id": 2384,
    "label": "org.eclipse.sisu.inject",
    "parentId": 2270
  }, {
    "id": 2383,
    "label": "0.3.2",
    "parentId": 2384
  }, {
    "id": 2382,
    "label": "header_org.eclipse.sisu.inject-0.3.2.jar",
    "parentId": 2383
  }, {
    "id": 2395,
    "label": "_ijar",
    "parentId": 2036
  }, {
    "id": 2394,
    "label": "jdeps-gen-lib",
    "parentId": 2395
  }, {
    "id": 2393,
    "label": "src",
    "parentId": 2394
  }, {
    "id": 2392,
    "label": "main",
    "parentId": 2393
  }, {
    "id": 2391,
    "label": "kotlin",
    "parentId": 2392
  }, {
    "id": 2390,
    "label": "io",
    "parentId": 2391
  }, {
    "id": 2389,
    "label": "bazel",
    "parentId": 2390
  }, {
    "id": 2388,
    "label": "kotlin",
    "parentId": 2389
  }, {
    "id": 2387,
    "label": "plugin",
    "parentId": 2388
  }, {
    "id": 2386,
    "label": "jdeps",
    "parentId": 2387
  }, {
    "id": 2385,
    "label": "jdeps-gen-lib-ijar.jar",
    "parentId": 2386
  }, {
    "id": 2400,
    "label": "codehaus",
    "parentId": 157
  }, {
    "id": 2399,
    "label": "plexus",
    "parentId": 2400
  }, {
    "id": 2398,
    "label": "plexus-utils",
    "parentId": 2399
  }, {
    "id": 2397,
    "label": "3.0.22",
    "parentId": 2398
  }, {
    "id": 2396,
    "label": "header_plexus-utils-3.0.22.jar",
    "parentId": 2397
  }, {
    "id": 2404,
    "label": "gson",
    "parentId": 1898
  }, {
    "id": 2403,
    "label": "gson",
    "parentId": 2404
  }, {
    "id": 2402,
    "label": "2.7",
    "parentId": 2403
  }, {
    "id": 2401,
    "label": "header_gson-2.7.jar",
    "parentId": 2402
  }, {
    "id": 2409,
    "label": "remote_java_tools",
    "parentId": 32
  }, {
    "id": 2408,
    "label": "_ijar",
    "parentId": 2409
  }, {
    "id": 2407,
    "label": "jacoco_coverage_runner",
    "parentId": 2408
  }, {
    "id": 2406,
    "label": "java_tools",
    "parentId": 2407
  }, {
    "id": 2405,
    "label": "JacocoCoverage_jarjar_deploy-ijar.jar",
    "parentId": 2406
  }, {
    "id": 2410,
    "label": "worker_proto_bundle_bin.jar",
    "parentId": 788
  }, {
    "id": 2411,
    "label": "worker_proto_bundle_bin-native-header.jar",
    "parentId": 788
  }, {
    "id": 2412,
    "label": "worker_proto_bundle_bin.jar_manifest_proto",
    "parentId": 788
  }, {
    "id": 2413,
    "label": "worker_proto_bundle_bin-src.jar",
    "parentId": 788
  }, {
    "id": 2414,
    "label": "worker_proto_bundle_bin",
    "parentId": 788
  }, {
    "id": 2415,
    "label": "worker_proto_bundle_bin_deploy-src.jar",
    "parentId": 788
  }, {
    "id": 2416,
    "label": "worker_proto_bundle_bin.runfiles_manifest",
    "parentId": 788
  }, {
    "id": 2418,
    "label": "worker_proto_bundle_bin.runfiles",
    "parentId": 788
  }, {
    "id": 2417,
    "label": "MANIFEST",
    "parentId": 2418
  }, {
    "id": 2419,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Sworker_Sworker_Uproto_Ubundle_Ubin-runfiles",
    "parentId": 527
  }, {
    "id": 2420,
    "label": "worker_proto_bundle_bin_deploy.jar.unstripped",
    "parentId": 788
  }, {
    "id": 2423,
    "label": "plexus-component-annotations",
    "parentId": 2399
  }, {
    "id": 2422,
    "label": "1.5.5",
    "parentId": 2423
  }, {
    "id": 2421,
    "label": "header_plexus-component-annotations-1.5.5.jar",
    "parentId": 2422
  }, {
    "id": 2427,
    "label": "enterprise",
    "parentId": 766
  }, {
    "id": 2426,
    "label": "cdi-api",
    "parentId": 2427
  }, {
    "id": 2425,
    "label": "1.0",
    "parentId": 2426
  }, {
    "id": 2424,
    "label": "header_cdi-api-1.0.jar",
    "parentId": 2425
  }, {
    "id": 2430,
    "label": "plexus-classworlds",
    "parentId": 2399
  }, {
    "id": 2429,
    "label": "2.5.2",
    "parentId": 2430
  }, {
    "id": 2428,
    "label": "header_plexus-classworlds-2.5.2.jar",
    "parentId": 2429
  }, {
    "id": 2431,
    "label": "libbuilder.jar",
    "parentId": 181
  }, {
    "id": 2433,
    "label": "tasks",
    "parentId": 181
  }, {
    "id": 2432,
    "label": "tasks.jar",
    "parentId": 2433
  }, {
    "id": 2435,
    "label": "cmd",
    "parentId": 1814
  }, {
    "id": 2434,
    "label": "MergeJdeps.kt",
    "parentId": 2435
  }, {
    "id": 2438,
    "label": "jsr250-api",
    "parentId": 792
  }, {
    "id": 2437,
    "label": "1.0",
    "parentId": 2438
  }, {
    "id": 2436,
    "label": "header_jsr250-api-1.0.jar",
    "parentId": 2437
  }, {
    "id": 2439,
    "label": "Build.kt",
    "parentId": 2435
  }, {
    "id": 2440,
    "label": "deps_proto-descriptor-set.proto.bin",
    "parentId": 1821
  }, {
    "id": 2441,
    "label": "libdeps_proto-speed.jdeps",
    "parentId": 1821
  }, {
    "id": 2442,
    "label": "libdeps_proto-speed-native-header.jar",
    "parentId": 1821
  }, {
    "id": 2443,
    "label": "libdeps_proto-speed.jar_manifest_proto",
    "parentId": 1821
  }, {
    "id": 2444,
    "label": "libdeps_proto-speed-hjar.jar",
    "parentId": 1821
  }, {
    "id": 2445,
    "label": "libdeps_proto-speed-hjar.jdeps",
    "parentId": 1821
  }, {
    "id": 2446,
    "label": "worker_protocol_proto-descriptor-set.proto.bin",
    "parentId": 1821
  }, {
    "id": 2447,
    "label": "libworker_protocol_proto-speed.jdeps",
    "parentId": 1821
  }, {
    "id": 2448,
    "label": "libworker_protocol_proto-speed-native-header.jar",
    "parentId": 1821
  }, {
    "id": 2449,
    "label": "libworker_protocol_proto-speed.jar_manifest_proto",
    "parentId": 1821
  }, {
    "id": 2450,
    "label": "libworker_protocol_proto-speed-hjar.jar",
    "parentId": 1821
  }, {
    "id": 2451,
    "label": "libworker_protocol_proto-speed-hjar.jdeps",
    "parentId": 1821
  }, {
    "id": 2452,
    "label": "worker_proto_bundle_bin.jar",
    "parentId": 1853
  }, {
    "id": 2453,
    "label": "worker_proto_bundle_bin-native-header.jar",
    "parentId": 1853
  }, {
    "id": 2454,
    "label": "worker_proto_bundle_bin.jar_manifest_proto",
    "parentId": 1853
  }, {
    "id": 2455,
    "label": "worker_proto_bundle_bin-src.jar",
    "parentId": 1853
  }, {
    "id": 2456,
    "label": "worker_proto_bundle_bin",
    "parentId": 1853
  }, {
    "id": 2457,
    "label": "worker_proto_bundle_bin_deploy-src.jar",
    "parentId": 1853
  }, {
    "id": 2458,
    "label": "worker_proto_bundle_bin.runfiles_manifest",
    "parentId": 1853
  }, {
    "id": 2460,
    "label": "worker_proto_bundle_bin.runfiles",
    "parentId": 1853
  }, {
    "id": 2459,
    "label": "MANIFEST",
    "parentId": 2460
  }, {
    "id": 2461,
    "label": "src_Smain_Skotlin_Sio_Sbazel_Sworker_Sworker_Uproto_Ubundle_Ubin-runfiles",
    "parentId": 36
  }, {
    "id": 2463,
    "label": "include",
    "parentId": 34
  }, {
    "id": 2462,
    "label": "build-info-redacted.properties",
    "parentId": 2463
  }, {
    "id": 2464,
    "label": "worker_proto_bundle_bin_deploy.jar.unstripped",
    "parentId": 1853
  }, {
    "id": 2465,
    "label": "libbuilder.jar_manifest_proto",
    "parentId": 181
  }, {
    "id": 2466,
    "label": "libbuilder-gen.jar",
    "parentId": 181
  }, {
    "id": 2477,
    "label": "_ijar",
    "parentId": 2433
  }, {
    "id": 2476,
    "label": "tasks",
    "parentId": 2477
  }, {
    "id": 2475,
    "label": "src",
    "parentId": 2476
  }, {
    "id": 2474,
    "label": "main",
    "parentId": 2475
  }, {
    "id": 2473,
    "label": "kotlin",
    "parentId": 2474
  }, {
    "id": 2472,
    "label": "io",
    "parentId": 2473
  }, {
    "id": 2471,
    "label": "bazel",
    "parentId": 2472
  }, {
    "id": 2470,
    "label": "kotlin",
    "parentId": 2471
  }, {
    "id": 2469,
    "label": "builder",
    "parentId": 2470
  }, {
    "id": 2468,
    "label": "tasks",
    "parentId": 2469
  }, {
    "id": 2467,
    "label": "tasks-ijar.jar",
    "parentId": 2468
  }, {
    "id": 2481,
    "label": "annotation",
    "parentId": 2121
  }, {
    "id": 2480,
    "label": "javax.annotation-api",
    "parentId": 2481
  }, {
    "id": 2479,
    "label": "1.3.2",
    "parentId": 2480
  }, {
    "id": 2478,
    "label": "header_javax.annotation-api-1.3.2.jar",
    "parentId": 2479
  }, {
    "id": 2482,
    "label": "libbuilder.jdeps",
    "parentId": 181
  }, {
    "id": 2483,
    "label": "libbuilder-native-header.jar",
    "parentId": 181
  }, {
    "id": 2484,
    "label": "libbuilder-gensrc.jar",
    "parentId": 181
  }, {
    "id": 2485,
    "label": "libbuilder-hjar.jar",
    "parentId": 181
  }, {
    "id": 2486,
    "label": "libbuilder-hjar.jdeps",
    "parentId": 181
  }, {
    "id": 2487,
    "label": "libbuilder-src.jar",
    "parentId": 181
  }, {
    "id": 2488,
    "label": "libdagger.jar",
    "parentId": 1070
  }, {
    "id": 2489,
    "label": "libdagger-native-header.jar",
    "parentId": 1070
  }, {
    "id": 2490,
    "label": "libdagger.jar_manifest_proto",
    "parentId": 1070
  }, {
    "id": 2491,
    "label": "libdagger-src.jar",
    "parentId": 1070
  }]
}
