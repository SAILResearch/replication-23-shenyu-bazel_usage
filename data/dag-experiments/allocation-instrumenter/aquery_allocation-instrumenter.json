{
  "artifacts": [{
    "id": 1,
    "pathFragmentId": 1
  }, {
    "id": 2,
    "pathFragmentId": 9
  }, {
    "id": 3,
    "pathFragmentId": 10
  }, {
    "id": 4,
    "pathFragmentId": 13
  }, {
    "id": 5,
    "pathFragmentId": 14
  }, {
    "id": 6,
    "pathFragmentId": 17
  }, {
    "id": 7,
    "pathFragmentId": 22
  }, {
    "id": 8,
    "pathFragmentId": 23
  }, {
    "id": 9,
    "pathFragmentId": 26
  }, {
    "id": 10,
    "pathFragmentId": 27
  }, {
    "id": 11,
    "pathFragmentId": 28
  }, {
    "id": 12,
    "pathFragmentId": 29
  }, {
    "id": 13,
    "pathFragmentId": 30
  }, {
    "id": 14,
    "pathFragmentId": 31
  }, {
    "id": 15,
    "pathFragmentId": 32
  }, {
    "id": 16,
    "pathFragmentId": 33
  }, {
    "id": 17,
    "pathFragmentId": 34
  }, {
    "id": 18,
    "pathFragmentId": 35
  }, {
    "id": 19,
    "pathFragmentId": 36
  }, {
    "id": 20,
    "pathFragmentId": 37
  }, {
    "id": 21,
    "pathFragmentId": 38
  }, {
    "id": 22,
    "pathFragmentId": 39
  }, {
    "id": 23,
    "pathFragmentId": 40
  }, {
    "id": 24,
    "pathFragmentId": 41
  }, {
    "id": 25,
    "pathFragmentId": 42
  }, {
    "id": 26,
    "pathFragmentId": 43
  }, {
    "id": 27,
    "pathFragmentId": 44
  }, {
    "id": 28,
    "pathFragmentId": 45
  }, {
    "id": 29,
    "pathFragmentId": 46
  }, {
    "id": 30,
    "pathFragmentId": 47
  }, {
    "id": 31,
    "pathFragmentId": 48
  }, {
    "id": 32,
    "pathFragmentId": 49
  }, {
    "id": 33,
    "pathFragmentId": 50
  }, {
    "id": 34,
    "pathFragmentId": 51
  }, {
    "id": 35,
    "pathFragmentId": 52
  }, {
    "id": 36,
    "pathFragmentId": 53
  }, {
    "id": 37,
    "pathFragmentId": 54
  }, {
    "id": 38,
    "pathFragmentId": 55
  }, {
    "id": 39,
    "pathFragmentId": 56
  }, {
    "id": 40,
    "pathFragmentId": 57
  }, {
    "id": 41,
    "pathFragmentId": 58
  }, {
    "id": 42,
    "pathFragmentId": 60
  }, {
    "id": 43,
    "pathFragmentId": 62
  }, {
    "id": 44,
    "pathFragmentId": 63
  }, {
    "id": 45,
    "pathFragmentId": 64
  }, {
    "id": 46,
    "pathFragmentId": 65
  }, {
    "id": 47,
    "pathFragmentId": 67
  }, {
    "id": 48,
    "pathFragmentId": 68
  }, {
    "id": 49,
    "pathFragmentId": 70
  }, {
    "id": 50,
    "pathFragmentId": 72
  }, {
    "id": 51,
    "pathFragmentId": 73
  }, {
    "id": 52,
    "pathFragmentId": 74
  }, {
    "id": 53,
    "pathFragmentId": 76
  }, {
    "id": 54,
    "pathFragmentId": 77
  }, {
    "id": 55,
    "pathFragmentId": 78
  }, {
    "id": 56,
    "pathFragmentId": 80
  }, {
    "id": 57,
    "pathFragmentId": 81
  }, {
    "id": 58,
    "pathFragmentId": 82
  }, {
    "id": 59,
    "pathFragmentId": 83
  }, {
    "id": 60,
    "pathFragmentId": 84
  }, {
    "id": 61,
    "pathFragmentId": 85
  }, {
    "id": 62,
    "pathFragmentId": 87
  }, {
    "id": 63,
    "pathFragmentId": 88
  }, {
    "id": 64,
    "pathFragmentId": 90
  }, {
    "id": 65,
    "pathFragmentId": 91
  }, {
    "id": 66,
    "pathFragmentId": 92
  }, {
    "id": 67,
    "pathFragmentId": 94
  }, {
    "id": 68,
    "pathFragmentId": 95
  }, {
    "id": 69,
    "pathFragmentId": 97
  }, {
    "id": 70,
    "pathFragmentId": 98
  }, {
    "id": 71,
    "pathFragmentId": 99
  }, {
    "id": 72,
    "pathFragmentId": 100
  }, {
    "id": 73,
    "pathFragmentId": 101
  }, {
    "id": 74,
    "pathFragmentId": 102
  }, {
    "id": 75,
    "pathFragmentId": 103
  }, {
    "id": 76,
    "pathFragmentId": 104
  }, {
    "id": 77,
    "pathFragmentId": 105
  }, {
    "id": 78,
    "pathFragmentId": 106
  }, {
    "id": 79,
    "pathFragmentId": 107
  }, {
    "id": 80,
    "pathFragmentId": 108
  }, {
    "id": 81,
    "pathFragmentId": 109
  }, {
    "id": 82,
    "pathFragmentId": 110
  }, {
    "id": 83,
    "pathFragmentId": 111
  }, {
    "id": 84,
    "pathFragmentId": 112
  }, {
    "id": 85,
    "pathFragmentId": 113
  }, {
    "id": 86,
    "pathFragmentId": 114
  }, {
    "id": 87,
    "pathFragmentId": 115
  }, {
    "id": 88,
    "pathFragmentId": 116
  }, {
    "id": 89,
    "pathFragmentId": 117
  }, {
    "id": 90,
    "pathFragmentId": 118
  }, {
    "id": 91,
    "pathFragmentId": 119
  }, {
    "id": 92,
    "pathFragmentId": 120
  }, {
    "id": 93,
    "pathFragmentId": 121
  }, {
    "id": 94,
    "pathFragmentId": 122
  }, {
    "id": 95,
    "pathFragmentId": 123
  }, {
    "id": 96,
    "pathFragmentId": 124
  }, {
    "id": 97,
    "pathFragmentId": 125
  }, {
    "id": 98,
    "pathFragmentId": 126
  }, {
    "id": 99,
    "pathFragmentId": 127
  }, {
    "id": 100,
    "pathFragmentId": 128
  }, {
    "id": 101,
    "pathFragmentId": 129
  }, {
    "id": 102,
    "pathFragmentId": 130
  }, {
    "id": 103,
    "pathFragmentId": 131
  }, {
    "id": 104,
    "pathFragmentId": 132
  }, {
    "id": 105,
    "pathFragmentId": 133
  }, {
    "id": 106,
    "pathFragmentId": 134
  }, {
    "id": 107,
    "pathFragmentId": 135
  }, {
    "id": 108,
    "pathFragmentId": 136
  }, {
    "id": 109,
    "pathFragmentId": 137
  }, {
    "id": 110,
    "pathFragmentId": 138
  }, {
    "id": 111,
    "pathFragmentId": 139
  }, {
    "id": 112,
    "pathFragmentId": 141
  }, {
    "id": 113,
    "pathFragmentId": 142
  }, {
    "id": 114,
    "pathFragmentId": 143
  }, {
    "id": 115,
    "pathFragmentId": 144
  }, {
    "id": 116,
    "pathFragmentId": 146
  }, {
    "id": 117,
    "pathFragmentId": 147
  }, {
    "id": 118,
    "pathFragmentId": 148
  }, {
    "id": 119,
    "pathFragmentId": 149
  }, {
    "id": 120,
    "pathFragmentId": 150
  }, {
    "id": 121,
    "pathFragmentId": 153
  }, {
    "id": 122,
    "pathFragmentId": 158
  }, {
    "id": 123,
    "pathFragmentId": 159
  }, {
    "id": 124,
    "pathFragmentId": 160
  }, {
    "id": 125,
    "pathFragmentId": 161
  }, {
    "id": 126,
    "pathFragmentId": 167
  }, {
    "id": 127,
    "pathFragmentId": 168
  }, {
    "id": 128,
    "pathFragmentId": 169
  }, {
    "id": 129,
    "pathFragmentId": 173
  }, {
    "id": 130,
    "pathFragmentId": 174
  }, {
    "id": 131,
    "pathFragmentId": 175
  }, {
    "id": 132,
    "pathFragmentId": 176
  }, {
    "id": 133,
    "pathFragmentId": 177
  }, {
    "id": 134,
    "pathFragmentId": 178
  }, {
    "id": 135,
    "pathFragmentId": 179
  }, {
    "id": 136,
    "pathFragmentId": 184
  }, {
    "id": 137,
    "pathFragmentId": 193
  }, {
    "id": 138,
    "pathFragmentId": 194
  }, {
    "id": 139,
    "pathFragmentId": 195
  }, {
    "id": 140,
    "pathFragmentId": 196
  }, {
    "id": 141,
    "pathFragmentId": 197
  }, {
    "id": 142,
    "pathFragmentId": 198
  }, {
    "id": 143,
    "pathFragmentId": 200
  }, {
    "id": 144,
    "pathFragmentId": 201
  }, {
    "id": 145,
    "pathFragmentId": 202
  }, {
    "id": 146,
    "pathFragmentId": 204
  }, {
    "id": 147,
    "pathFragmentId": 206
  }, {
    "id": 148,
    "pathFragmentId": 207
  }, {
    "id": 149,
    "pathFragmentId": 209
  }, {
    "id": 150,
    "pathFragmentId": 210
  }, {
    "id": 151,
    "pathFragmentId": 211
  }, {
    "id": 152,
    "pathFragmentId": 213
  }, {
    "id": 153,
    "pathFragmentId": 214
  }, {
    "id": 154,
    "pathFragmentId": 215
  }, {
    "id": 155,
    "pathFragmentId": 217
  }, {
    "id": 156,
    "pathFragmentId": 220
  }, {
    "id": 157,
    "pathFragmentId": 221
  }, {
    "id": 158,
    "pathFragmentId": 222
  }, {
    "id": 159,
    "pathFragmentId": 223
  }, {
    "id": 160,
    "pathFragmentId": 224
  }, {
    "id": 161,
    "pathFragmentId": 225
  }, {
    "id": 162,
    "pathFragmentId": 226
  }, {
    "id": 163,
    "pathFragmentId": 227
  }, {
    "id": 164,
    "pathFragmentId": 228
  }, {
    "id": 165,
    "pathFragmentId": 229
  }, {
    "id": 166,
    "pathFragmentId": 230
  }, {
    "id": 167,
    "pathFragmentId": 231
  }, {
    "id": 168,
    "pathFragmentId": 232
  }, {
    "id": 169,
    "pathFragmentId": 233
  }, {
    "id": 170,
    "pathFragmentId": 234
  }, {
    "id": 171,
    "pathFragmentId": 235
  }, {
    "id": 172,
    "pathFragmentId": 236
  }, {
    "id": 173,
    "pathFragmentId": 237
  }, {
    "id": 174,
    "pathFragmentId": 238
  }, {
    "id": 175,
    "pathFragmentId": 239
  }, {
    "id": 176,
    "pathFragmentId": 240
  }, {
    "id": 177,
    "pathFragmentId": 241
  }, {
    "id": 178,
    "pathFragmentId": 242
  }, {
    "id": 179,
    "pathFragmentId": 243
  }, {
    "id": 180,
    "pathFragmentId": 244
  }, {
    "id": 181,
    "pathFragmentId": 245
  }, {
    "id": 182,
    "pathFragmentId": 246
  }, {
    "id": 183,
    "pathFragmentId": 247
  }, {
    "id": 184,
    "pathFragmentId": 249
  }, {
    "id": 185,
    "pathFragmentId": 250
  }, {
    "id": 186,
    "pathFragmentId": 252
  }, {
    "id": 187,
    "pathFragmentId": 253
  }, {
    "id": 188,
    "pathFragmentId": 254
  }, {
    "id": 189,
    "pathFragmentId": 256
  }, {
    "id": 190,
    "pathFragmentId": 257
  }, {
    "id": 191,
    "pathFragmentId": 258
  }, {
    "id": 192,
    "pathFragmentId": 260
  }, {
    "id": 193,
    "pathFragmentId": 262
  }, {
    "id": 194,
    "pathFragmentId": 263
  }, {
    "id": 195,
    "pathFragmentId": 264
  }, {
    "id": 196,
    "pathFragmentId": 266
  }, {
    "id": 197,
    "pathFragmentId": 267
  }, {
    "id": 198,
    "pathFragmentId": 268
  }, {
    "id": 199,
    "pathFragmentId": 269
  }, {
    "id": 200,
    "pathFragmentId": 271
  }, {
    "id": 201,
    "pathFragmentId": 272
  }, {
    "id": 202,
    "pathFragmentId": 273
  }, {
    "id": 203,
    "pathFragmentId": 274
  }, {
    "id": 204,
    "pathFragmentId": 275
  }, {
    "id": 205,
    "pathFragmentId": 276
  }, {
    "id": 206,
    "pathFragmentId": 278
  }, {
    "id": 207,
    "pathFragmentId": 279
  }, {
    "id": 208,
    "pathFragmentId": 281
  }, {
    "id": 209,
    "pathFragmentId": 282
  }, {
    "id": 210,
    "pathFragmentId": 283
  }, {
    "id": 211,
    "pathFragmentId": 284
  }, {
    "id": 212,
    "pathFragmentId": 286
  }, {
    "id": 213,
    "pathFragmentId": 287
  }, {
    "id": 214,
    "pathFragmentId": 288
  }, {
    "id": 215,
    "pathFragmentId": 289
  }, {
    "id": 216,
    "pathFragmentId": 290
  }, {
    "id": 217,
    "pathFragmentId": 291
  }, {
    "id": 218,
    "pathFragmentId": 292
  }, {
    "id": 219,
    "pathFragmentId": 293
  }, {
    "id": 220,
    "pathFragmentId": 294
  }, {
    "id": 221,
    "pathFragmentId": 295
  }, {
    "id": 222,
    "pathFragmentId": 296
  }, {
    "id": 223,
    "pathFragmentId": 297
  }, {
    "id": 224,
    "pathFragmentId": 298
  }, {
    "id": 225,
    "pathFragmentId": 299
  }, {
    "id": 226,
    "pathFragmentId": 300
  }, {
    "id": 227,
    "pathFragmentId": 301
  }, {
    "id": 228,
    "pathFragmentId": 302
  }, {
    "id": 229,
    "pathFragmentId": 303
  }, {
    "id": 230,
    "pathFragmentId": 304
  }, {
    "id": 231,
    "pathFragmentId": 305
  }, {
    "id": 232,
    "pathFragmentId": 306
  }, {
    "id": 233,
    "pathFragmentId": 307
  }, {
    "id": 234,
    "pathFragmentId": 308
  }, {
    "id": 235,
    "pathFragmentId": 309
  }, {
    "id": 236,
    "pathFragmentId": 310
  }, {
    "id": 237,
    "pathFragmentId": 311
  }, {
    "id": 238,
    "pathFragmentId": 312
  }, {
    "id": 239,
    "pathFragmentId": 313
  }, {
    "id": 240,
    "pathFragmentId": 314
  }, {
    "id": 241,
    "pathFragmentId": 315
  }, {
    "id": 242,
    "pathFragmentId": 316
  }, {
    "id": 243,
    "pathFragmentId": 317
  }, {
    "id": 244,
    "pathFragmentId": 318
  }, {
    "id": 245,
    "pathFragmentId": 319
  }, {
    "id": 246,
    "pathFragmentId": 320
  }, {
    "id": 247,
    "pathFragmentId": 321
  }, {
    "id": 248,
    "pathFragmentId": 322
  }, {
    "id": 249,
    "pathFragmentId": 323
  }, {
    "id": 250,
    "pathFragmentId": 324
  }, {
    "id": 251,
    "pathFragmentId": 325
  }, {
    "id": 252,
    "pathFragmentId": 326
  }, {
    "id": 253,
    "pathFragmentId": 327
  }, {
    "id": 254,
    "pathFragmentId": 328
  }, {
    "id": 255,
    "pathFragmentId": 329
  }, {
    "id": 256,
    "pathFragmentId": 330
  }, {
    "id": 257,
    "pathFragmentId": 331
  }, {
    "id": 258,
    "pathFragmentId": 333
  }, {
    "id": 259,
    "pathFragmentId": 334
  }, {
    "id": 260,
    "pathFragmentId": 335
  }, {
    "id": 261,
    "pathFragmentId": 336
  }, {
    "id": 262,
    "pathFragmentId": 338
  }, {
    "id": 263,
    "pathFragmentId": 339
  }, {
    "id": 264,
    "pathFragmentId": 340
  }, {
    "id": 265,
    "pathFragmentId": 341
  }, {
    "id": 266,
    "pathFragmentId": 342
  }, {
    "id": 267,
    "pathFragmentId": 345
  }, {
    "id": 268,
    "pathFragmentId": 347
  }, {
    "id": 269,
    "pathFragmentId": 348
  }, {
    "id": 270,
    "pathFragmentId": 357
  }, {
    "id": 271,
    "pathFragmentId": 358
  }, {
    "id": 272,
    "pathFragmentId": 360
  }, {
    "id": 273,
    "pathFragmentId": 361
  }, {
    "id": 274,
    "pathFragmentId": 362
  }, {
    "id": 275,
    "pathFragmentId": 366
  }, {
    "id": 276,
    "pathFragmentId": 367
  }, {
    "id": 277,
    "pathFragmentId": 368
  }, {
    "id": 278,
    "pathFragmentId": 369
  }, {
    "id": 279,
    "pathFragmentId": 370
  }, {
    "id": 280,
    "pathFragmentId": 371
  }, {
    "id": 281,
    "pathFragmentId": 372
  }, {
    "id": 282,
    "pathFragmentId": 376
  }, {
    "id": 283,
    "pathFragmentId": 377
  }, {
    "id": 284,
    "pathFragmentId": 378
  }, {
    "id": 285,
    "pathFragmentId": 379
  }, {
    "id": 286,
    "pathFragmentId": 383
  }, {
    "id": 287,
    "pathFragmentId": 384
  }, {
    "id": 288,
    "pathFragmentId": 385
  }, {
    "id": 289,
    "pathFragmentId": 387
  }, {
    "id": 290,
    "pathFragmentId": 389
  }, {
    "id": 291,
    "pathFragmentId": 390
  }, {
    "id": 292,
    "pathFragmentId": 391
  }, {
    "id": 293,
    "pathFragmentId": 393
  }, {
    "id": 294,
    "pathFragmentId": 395
  }, {
    "id": 295,
    "pathFragmentId": 397
  }, {
    "id": 296,
    "pathFragmentId": 399
  }, {
    "id": 297,
    "pathFragmentId": 401
  }, {
    "id": 298,
    "pathFragmentId": 403
  }, {
    "id": 299,
    "pathFragmentId": 405
  }, {
    "id": 300,
    "pathFragmentId": 407
  }, {
    "id": 301,
    "pathFragmentId": 409
  }, {
    "id": 302,
    "pathFragmentId": 411
  }, {
    "id": 303,
    "pathFragmentId": 413
  }, {
    "id": 304,
    "pathFragmentId": 415
  }, {
    "id": 305,
    "pathFragmentId": 417
  }, {
    "id": 306,
    "pathFragmentId": 419
  }, {
    "id": 307,
    "pathFragmentId": 421
  }, {
    "id": 308,
    "pathFragmentId": 422
  }, {
    "id": 309,
    "pathFragmentId": 423
  }, {
    "id": 310,
    "pathFragmentId": 424
  }, {
    "id": 311,
    "pathFragmentId": 425
  }, {
    "id": 312,
    "pathFragmentId": 426
  }, {
    "id": 313,
    "pathFragmentId": 427
  }, {
    "id": 314,
    "pathFragmentId": 428
  }, {
    "id": 315,
    "pathFragmentId": 429
  }, {
    "id": 316,
    "pathFragmentId": 430
  }, {
    "id": 317,
    "pathFragmentId": 431
  }, {
    "id": 318,
    "pathFragmentId": 432
  }, {
    "id": 319,
    "pathFragmentId": 433
  }, {
    "id": 320,
    "pathFragmentId": 434
  }, {
    "id": 321,
    "pathFragmentId": 435
  }, {
    "id": 322,
    "pathFragmentId": 436
  }, {
    "id": 323,
    "pathFragmentId": 440
  }, {
    "id": 324,
    "pathFragmentId": 444
  }, {
    "id": 325,
    "pathFragmentId": 445
  }, {
    "id": 326,
    "pathFragmentId": 446
  }, {
    "id": 327,
    "pathFragmentId": 447
  }, {
    "id": 328,
    "pathFragmentId": 448
  }, {
    "id": 329,
    "pathFragmentId": 449
  }, {
    "id": 330,
    "pathFragmentId": 450
  }, {
    "id": 331,
    "pathFragmentId": 451
  }, {
    "id": 332,
    "pathFragmentId": 452
  }, {
    "id": 333,
    "pathFragmentId": 453
  }, {
    "id": 334,
    "pathFragmentId": 454
  }, {
    "id": 335,
    "pathFragmentId": 455
  }, {
    "id": 336,
    "pathFragmentId": 456
  }, {
    "id": 337,
    "pathFragmentId": 457
  }, {
    "id": 338,
    "pathFragmentId": 458
  }, {
    "id": 339,
    "pathFragmentId": 459
  }, {
    "id": 340,
    "pathFragmentId": 460
  }, {
    "id": 341,
    "pathFragmentId": 461
  }, {
    "id": 342,
    "pathFragmentId": 462
  }, {
    "id": 343,
    "pathFragmentId": 463
  }, {
    "id": 344,
    "pathFragmentId": 464
  }, {
    "id": 345,
    "pathFragmentId": 465
  }, {
    "id": 346,
    "pathFragmentId": 466
  }, {
    "id": 347,
    "pathFragmentId": 467
  }, {
    "id": 348,
    "pathFragmentId": 468
  }, {
    "id": 349,
    "pathFragmentId": 469
  }, {
    "id": 350,
    "pathFragmentId": 470
  }, {
    "id": 351,
    "pathFragmentId": 471
  }, {
    "id": 352,
    "pathFragmentId": 472
  }, {
    "id": 353,
    "pathFragmentId": 473
  }, {
    "id": 354,
    "pathFragmentId": 474
  }, {
    "id": 355,
    "pathFragmentId": 475
  }, {
    "id": 356,
    "pathFragmentId": 476
  }, {
    "id": 357,
    "pathFragmentId": 477
  }, {
    "id": 358,
    "pathFragmentId": 478
  }, {
    "id": 359,
    "pathFragmentId": 479
  }, {
    "id": 360,
    "pathFragmentId": 480
  }, {
    "id": 361,
    "pathFragmentId": 481
  }, {
    "id": 362,
    "pathFragmentId": 482
  }, {
    "id": 363,
    "pathFragmentId": 484
  }, {
    "id": 364,
    "pathFragmentId": 488
  }, {
    "id": 365,
    "pathFragmentId": 492
  }, {
    "id": 366,
    "pathFragmentId": 496
  }, {
    "id": 367,
    "pathFragmentId": 500
  }, {
    "id": 368,
    "pathFragmentId": 504
  }, {
    "id": 369,
    "pathFragmentId": 508
  }, {
    "id": 370,
    "pathFragmentId": 512
  }, {
    "id": 371,
    "pathFragmentId": 516
  }, {
    "id": 372,
    "pathFragmentId": 520
  }, {
    "id": 373,
    "pathFragmentId": 524
  }, {
    "id": 374,
    "pathFragmentId": 528
  }, {
    "id": 375,
    "pathFragmentId": 532
  }, {
    "id": 376,
    "pathFragmentId": 536
  }, {
    "id": 377,
    "pathFragmentId": 540
  }, {
    "id": 378,
    "pathFragmentId": 544
  }, {
    "id": 379,
    "pathFragmentId": 548
  }, {
    "id": 380,
    "pathFragmentId": 552
  }, {
    "id": 381,
    "pathFragmentId": 553
  }, {
    "id": 382,
    "pathFragmentId": 554
  }, {
    "id": 383,
    "pathFragmentId": 555
  }, {
    "id": 384,
    "pathFragmentId": 556
  }, {
    "id": 385,
    "pathFragmentId": 557
  }, {
    "id": 386,
    "pathFragmentId": 558
  }, {
    "id": 387,
    "pathFragmentId": 559
  }, {
    "id": 388,
    "pathFragmentId": 561
  }, {
    "id": 389,
    "pathFragmentId": 562
  }, {
    "id": 390,
    "pathFragmentId": 563
  }, {
    "id": 391,
    "pathFragmentId": 565
  }, {
    "id": 392,
    "pathFragmentId": 567
  }, {
    "id": 393,
    "pathFragmentId": 569
  }, {
    "id": 394,
    "pathFragmentId": 570
  }, {
    "id": 395,
    "pathFragmentId": 571
  }, {
    "id": 396,
    "pathFragmentId": 572
  }, {
    "id": 397,
    "pathFragmentId": 573
  }, {
    "id": 398,
    "pathFragmentId": 574
  }, {
    "id": 399,
    "pathFragmentId": 578
  }, {
    "id": 400,
    "pathFragmentId": 580
  }, {
    "id": 401,
    "pathFragmentId": 581
  }, {
    "id": 402,
    "pathFragmentId": 582
  }, {
    "id": 403,
    "pathFragmentId": 583
  }, {
    "id": 404,
    "pathFragmentId": 587
  }, {
    "id": 405,
    "pathFragmentId": 591
  }],
  "actions": [{
    "targetId": 1,
    "actionKey": "034a6dc4aad732ec975d5d73b1d37361b2ec43221767b8954cefded93d9bb35f",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [1],
    "outputIds": [7],
    "primaryOutputId": 7,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "7d5028b824a440de6f0071e71f4c6df0ef0dee128721ddcd3e1c65b0c75de8e2",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [5],
    "outputIds": [122, 123, 124],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 122,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 2,
    "actionKey": "015c5a5f233b6e7e0b28862a157315b658989df14cd602cd7ab1396ef79c8e6a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [126],
    "primaryOutputId": 126,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "015473c097bbe4857d086a08de67dd115e96c053a51e1d52ee217542080fe653",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [13],
    "outputIds": [129, 130, 131, 132],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/allocationinstrumenter_internal.jdeps"
    }],
    "primaryOutputId": 129,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "609aeaadb9413f50f231740036a948f5264c39c53cc0fc3d7ea60d6c8edad1ed",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [16],
    "outputIds": [133],
    "primaryOutputId": 133,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "838f12a08eebc4c069e833c70d9109b62daf88695aa4819c9007493848f7ee58",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [134],
    "primaryOutputId": 134,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  #\n  # https://github.com/bazelbuild/bazel/pull/17670: Note that the use of \"env\"\n  # is important in these calls. Without \"env\", bash itself seems to pick up\n  # the LC_CTYPE change as soon as the variable is defined and may emit a\n  # warning when the locale files are not present. By using \"env\", bash never\n  # sees the change and the 2\u003e/dev/null redirection does the right thing.\n  if [[ \"$(env LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ \"$(env LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  current_dir\u003d$(pwd)\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    if [[ ! $path \u003d~ ^[-_.~/a-zA-Z0-9]*$ ]]; then\n      local i c buff\n      local converted_path\u003d\"\"\n\n      for ((i\u003d0; i\u003c${#path}; i++)); do\n        c\u003d${path:$i:1}\n        case ${c} in\n              [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n              * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n        esac\n        converted_path+\u003d\"${buff}\"\n      done\n      path\u003d${converted_path}\n    fi\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"${current_dir}/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "__main__/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}allocationinstrumenter_internal.jar:${RUNPATH}src/main/java/com/google/monitoring/runtime/instrumentation/liballocation_instrumenter.jar:${RUNPATH}src/main/java/com/google/monitoring/runtime/instrumentation/guava.jar:${RUNPATH}src/main/java/com/google/monitoring/runtime/instrumentation/libsampler.jar:${RUNPATH}src/main/java/com/google/monitoring/runtime/instrumentation/libstaticclasswriter.jar:${RUNPATH}../org_ow2_asm_asm/asm-9.4.jar:${RUNPATH}src/main/java/com/google/monitoring/runtime/instrumentation/libverifying_class_adapter.jar:${RUNPATH}../org_ow2_asm_asm_commons/asm-commons-9.4.jar:${RUNPATH}../org_ow2_asm_asm_tree/asm-tree-9.4.jar:${RUNPATH}../javax_annotation_jsr250_api/jsr250-api-1.0.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "NotSuitableAsAMain"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 3,
    "actionKey": "63258524695d3916448fe827a8ac82c34b3826424cc41badb9d9825d500bd74e",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [17],
    "outputIds": [143],
    "primaryOutputId": 143,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "ebd3bfa2767238c8c980d227bfdeae246369aa7f637940d7ea733e4c72559b17",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [144],
    "primaryOutputId": 144,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "c9f1c5248b6448579babf1683b095b9026e2715c26e14f7770586e83d03ddad3",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [23],
    "outputIds": [145],
    "primaryOutputId": 145,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [24],
    "outputIds": [266],
    "primaryOutputId": 266,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "2e9011578c7747634d3a43136cd2db015f6a132981385dfd182e186fc48607af",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [42],
    "outputIds": [5],
    "primaryOutputId": 5,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 3,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [268],
    "primaryOutputId": 268,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 4,
    "actionKey": "ff2d615b41a5b8eb0ba119ba641b177d3217178e511a03d5ec7bc49141b7f331",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "inputDepSetIds": [44],
    "outputIds": [127],
    "primaryOutputId": 127,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: src/main/java/com/google/monitoring/runtime/instrumentation/Bootstrap.java.in",
    "substitutions": [{
      "key": "CLASS_NAME",
      "value": "AllocationInstrumenter"
    }, {
      "key": "PACKAGE",
      "value": "com.google.monitoring.runtime.instrumentation"
    }, {
      "key": "PATH_TO_CLASS",
      "value": "com/google/monitoring/runtime/instrumentation/AllocationInstrumenterBootstrap.class"
    }, {
      "key": "PREMAIN_CLASS",
      "value": "com.google.monitoring.runtime.instrumentation.AllocationInstrumenter"
    }, {
      "key": "GENERATOR",
      "value": "allocation_instrumenter/builddefs.bzl"
    }]
  }, {
    "targetId": 5,
    "actionKey": "ff8618bfa6a05e5251dba118f3987b47eedd4e5b9759d6727c14200719752022",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [45],
    "outputIds": [270],
    "primaryOutputId": 270,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 6,
    "actionKey": "5905d57c304de7341a700b75f60c5e6d6a58a5c73dbd5c730ba9c782ca87fd19",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "inputDepSetIds": [46],
    "outputIds": [272],
    "primaryOutputId": 272,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "ARTIFACT: tools/pom-template.xml",
    "substitutions": [{
      "key": "{generated_bzl_deps}"
    }, {
      "key": "{pom_version}",
      "value": "LOCAL-SNAPSHOT"
    }]
  }, {
    "targetId": 7,
    "actionKey": "62c704c61265a54770c576ff7d001e4d1d73061b9e73fabebac096128437af21",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [47],
    "outputIds": [147, 275, 276, 277],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libstaticclasswriter.jdeps"
    }],
    "primaryOutputId": 147,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "9c7fa5d3e5232caade4ee9a71be69e455c2991a4d7cd4331e19da26bce30bd41",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [50],
    "outputIds": [279, 280],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libstaticclasswriter-hjar.jdeps"
    }],
    "primaryOutputId": 279,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 7,
    "actionKey": "d434a177b05fd6fc8d480f419d8209e49548408002925d8db4b04fb2aaf32b5a",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [51],
    "outputIds": [136],
    "primaryOutputId": 136,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "81c1f38167c342b7f28669e06b3c0d8e72b7c99a852e3aede2209777fc4f8c2c",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [52],
    "outputIds": [1, 282, 283],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 1,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "8ea78577b6a695fcbfaded1e4f652ac49fd73cf31b48734d079339ca256e1267",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [284],
    "primaryOutputId": 284,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "d2495ecef0057bb066e0a3801e39cfb524b36b3fc2f206eaa6d8b576016eb6cd",
    "mnemonic": "TemplateExpand",
    "configurationId": 2,
    "outputIds": [2],
    "primaryOutputId": 2,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  #\n  # https://github.com/bazelbuild/bazel/pull/17670: Note that the use of \"env\"\n  # is important in these calls. Without \"env\", bash itself seems to pick up\n  # the LC_CTYPE change as soon as the variable is defined and may emit a\n  # warning when the locale files are not present. By using \"env\", bash never\n  # sees the change and the 2\u003e/dev/null redirection does the right thing.\n  if [[ \"$(env LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ \"$(env LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  current_dir\u003d$(pwd)\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    if [[ ! $path \u003d~ ^[-_.~/a-zA-Z0-9]*$ ]]; then\n      local i c buff\n      local converted_path\u003d\"\"\n\n      for ((i\u003d0; i\u003c${#path}; i++)); do\n        c\u003d${path:$i:1}\n        case ${c} in\n              [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n              * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n        esac\n        converted_path+\u003d\"${buff}\"\n      done\n      path\u003d${converted_path}\n    fi\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"${current_dir}/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "__main__/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/remotejdk11_linux/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}../org_ow2_asm_asm/asm-9.4.jar:${RUNPATH}../org_ow2_asm_asm_commons/asm-commons-9.4.jar:${RUNPATH}../org_ow2_asm_asm_tree/asm-tree-9.4.jar:${RUNPATH}../javax_annotation_jsr250_api/jsr250-api-1.0.jar:${RUNPATH}../javax_inject_javax_inject/javax.inject-1.jar:${RUNPATH}../javax_enterprise_cdi_api/cdi-api-1.0.jar:${RUNPATH}../org_apache_ant_ant/ant-1.9.6.jar:${RUNPATH}../org_apache_ant_ant_launcher/ant-launcher-1.9.6.jar:${RUNPATH}../org_apache_maven_maven_artifact/maven-artifact-3.3.3.jar:${RUNPATH}../org_apache_maven_maven_model/maven-model-3.3.3.jar:${RUNPATH}../org_apache_maven_maven_plugin_api/maven-plugin-api-3.3.3.jar:${RUNPATH}../org_codehaus_plexus_plexus_classworlds/plexus-classworlds-2.5.2.jar:${RUNPATH}../org_codehaus_plexus_plexus_component_annotations/plexus-component-annotations-1.5.5.jar:${RUNPATH}../org_codehaus_plexus_plexus_utils/plexus-utils-3.0.20.jar:${RUNPATH}../org_eclipse_sisu_org_eclipse_sisu_inject/org.eclipse.sisu.inject-0.3.0.jar:${RUNPATH}../org_eclipse_sisu_org_eclipse_sisu_plexus/org.eclipse.sisu.plexus-0.3.0.jar:${RUNPATH}../org_pantsbuild_jarjar/jarjar-1.7.2.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "org.pantsbuild.jarjar.Main"
    }, {
      "key": "%jvm_flags%",
      "value": "-XX:ErrorFile\u003d/dev/stderr"
    }]
  }, {
    "targetId": 8,
    "actionKey": "4047915391a85d6b472c0f9be24524a19e6f038c0cbe5f22e8b037a8325ab2b9",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [54],
    "outputIds": [290],
    "primaryOutputId": 290,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "76d9f7c6b972ba4d0ca643c9e60c565f19bef8dde28f71c574189b6d1250216e",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 2,
    "outputIds": [291],
    "primaryOutputId": 291,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "89e2ee9aa0dec7b5bd0745060f8d844ecec1777cfaafe56882ea200a14c974e2",
    "mnemonic": "SymlinkTree",
    "configurationId": 2,
    "inputDepSetIds": [56],
    "outputIds": [292],
    "primaryOutputId": 292,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 2,
    "inputDepSetIds": [57],
    "outputIds": [3],
    "primaryOutputId": 3,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "a529ee501412071264fe351711ee28356a7610016a79ef2fe3733ad7ee10bb83",
    "mnemonic": "JavaDeployJar",
    "configurationId": 2,
    "inputDepSetIds": [60],
    "outputIds": [307],
    "primaryOutputId": 307,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 8,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 2,
    "outputIds": [308],
    "primaryOutputId": 308,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "1fd679ae9158a1a1e6e391950ad40b5f001431a41db5b9da82f934c89bcfbd3d",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [62],
    "outputIds": [150, 311, 312, 313],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libsampler.jdeps"
    }],
    "primaryOutputId": 150,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "96dff392f3b55474fbec67522c4a9b42dc669d56b3bd042eb10facd282935b54",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [64],
    "outputIds": [314, 315],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libsampler-hjar.jdeps"
    }],
    "primaryOutputId": 314,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 9,
    "actionKey": "2ecdb2c2c29234bbc4b8709ebfa0f88dd89027a43c61ccf4174eef2ec04b07f7",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [65],
    "outputIds": [139],
    "primaryOutputId": 139,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "df7a9ea12a57f59698f45caffb35629066784b268afd9db17dc27a942e1b7ad4",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [67],
    "outputIds": [152, 325, 326, 327],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/liballocation_instrumenter.jdeps"
    }],
    "primaryOutputId": 152,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "969b5dd7260b83f5ecc6e43880b24f32de582950b55e3434f853f45fa81822d6",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [76],
    "outputIds": [328, 329],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/liballocation_instrumenter-hjar.jdeps"
    }],
    "primaryOutputId": 328,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 10,
    "actionKey": "b67a69a2cbe22527c8b178603813e8d61456e49f6eed8f107ef8239da11618ca",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [77],
    "outputIds": [141],
    "primaryOutputId": 141,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 11,
    "actionKey": "12d6b07fd647ac4019aa98d07e85833269767cf2005ee2525076ad4fcf25bb6b",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [79],
    "outputIds": [330, 331, 332],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 330,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 11,
    "actionKey": "9a89df48c750b7f8ddd32188d166735f24a6863b62a816d170284cdc2398ea92",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [142],
    "primaryOutputId": 142,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 11,
    "actionKey": "528ab889dfbd9f21b0e9f060e83562e5222e99aacd47cdb74d7a9a77fb66bf91",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [81],
    "outputIds": [333, 334, 335],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 333,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 11,
    "actionKey": "4febf265fd4716fafca25ec751a4b8947b0d6bf780cc47cd424dc8940bcba47b",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [288],
    "primaryOutputId": 288,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 12,
    "actionKey": "141afbf37e5de952008a6b0513d126e5546903aa18ed2fadd083fb46d5bdcce3",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [83],
    "outputIds": [336, 337, 338],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 336,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 12,
    "actionKey": "5986362e9e3597bb825abe4b1ebc6d40deed9b8ffb3dbd1c5daa3f80602da6ae",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [285],
    "primaryOutputId": 285,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "576873ecd3d199aabf3f63a38cc2f583c0ae6185259d3b4b3b2e00f3967d42bc",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [85],
    "outputIds": [339, 340, 341],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 339,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "c6763a1e9c88c7db72d480bc08889a2c17abd54712fb2abd0c45a3f763c98d04",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [286],
    "primaryOutputId": 286,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "9df721b6afc7ef68961f03438012c5f0cb44b2098a24e69db2abbf6ba893b914",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [87],
    "outputIds": [342, 343, 344],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 342,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "5d189244e265da5055b10843c63ffd2fb74b2e5437e3032d5ca721fc64d65a37",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [287],
    "primaryOutputId": 287,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 15,
    "actionKey": "49c6404c4f36321259d68b2dac2e6b6a92973c5897f4f45eba599c58e9eca1c5",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [89],
    "outputIds": [345, 346, 347],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 345,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 15,
    "actionKey": "3aa128fada34a23ff663127043b7e6ddaddff0919bebf0720c22a10ad676a2a9",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [289],
    "primaryOutputId": 289,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 16,
    "actionKey": "3d77209dd4879d7585d4832a9f110c2e7a73492841066b76c8ca237bb6432751",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [91],
    "outputIds": [149, 349, 350, 351],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }, {
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libverifying_class_adapter.jdeps"
    }],
    "primaryOutputId": 149,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 16,
    "actionKey": "7fa27a67541719a7069ac9ec7b7cc11a436ae9476f99b716d18ac20187b46ccf",
    "mnemonic": "Turbine",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [97],
    "outputIds": [321, 324],
    "executionInfo": [{
      "key": "internal-inline-outputs",
      "value": "bazel-out/k8-fastbuild/bin/src/main/java/com/google/monitoring/runtime/instrumentation/libverifying_class_adapter-hjar.jdeps"
    }],
    "primaryOutputId": 321,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 16,
    "actionKey": "d5547f36c47475ac0ff1a42618a63ccf0c2c834c2063348b51b4eaab3600c6a4",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [98],
    "outputIds": [138],
    "primaryOutputId": 138,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "d9f65c93779b24fc0d9d75fd48455c45f88f809ec75611578582055cbf811281",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [99],
    "outputIds": [352, 353, 354],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 352,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 13,
    "actionKey": "0e89d26cd917ae689cdb323339f0e4ba886861bdae6a7237b4abae2e1f756e89",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [137],
    "primaryOutputId": 137,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "1dcfe64694a451a347504165648bf31c1fe1448d2c3716f2b702ee8df0e2bca8",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [101],
    "outputIds": [355, 356, 357],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 355,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 14,
    "actionKey": "2dbe32c761d0057b548f7ea6296e0ca01861e87c92c87585b2398bc75d97b39f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [140],
    "primaryOutputId": 140,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 12,
    "actionKey": "d2092af3d52fc7b46e06796268be7fdefbf1f76b4ff68a4b40a92b97b2ffb183",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [103],
    "outputIds": [358, 359, 360],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 358,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 12,
    "actionKey": "ded909b426e3f0130bab69e420ff9e5f5d5c9a2817c8e255abd88903990cc9a4",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [135],
    "primaryOutputId": 135,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 17,
    "actionKey": "b69cf5e1f48d668c9b10f6cc6e129782530f9ca6d0bcd1b8df91ea42ad725641",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [105],
    "outputIds": [153],
    "primaryOutputId": 153,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 18,
    "actionKey": "821ee528cd206271a41ae67a38a57adeedca31419b56a58cc82cf73707dcf803",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [106],
    "outputIds": [363],
    "primaryOutputId": 363,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 19,
    "actionKey": "9a5280ed4c685e55fe18b8409e4ed7ec36f449b53bc44bcb7a047c542e028430",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [107],
    "outputIds": [364],
    "primaryOutputId": 364,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "ab4c080ee1c388c897c2dc67a2127731907fc5688f1400364656b042134be072",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [108],
    "outputIds": [128],
    "primaryOutputId": 128,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 21,
    "actionKey": "7e6483e573fe231f37d77b2e2f6636df944df5c33fdb84993ed944bc453191c9",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [109],
    "outputIds": [365],
    "primaryOutputId": 365,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 22,
    "actionKey": "9ab902f4020f1a16099fdd9dea5ef12fb71aa3ee5d6693d11f8b8edbfb560195",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [110],
    "outputIds": [366],
    "primaryOutputId": 366,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 23,
    "actionKey": "f4911d2f6b67270a55c4ce6707c3eeb61bb46661a5d6ee96ff7f8067ba7fb656",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [111],
    "outputIds": [367],
    "primaryOutputId": 367,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 24,
    "actionKey": "f506e646245724f596facdaed7f4baac3e254171e02a13053a71879ad9b0429d",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [112],
    "outputIds": [368],
    "primaryOutputId": 368,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 25,
    "actionKey": "4c6dd8a7154e148f7b185ae4fcc8ce73af425990eb9352653412df66dc4e733c",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [113],
    "outputIds": [369],
    "primaryOutputId": 369,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 26,
    "actionKey": "7ff79e49588e354a8796fb8b1b02994a44d51d2f1c02a9a9dac79ea3ecb8e03f",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [114],
    "outputIds": [370],
    "primaryOutputId": 370,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 27,
    "actionKey": "f27707b9b9ee9b3e40f65a0a83bbad94fa90962df04ac23b3f423311e8aad963",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [115],
    "outputIds": [371],
    "primaryOutputId": 371,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 28,
    "actionKey": "ad4061440c328943647f5fe72aa1d270874296fe9f8f7d94009ed1fa1fd6eddf",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [116],
    "outputIds": [372],
    "primaryOutputId": 372,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 29,
    "actionKey": "c5b41f9e8b1ed98e51d7c3e1be3d2f61fd15e21bae1a30599514c0669ad896b7",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [117],
    "outputIds": [373],
    "primaryOutputId": 373,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 30,
    "actionKey": "9713067f34d1fbbac4a2992e17af7fc37f0178ff6ed4636b208e52ebc5a10b70",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [118],
    "outputIds": [374],
    "primaryOutputId": 374,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 20,
    "actionKey": "c7386b3c7cc06b819b97b703c53de6c6aecbdf3c75de47ffc67acbecd74de411",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [119],
    "outputIds": [375],
    "primaryOutputId": 375,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "d9b2628d8b26d1b9ad69854b3c69ff88d40100efcc2c81fd9e26a722fb14d7c9",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [120],
    "outputIds": [274],
    "primaryOutputId": 274,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 31,
    "actionKey": "ffbc579be80966997201ab65126e4b003da579e49e1089bf3658c0fbbae2b881",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [121],
    "outputIds": [376],
    "primaryOutputId": 376,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "1846a28afbfac9f24c3e717c5d6f6fc36affd58d106bf31eec82328edff52064",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [122],
    "outputIds": [377],
    "primaryOutputId": 377,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 33,
    "actionKey": "131ef081de51c2a64d947c047e7f0c5560637a404d515c9aa49432ce39b29f80",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [123],
    "outputIds": [378],
    "primaryOutputId": 378,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 33,
    "actionKey": "5a8be894323d4269c0c30c07c03a2fa6839a74e6997885f69c706e611dcedcf8",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [124],
    "outputIds": [322],
    "primaryOutputId": 322,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 32,
    "actionKey": "aea1066d768193c6752c669cad1f2695c1f2850a6d2cbdd00ce05e1ad0686c1e",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [125],
    "outputIds": [323],
    "primaryOutputId": 323,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 34,
    "actionKey": "d2cd1dda7d921f182095af8193a13f96806e93a1cfe9b8595247461dacbbc5cf",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [126],
    "outputIds": [379],
    "primaryOutputId": 379,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 35,
    "actionKey": "27623063717e6f7cd78b36b5f2e97af18539c958f2773c89f7ee6d85f3262b50",
    "mnemonic": "Genrule",
    "configurationId": 1,
    "inputDepSetIds": [127],
    "outputIds": [361],
    "primaryOutputId": 361,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "537520714d9f4b4667c7377678223045a35fd1928dcceb448bdda75698c15e4e",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [129],
    "outputIds": [382, 383, 384],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 382,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "305e43445d8b6966cbf633d1501d3677800f3da9149a73c8ef0399475ec7a81f",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [385],
    "primaryOutputId": 385,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "61a945e5bcf88b1f3f5c91f83f409cbc5ffba65295919be0c81fb8359775bd6c",
    "mnemonic": "TemplateExpand",
    "configurationId": 1,
    "outputIds": [386],
    "primaryOutputId": 386,
    "executionPlatform": "@local_config_platform//:host",
    "templateContent": "#!/usr/bin/env bash\n# Copyright 2014 The Bazel Authors. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# This script was generated from java_stub_template.txt.  Please\n# don\u0027t edit it directly.\n#\n# If present, these flags should either be at the beginning of the command\n# line, or they should be wrapped in a --wrapper_script_flag\u003dFLAG argument.\n#\n# --debug               Launch the JVM in remote debugging mode listening\n# --debug\u003d\u003cport\u003e        to the specified port or the port set in the\n#                       DEFAULT_JVM_DEBUG_PORT environment variable (e.g.\n#                       \u0027export DEFAULT_JVM_DEBUG_PORT\u003d8000\u0027) or else the\n#                       default port of 5005.  The JVM starts suspended\n#                       unless the DEFAULT_JVM_DEBUG_SUSPEND environment\n#                       variable is set to \u0027n\u0027.\n# --main_advice\u003d\u003cclass\u003e Run an alternate main class with the usual main\n#                       program and arguments appended as arguments.\n# --main_advice_classpath\u003d\u003cclasspath\u003e\n#                       Prepend additional class path entries.\n# --jvm_flag\u003d\u003cflag\u003e     Pass \u003cflag\u003e to the \"java\" command itself.\n#                       \u003cflag\u003e may contain spaces. Can be used multiple times.\n# --jvm_flags\u003d\u003cflags\u003e   Pass space-separated flags to the \"java\" command\n#                       itself. Can be used multiple times.\n# --singlejar           Start the program from the packed-up deployment\n#                       jar rather than from the classpath.\n# --print_javabin       Print the location of java executable binary and exit.\n# --classpath_limit\u003d\u003clength\u003e\n#                       Specify the maximum classpath length. If the classpath\n#                       is shorter, this script passes it to Java as a command\n#                       line flag, otherwise it creates a classpath jar.\n#\n# The remainder of the command line is passed to the program.\n\nset -o posix\n\n# Make it easy to insert \u0027set -x\u0027 or similar commands when debugging problems with this script.\neval \"$JAVA_STUB_DEBUG\"\n\n# Prevent problems where the caller has exported CLASSPATH, causing our\n# computed value to be copied into the environment and double-counted\n# against the argv limit.\nunset CLASSPATH\n\nJVM_FLAGS_CMDLINE\u003d()\n\n# Processes an argument for the wrapper. Returns 0 if the given argument\n# was recognized as an argument for this wrapper, and 1 if it was not.\nfunction process_wrapper_argument() {\n  case \"$1\" in\n    --debug) JVM_DEBUG_PORT\u003d\"${DEFAULT_JVM_DEBUG_PORT:-5005}\" ;;\n    --debug\u003d*) JVM_DEBUG_PORT\u003d\"${1#--debug\u003d}\" ;;\n    --main_advice\u003d*) MAIN_ADVICE\u003d\"${1#--main_advice\u003d}\" ;;\n    --main_advice_classpath\u003d*) MAIN_ADVICE_CLASSPATH\u003d\"${1#--main_advice_classpath\u003d}\" ;;\n    --jvm_flag\u003d*) JVM_FLAGS_CMDLINE+\u003d( \"${1#--jvm_flag\u003d}\" ) ;;\n    --jvm_flags\u003d*) JVM_FLAGS_CMDLINE+\u003d( ${1#--jvm_flags\u003d} ) ;;\n    --singlejar) SINGLEJAR\u003d1 ;;\n    --print_javabin) PRINT_JAVABIN\u003d1 ;;\n    --classpath_limit\u003d*)\n        CLASSPATH_LIMIT\u003d\"${1#--classpath_limit\u003d}\"\n        echo \"$CLASSPATH_LIMIT\" | grep -q \u0027^[0-9]\\+$\u0027 || \\\n          die \"ERROR: $self failed, --classpath_limit is not a number\"\n        ;;\n    *)\n      return 1 ;;\n  esac\n  return 0\n}\n\ndie() {\n  printf \"%s: $1\\n\" \"$0\" \"${@:2}\" \u003e\u00262\n  exit 1\n}\n\n# Windows\nfunction is_windows() {\n  [[ \"${OSTYPE}\" \u003d~ msys* ]] || [[ \"${OSTYPE}\" \u003d~ cygwin* ]]\n}\n\n# macOS\nfunction is_macos() {\n  [[ \"${OSTYPE}\" \u003d~ darwin* ]]\n}\n\nfunction available_utf8_locale() {\n  # Both C.UTF-8 and en_US.UTF-8 do not cause any language-specific effects\n  # when set as LC_CTYPE, but neither is certain to exist on all systems.\n  #\n  # https://github.com/bazelbuild/bazel/pull/17670: Note that the use of \"env\"\n  # is important in these calls. Without \"env\", bash itself seems to pick up\n  # the LC_CTYPE change as soon as the variable is defined and may emit a\n  # warning when the locale files are not present. By using \"env\", bash never\n  # sees the change and the 2\u003e/dev/null redirection does the right thing.\n  if [[ \"$(env LC_CTYPE\u003dC.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"C.UTF-8\"\n  elif [[ \"$(env LC_CTYPE\u003den_US.UTF-8 locale charmap 2\u003e/dev/null)\" \u003d\u003d \"UTF-8\" ]]; then\n    echo \"en_US.UTF-8\"\n  fi\n}\n\n# Parse arguments sequentially until the first unrecognized arg is encountered.\n# Scan the remaining args for --wrapper_script_flag\u003dX options and process them.\nARGS\u003d()\nfor ARG in \"$@\"; do\n  if [[ \"$ARG\" \u003d\u003d --wrapper_script_flag\u003d* ]]; then\n    process_wrapper_argument \"${ARG#--wrapper_script_flag\u003d}\" \\\n      || die \"invalid wrapper argument \u0027%s\u0027\" \"$ARG\"\n  elif [[ \"${#ARGS}\" -gt 0 ]] || ! process_wrapper_argument \"$ARG\"; then\n    ARGS+\u003d( \"$ARG\" )\n  fi\ndone\n\n# Find our runfiles tree.  We need this to construct the classpath\n# (unless --singlejar was passed).\n#\n# Call this program X.  X was generated by a java_binary or java_test rule.\n# X may be invoked in many ways:\n#   1a) directly by a user, with $0 in the output tree\n#   1b) via \u0027bazel run\u0027 (similar to case 1a)\n#   2) directly by a user, with $0 in X\u0027s runfiles tree\n#   3) by another program Y which has a data dependency on X, with $0 in Y\u0027s runfiles tree\n#   4) via \u0027bazel test\u0027\n#   5) by a genrule cmd, with $0 in the output tree\n#   6) case 3 in the context of a genrule\n#\n# For case 1, $0 will be a regular file, and the runfiles tree will be\n# at $0.runfiles.\n# For case 2, $0 will be a symlink to the file seen in case 1.\n# For case 3, we use Y\u0027s runfiles tree, which will be a superset of X\u0027s.\n# For case 4, $JAVA_RUNFILES and $TEST_SRCDIR should already be set.\n# Case 5 is handled like case 1.\n# Case 6 is handled like case 3.\n\n# If we are running on Windows, convert the windows style path\n# to unix style for detecting runfiles path.\nif is_windows; then\n  self\u003d$(cygpath --unix \"$0\")\nelse\n  self\u003d\"$0\"\nfi\n\nif [[ \"$self\" !\u003d /* ]]; then\n  self\u003d\"$PWD/$self\"\nfi\n\nif [[ \"$SINGLEJAR\" !\u003d 1 || \"%needs_runfiles%\" \u003d\u003d 1 ]]; then\n  if [[ -z \"$JAVA_RUNFILES\" ]]; then\n    while true; do\n      if [[ -e \"$self.runfiles\" ]]; then\n        JAVA_RUNFILES\u003d\"$self.runfiles\"\n        break\n      fi\n      if [[ $self \u003d\u003d *.runfiles/* ]]; then\n        JAVA_RUNFILES\u003d\"${self%.runfiles/*}.runfiles\"\n        break\n      fi\n      if [[ ! -L \"$self\" ]]; then\n        break\n      fi\n      readlink\u003d\"$(readlink \"$self\")\"\n      if [[ \"$readlink\" \u003d /* ]]; then\n        self\u003d\"$readlink\"\n      else\n        # resolve relative symlink\n        self\u003d\"${self%/*}/$readlink\"\n      fi\n    done\n    if [[ -n \"$JAVA_RUNFILES\" ]]; then\n      export TEST_SRCDIR\u003d${TEST_SRCDIR:-$JAVA_RUNFILES}\n    elif [[ -f \"${self}_deploy.jar\" \u0026\u0026 \"%needs_runfiles%\" \u003d\u003d 0 ]]; then\n      SINGLEJAR\u003d1;\n    else\n      die \u0027Cannot locate runfiles directory. (Set $JAVA_RUNFILES to inhibit searching.)\u0027\n    fi\n  fi\nfi\n\n# If we are running on Windows, we need a windows style runfiles path for constructing CLASSPATH\nif is_windows; then\n  JAVA_RUNFILES\u003d$(cygpath --windows \"$JAVA_RUNFILES\")\nfi\n\nexport JAVA_RUNFILES\nexport RUNFILES_MANIFEST_FILE\u003d\"${JAVA_RUNFILES}/MANIFEST\"\nexport RUNFILES_MANIFEST_ONLY\u003d%runfiles_manifest_only%\n\nif [ -z \"$RUNFILES_MANIFEST_ONLY\" ]; then\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      echo \"$(dirname $RUNFILES_MANIFEST_FILE)/$1\"\n    fi\n  }\nelse\n  if ! is_macos; then\n    # Read file into my_array\n    oifs\u003d$IFS\n    IFS\u003d$\u0027\\n\u0027\n    my_array\u003d( $(sed -e \u0027s/\\r//g\u0027 \"$RUNFILES_MANIFEST_FILE\") )\n    IFS\u003d$oifs\n\n    # Process each runfile line into a [key,value] entry in runfiles_array\n    # declare -A is not supported on macOS because an old version of bash is used.\n    declare -A runfiles_array\n    for line in \"${my_array[@]}\"\n    do\n      line_split\u003d($line)\n      runfiles_array[${line_split[0]}]\u003d${line_split[@]:1}\n    done\n  fi\n\n  function rlocation() {\n    if [[ \"$1\" \u003d /* ]]; then\n      echo $1\n    else\n      if is_macos; then\n        # Print the rest of line after the first space\n        # First, set the first column to empty and print rest of the line\n        # Second, use a trick of awk to remove leading and trailing spaces.\n        echo $(grep \"^$1 \" $RUNFILES_MANIFEST_FILE | awk \u0027{ $1\u003d\"\"; print }\u0027 | awk \u0027{ $1\u003d$1; print }\u0027)\n      else\n        echo ${runfiles_array[$1]}\n      fi\n    fi\n  }\nfi\n\n# Set JAVABIN to the path to the JVM launcher.\n%javabin%\n\nif [[ \"$PRINT_JAVABIN\" \u003d\u003d 1 || \"%java_start_class%\" \u003d\u003d \"--print_javabin\" ]]; then\n  echo -n \"$JAVABIN\"\n  exit 0\nfi\n\nif [[ \"$SINGLEJAR\" \u003d\u003d 1 ]]; then\n  CLASSPATH\u003d\"${self}_deploy.jar\"\n  # Check for the deploy jar now.  If it doesn\u0027t exist, we can print a\n  # more helpful error message than the JVM.\n  [[ -r \"$CLASSPATH\" ]] \\\n    || die \"Option --singlejar was passed, but %s does not exist.\\n  (You may need to build it explicitly.)\" \"$CLASSPATH\"\nelse\n  # Create the shortest classpath we can, by making it relative if possible.\n  RUNPATH\u003d\"${JAVA_RUNFILES}/%workspace_prefix%\"\n  RUNPATH\u003d\"${RUNPATH#$PWD/}\"\n  CLASSPATH\u003d%classpath%\nfi\n\n# Export the locations which will be used to find the location of the classes from the classpath file.\nexport SELF_LOCATION\u003d\"$self\"\nexport CLASSLOADER_PREFIX_PATH\u003d\"${RUNPATH}\"\n\n# If using Jacoco in offline instrumentation mode, the CLASSPATH contains instrumented files.\n# We need to make the metadata jar with uninstrumented classes available for generating\n# the lcov-compatible coverage report, and we don\u0027t want it on the classpath.\n%set_jacoco_metadata%\n%set_jacoco_main_class%\n%set_jacoco_java_runfiles_root%\nexport JACOCO_IS_JAR_WRAPPED\u003d0\n\nif [[ -n \"$JVM_DEBUG_PORT\" ]]; then\n  JVM_DEBUG_SUSPEND\u003d${DEFAULT_JVM_DEBUG_SUSPEND:-\"y\"}\n  JVM_DEBUG_FLAGS\u003d\"-agentlib:jdwp\u003dtransport\u003ddt_socket,server\u003dy,suspend\u003d${JVM_DEBUG_SUSPEND},address\u003d${JVM_DEBUG_PORT}\"\nfi\n\nif [[ -n \"$MAIN_ADVICE_CLASSPATH\" ]]; then\n  CLASSPATH\u003d\"${MAIN_ADVICE_CLASSPATH}:${CLASSPATH}\"\nfi\n\n# Check if TEST_TMPDIR is available to use for scratch.\nif [[ -n \"$TEST_TMPDIR\" \u0026\u0026 -d \"$TEST_TMPDIR\" ]]; then\n  JVM_FLAGS+\u003d\" -Djava.io.tmpdir\u003d$TEST_TMPDIR\"\nfi\n\nARGS\u003d(\n  ${JVM_DEBUG_FLAGS}\n  ${JVM_FLAGS}\n  %jvm_flags%\n  \"${JVM_FLAGS_CMDLINE[@]}\"\n  ${MAIN_ADVICE}\n  %java_start_class%\n  \"${ARGS[@]}\")\n\n\nfunction create_and_run_classpath_jar() {\n  # Build class path.\n  MANIFEST_CLASSPATH\u003d()\n  if is_windows; then\n    CLASSPATH_SEPARATOR\u003d\";\"\n  else\n    CLASSPATH_SEPARATOR\u003d\":\"\n  fi\n\n  OLDIFS\u003d\"$IFS\"\n  IFS\u003d\"${CLASSPATH_SEPARATOR}\" # Use a custom separator for the loop.\n  current_dir\u003d$(pwd)\n  for path in ${CLASSPATH}; do\n    # Loop through the characters of the path and convert characters that are\n    # not alphanumeric nor -_.~/ to their 2-digit hexadecimal representation\n    if [[ ! $path \u003d~ ^[-_.~/a-zA-Z0-9]*$ ]]; then\n      local i c buff\n      local converted_path\u003d\"\"\n\n      for ((i\u003d0; i\u003c${#path}; i++)); do\n        c\u003d${path:$i:1}\n        case ${c} in\n              [-_.~/a-zA-Z0-9] ) buff\u003d${c} ;;\n              * )               printf -v buff \u0027%%%02x\u0027 \"\u0027$c\u0027\"\n        esac\n        converted_path+\u003d\"${buff}\"\n      done\n      path\u003d${converted_path}\n    fi\n\n    if is_windows; then\n      path\u003d\"file:/${path}\" # e.g. \"file:/C:/temp/foo.jar\"\n    else\n      # If not absolute, qualify the path\n      case \"${path}\" in\n        /*) ;; # Already an absolute path\n        *) path\u003d\"${current_dir}/${path}\";; # Now qualified\n      esac\n      path\u003d\"file:${path}\" # e.g. \"file:/usr/local/foo.jar\"\n    fi\n\n    MANIFEST_CLASSPATH+\u003d(\"${path}\")\n  done\n  IFS\u003d\"$OLDIFS\"\n\n  # Create manifest file\n  MANIFEST_FILE\u003d\"$(mktemp -t XXXXXXXX.jar_manifest)\"\n  (\n    echo \"Manifest-Version: 1.0\"\n\n    CLASSPATH_LINE\u003d\"Class-Path: ${MANIFEST_CLASSPATH[*]}\"\n    CLASSPATH_MANIFEST_LINES\u003d$(sed -E $\u0027s/(.{71})/\\\\1\\\\\\n /g\u0027 \u003c\u003c\u003c \"${CLASSPATH_LINE}\")\n\n    echo \"$CLASSPATH_MANIFEST_LINES\"\n    echo \"Created-By: Bazel\"\n  ) \u003e$MANIFEST_FILE\n\n  # Create classpath JAR file\n  MANIFEST_JAR_FILE\u003d\"$(mktemp -t XXXXXXXX-classpath.jar)\"\n  if is_windows; then\n    MANIFEST_JAR_FILE\u003d\"$(cygpath --windows \"$MANIFEST_JAR_FILE\")\"\n    MANIFEST_FILE\u003d\"$(cygpath --windows \"$MANIFEST_FILE\")\"\n  fi\n  if is_windows; then\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java.exe}/jar.exe}\"\n  else\n    JARBIN\u003d\"${JARBIN:\u003d${JAVABIN%/java}/jar}\"\n  fi\n  $JARBIN cvfm \"$MANIFEST_JAR_FILE\" \"$MANIFEST_FILE\" \u003e/dev/null || \\\n    die \"ERROR: $self failed because $JARBIN failed\"\n\n  # Execute JAVA command\n  $JAVABIN -classpath \"$MANIFEST_JAR_FILE\" \"${ARGS[@]}\"\n  exit_code\u003d$?\n  rm -f \"$MANIFEST_FILE\"\n  rm -f \"$MANIFEST_JAR_FILE\"\n  exit $exit_code\n}\n\n# If the user didn\u0027t specify a --classpath_limit, use the default value.\nif [ -z \"$CLASSPATH_LIMIT\" ]; then\n  # Windows per-arg limit MAX_ARG_STRLEN \u003d\u003d 8k\n  # Linux per-arg limit MAX_ARG_STRLEN \u003d\u003d 128k\n  is_windows \u0026\u0026 CLASSPATH_LIMIT\u003d7000 || CLASSPATH_LIMIT\u003d120000\nfi\n\n# On non-macOS Unix, without any locale variable set, the JVM would use\n# using ASCII rather than UTF-8 as the encoding for file system paths.\nif ! is_macos; then\n  if [ -z ${LC_CTYPE+x} ] \u0026\u0026 [ -z ${LC_ALL+x} ] \u0026\u0026 [ -z ${LANG+x} ]; then\n    UTF8_LOCALE\u003d$(available_utf8_locale)\n    if [[ -n \"$UTF8_LOCALE\" ]]; then\n      export LC_CTYPE\u003d\"$UTF8_LOCALE\"\n    fi\n  fi\nfi\n\nif ((\"${#CLASSPATH}\" \u003e ${CLASSPATH_LIMIT})); then\n  export JACOCO_IS_JAR_WRAPPED\u003d1\n  create_and_run_classpath_jar\nelse\n  exec $JAVABIN -classpath $CLASSPATH \"${ARGS[@]}\"\nfi\n",
    "substitutions": [{
      "key": "%runfiles_manifest_only%"
    }, {
      "key": "%workspace_prefix%",
      "value": "__main__/"
    }, {
      "key": "%javabin%",
      "value": "JAVABIN\u003d${JAVABIN:-${JAVA_RUNFILES}/local_jdk/bin/java}"
    }, {
      "key": "%needs_runfiles%",
      "value": "1"
    }, {
      "key": "%classpath%",
      "value": "\"${RUNPATH}../com_google_guava_failureaccess/failureaccess-1.0.1.jar:${RUNPATH}../com_google_guava_guava/guava-32.1.1-jre.jar\""
    }, {
      "key": "%set_jacoco_metadata%"
    }, {
      "key": "%set_jacoco_main_class%"
    }, {
      "key": "%set_jacoco_java_runfiles_root%"
    }, {
      "key": "%java_start_class%",
      "value": "NotSuitableAsAMain"
    }, {
      "key": "%jvm_flags%"
    }]
  }, {
    "targetId": 36,
    "actionKey": "65023c7f8942b92a0bf716a7023b7f976a8bc62dabb2664768f09e4a71cb5519",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [131],
    "outputIds": [388],
    "primaryOutputId": 388,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "f3537c1113dfb7a0eaac58696bcd077a68b361bf5eacf2476e9cf0c42d765902",
    "mnemonic": "SourceSymlinkManifest",
    "configurationId": 1,
    "outputIds": [389],
    "primaryOutputId": 389,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "8bfd26e8c38403a1bf6c7a6fb7871ba1f8ce7fdc8559c3cb3bd866c917cedeed",
    "mnemonic": "SymlinkTree",
    "configurationId": 1,
    "inputDepSetIds": [133],
    "outputIds": [390],
    "primaryOutputId": 390,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "709e80c88487a2411e1ee4dfb9f22a861492d20c4765150c0c794abd70f8147c",
    "mnemonic": "Middleman",
    "configurationId": 1,
    "inputDepSetIds": [134],
    "outputIds": [393],
    "primaryOutputId": 393,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "2d3fcfcb3ff36a0cfa445c6e6e04387bd11800aacb6e710ba5077bf00a651e2e",
    "mnemonic": "JavaDeployJar",
    "configurationId": 1,
    "inputDepSetIds": [139],
    "outputIds": [381],
    "primaryOutputId": 381,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 36,
    "actionKey": "5799419ea054d91b42a92218065a74b0646fb9eb9f69f873cd42d0f7b552c628",
    "mnemonic": "FileWrite",
    "configurationId": 1,
    "outputIds": [394],
    "primaryOutputId": 394,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "a7f4e4f4ef38f4b3340ca6483713ba3281fa5c0bdc91f0cbed98e10a786e37ba",
    "mnemonic": "Javac",
    "configurationId": 1,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [141],
    "outputIds": [395, 396, 397],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 395,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 37,
    "actionKey": "f8fb0dde025002e91cf8f054a23e22c5a3a41b3f7e4810b9ab1cde8100600e72",
    "mnemonic": "JavaSourceJar",
    "configurationId": 1,
    "inputDepSetIds": [12],
    "outputIds": [387],
    "primaryOutputId": 387,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "d1ce758b342e3613f506d487f2e21a67947bf79b4df53a22dcbca36060934a65",
    "mnemonic": "Javac",
    "configurationId": 2,
    "environmentVariables": [{
      "key": "LC_CTYPE",
      "value": "en_US.UTF-8"
    }],
    "inputDepSetIds": [143],
    "outputIds": [399, 400, 401],
    "executionInfo": [{
      "key": "supports-workers",
      "value": "1"
    }, {
      "key": "supports-multiplex-workers",
      "value": "1"
    }, {
      "key": "supports-worker-cancellation",
      "value": "1"
    }],
    "primaryOutputId": 399,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 38,
    "actionKey": "9e512ee48cf7594a1bcc5663ede043ae896826e83049c2d43c0276776c7a0ae7",
    "mnemonic": "JavaSourceJar",
    "configurationId": 2,
    "inputDepSetIds": [12],
    "outputIds": [402],
    "primaryOutputId": 402,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 39,
    "actionKey": "f5391ab65740d7ca5d59a1be61b37fe3cd5f621a2e0be382fc2494c523e24f91",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [146],
    "outputIds": [403],
    "primaryOutputId": 403,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 40,
    "actionKey": "7d8dbc2794265ca7fe27cf8d99337198ba7c8e74a79b213d1378207416098e83",
    "mnemonic": "JavaIjar",
    "configurationId": 1,
    "inputDepSetIds": [147],
    "outputIds": [404],
    "primaryOutputId": 404,
    "executionPlatform": "@local_config_platform//:host"
  }, {
    "targetId": 41,
    "actionKey": "31ae3968343f09ec1ec5714dc4f847625b25c81f092967dd317387fc0f84987b",
    "mnemonic": "JavaIjar",
    "configurationId": 2,
    "inputDepSetIds": [148],
    "outputIds": [398],
    "primaryOutputId": 398,
    "executionPlatform": "@local_config_platform//:host"
  }],
  "targets": [{
    "id": 1,
    "label": "//:allocationinstrumenter_asm_rename",
    "ruleClassId": 1
  }, {
    "id": 2,
    "label": "//:allocationinstrumenter",
    "ruleClassId": 2
  }, {
    "id": 3,
    "label": "//:allocationinstrumenter_internal",
    "ruleClassId": 3
  }, {
    "id": 4,
    "label": "//:allocationinstrumenter_bootstrap",
    "ruleClassId": 4
  }, {
    "id": 5,
    "label": "//:allocationinstrumenter_jar_strip",
    "ruleClassId": 1
  }, {
    "id": 6,
    "label": "//:pom",
    "ruleClassId": 5
  }, {
    "id": 7,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:staticclasswriter",
    "ruleClassId": 2
  }, {
    "id": 8,
    "label": "@google_bazel_common//tools/jarjar:jarjar",
    "ruleClassId": 3
  }, {
    "id": 9,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:sampler",
    "ruleClassId": 2
  }, {
    "id": 10,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:allocation_instrumenter",
    "ruleClassId": 2
  }, {
    "id": 11,
    "label": "@google_bazel_common//third_party/java/jsr250_annotations:jsr250_annotations",
    "ruleClassId": 2
  }, {
    "id": 12,
    "label": "@google_bazel_common//third_party/java/asm:asm",
    "ruleClassId": 2
  }, {
    "id": 13,
    "label": "@google_bazel_common//third_party/java/asm:asm-commons",
    "ruleClassId": 2
  }, {
    "id": 14,
    "label": "@google_bazel_common//third_party/java/asm:asm-tree",
    "ruleClassId": 2
  }, {
    "id": 15,
    "label": "@google_bazel_common//third_party/java/jsr330_inject:jsr330_inject",
    "ruleClassId": 2
  }, {
    "id": 16,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:verifying_class_adapter",
    "ruleClassId": 2
  }, {
    "id": 17,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:guava",
    "ruleClassId": 1
  }, {
    "id": 18,
    "label": "@org_codehaus_plexus_plexus_component_annotations//:org_codehaus_plexus_plexus_component_annotations",
    "ruleClassId": 6
  }, {
    "id": 19,
    "label": "@org_apache_maven_maven_artifact//:org_apache_maven_maven_artifact",
    "ruleClassId": 6
  }, {
    "id": 20,
    "label": "@javax_annotation_jsr250_api//:javax_annotation_jsr250_api",
    "ruleClassId": 6
  }, {
    "id": 21,
    "label": "@org_eclipse_sisu_org_eclipse_sisu_plexus//:org_eclipse_sisu_org_eclipse_sisu_plexus",
    "ruleClassId": 6
  }, {
    "id": 22,
    "label": "@org_codehaus_plexus_plexus_classworlds//:org_codehaus_plexus_plexus_classworlds",
    "ruleClassId": 6
  }, {
    "id": 23,
    "label": "@org_apache_maven_maven_plugin_api//:org_apache_maven_maven_plugin_api",
    "ruleClassId": 6
  }, {
    "id": 24,
    "label": "@org_eclipse_sisu_org_eclipse_sisu_inject//:org_eclipse_sisu_org_eclipse_sisu_inject",
    "ruleClassId": 6
  }, {
    "id": 25,
    "label": "@org_codehaus_plexus_plexus_utils//:org_codehaus_plexus_plexus_utils",
    "ruleClassId": 6
  }, {
    "id": 26,
    "label": "@org_pantsbuild_jarjar//:org_pantsbuild_jarjar",
    "ruleClassId": 6
  }, {
    "id": 27,
    "label": "@javax_enterprise_cdi_api//:javax_enterprise_cdi_api",
    "ruleClassId": 6
  }, {
    "id": 28,
    "label": "@org_apache_ant_ant_launcher//:org_apache_ant_ant_launcher",
    "ruleClassId": 6
  }, {
    "id": 29,
    "label": "@org_apache_maven_maven_model//:org_apache_maven_maven_model",
    "ruleClassId": 6
  }, {
    "id": 30,
    "label": "@org_apache_ant_ant//:org_apache_ant_ant",
    "ruleClassId": 6
  }, {
    "id": 31,
    "label": "@org_ow2_asm_asm//:org_ow2_asm_asm",
    "ruleClassId": 6
  }, {
    "id": 32,
    "label": "@org_ow2_asm_asm_tree//:org_ow2_asm_asm_tree",
    "ruleClassId": 6
  }, {
    "id": 33,
    "label": "@org_ow2_asm_asm_commons//:org_ow2_asm_asm_commons",
    "ruleClassId": 6
  }, {
    "id": 34,
    "label": "@javax_inject_javax_inject//:javax_inject_javax_inject",
    "ruleClassId": 6
  }, {
    "id": 35,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:guava_no_classes",
    "ruleClassId": 1
  }, {
    "id": 36,
    "label": "//src/main/java/com/google/monitoring/runtime/instrumentation:guava_base",
    "ruleClassId": 3
  }, {
    "id": 37,
    "label": "@google_bazel_common//third_party/java/guava:guava",
    "ruleClassId": 2
  }, {
    "id": 38,
    "label": "@google_bazel_common//third_party/java/guava:beta-checker",
    "ruleClassId": 7
  }, {
    "id": 39,
    "label": "@com_google_guava_failureaccess//:com_google_guava_failureaccess",
    "ruleClassId": 6
  }, {
    "id": 40,
    "label": "@com_google_guava_guava//:com_google_guava_guava",
    "ruleClassId": 6
  }, {
    "id": 41,
    "label": "@com_google_guava_guava_beta_checker//:com_google_guava_guava_beta_checker",
    "ruleClassId": 6
  }],
  "depSetOfFiles": [{
    "id": 4,
    "directArtifactIds": [1, 2]
  }, {
    "id": 3,
    "transitiveDepSetIds": [4],
    "directArtifactIds": [3]
  }, {
    "id": 2,
    "transitiveDepSetIds": [3],
    "directArtifactIds": [4]
  }, {
    "id": 1,
    "transitiveDepSetIds": [2],
    "directArtifactIds": [5, 6]
  }, {
    "id": 7,
    "directArtifactIds": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]
  }, {
    "id": 8,
    "directArtifactIds": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
  }, {
    "id": 9,
    "directArtifactIds": [55, 56, 57, 58, 59, 60, 61, 62]
  }, {
    "id": 10,
    "directArtifactIds": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119]
  }, {
    "id": 6,
    "transitiveDepSetIds": [7, 8, 9, 10]
  }, {
    "id": 11,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 5,
    "transitiveDepSetIds": [6, 11],
    "directArtifactIds": [121]
  }, {
    "id": 12,
    "directArtifactIds": [125]
  }, {
    "id": 15,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 14,
    "transitiveDepSetIds": [6, 15],
    "directArtifactIds": [121, 127]
  }, {
    "id": 13,
    "transitiveDepSetIds": [14],
    "directArtifactIds": [128]
  }, {
    "id": 16,
    "directArtifactIds": [127, 125]
  }, {
    "id": 21,
    "directArtifactIds": [135, 136]
  }, {
    "id": 22,
    "directArtifactIds": [135, 137, 138]
  }, {
    "id": 20,
    "transitiveDepSetIds": [21, 22],
    "directArtifactIds": [139, 135, 137, 140, 136, 138, 141]
  }, {
    "id": 19,
    "transitiveDepSetIds": [20, 21],
    "directArtifactIds": [139, 141, 136, 126]
  }, {
    "id": 18,
    "transitiveDepSetIds": [19],
    "directArtifactIds": [142, 133]
  }, {
    "id": 17,
    "transitiveDepSetIds": [18],
    "directArtifactIds": [125]
  }, {
    "id": 23,
    "directArtifactIds": [144]
  }, {
    "id": 26,
    "directArtifactIds": [129, 134]
  }, {
    "id": 29,
    "directArtifactIds": [146, 147]
  }, {
    "id": 30,
    "directArtifactIds": [146, 148, 149]
  }, {
    "id": 28,
    "transitiveDepSetIds": [29, 30],
    "directArtifactIds": [150, 146, 148, 151, 152]
  }, {
    "id": 27,
    "transitiveDepSetIds": [28, 29],
    "directArtifactIds": [150]
  }, {
    "id": 35,
    "directArtifactIds": [147, 146]
  }, {
    "id": 36,
    "directArtifactIds": [149, 146, 148]
  }, {
    "id": 34,
    "transitiveDepSetIds": [35, 36],
    "directArtifactIds": [152, 153, 150, 146, 148, 151]
  }, {
    "id": 33,
    "transitiveDepSetIds": [34, 35],
    "directArtifactIds": [150]
  }, {
    "id": 32,
    "transitiveDepSetIds": [33],
    "directArtifactIds": [154]
  }, {
    "id": 31,
    "transitiveDepSetIds": [32],
    "directArtifactIds": [129]
  }, {
    "id": 38,
    "directArtifactIds": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]
  }, {
    "id": 39,
    "directArtifactIds": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198]
  }, {
    "id": 40,
    "directArtifactIds": [199, 200, 201, 202, 203, 204, 205, 206]
  }, {
    "id": 41,
    "directArtifactIds": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265]
  }, {
    "id": 37,
    "transitiveDepSetIds": [38, 39, 40, 41]
  }, {
    "id": 25,
    "transitiveDepSetIds": [26, 27, 31, 37],
    "directArtifactIds": [154, 129]
  }, {
    "id": 24,
    "transitiveDepSetIds": [25],
    "directArtifactIds": [145]
  }, {
    "id": 43,
    "transitiveDepSetIds": [32],
    "directArtifactIds": [129, 266, 267]
  }, {
    "id": 42,
    "transitiveDepSetIds": [43],
    "directArtifactIds": [125]
  }, {
    "id": 44,
    "directArtifactIds": [269]
  }, {
    "id": 45,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [7, 6]
  }, {
    "id": 46,
    "directArtifactIds": [271]
  }, {
    "id": 49,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 48,
    "transitiveDepSetIds": [6, 49],
    "directArtifactIds": [121, 273]
  }, {
    "id": 47,
    "transitiveDepSetIds": [48],
    "directArtifactIds": [274]
  }, {
    "id": 50,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [121, 274, 273, 278]
  }, {
    "id": 51,
    "directArtifactIds": [273, 125]
  }, {
    "id": 53,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 52,
    "transitiveDepSetIds": [6, 53],
    "directArtifactIds": [281]
  }, {
    "id": 55,
    "directArtifactIds": [285, 286, 287, 288, 289, 284]
  }, {
    "id": 54,
    "transitiveDepSetIds": [55],
    "directArtifactIds": [125]
  }, {
    "id": 56,
    "directArtifactIds": [291]
  }, {
    "id": 59,
    "directArtifactIds": [146, 148, 151, 154, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305]
  }, {
    "id": 58,
    "transitiveDepSetIds": [4, 59, 6],
    "directArtifactIds": [146, 148, 151, 154, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305]
  }, {
    "id": 57,
    "transitiveDepSetIds": [58],
    "directArtifactIds": [292]
  }, {
    "id": 61,
    "transitiveDepSetIds": [59],
    "directArtifactIds": [3, 306]
  }, {
    "id": 60,
    "transitiveDepSetIds": [61],
    "directArtifactIds": [125]
  }, {
    "id": 63,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 62,
    "transitiveDepSetIds": [6, 63],
    "directArtifactIds": [121, 309, 310]
  }, {
    "id": 64,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [121, 309, 310, 278]
  }, {
    "id": 66,
    "directArtifactIds": [309, 310]
  }, {
    "id": 65,
    "transitiveDepSetIds": [66],
    "directArtifactIds": [125]
  }, {
    "id": 69,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 68,
    "transitiveDepSetIds": [6, 69],
    "directArtifactIds": [121, 316, 317, 318, 319, 320]
  }, {
    "id": 71,
    "directArtifactIds": [153, 314, 279, 321, 274, 322, 323]
  }, {
    "id": 73,
    "directArtifactIds": [279, 274]
  }, {
    "id": 74,
    "directArtifactIds": [321, 274, 322]
  }, {
    "id": 72,
    "transitiveDepSetIds": [73, 74],
    "directArtifactIds": [153, 314, 274, 322, 323]
  }, {
    "id": 70,
    "transitiveDepSetIds": [71, 72]
  }, {
    "id": 75,
    "directArtifactIds": [315, 280, 324]
  }, {
    "id": 67,
    "transitiveDepSetIds": [68, 70, 75]
  }, {
    "id": 76,
    "transitiveDepSetIds": [6, 71],
    "directArtifactIds": [121, 316, 317, 318, 319, 320, 278]
  }, {
    "id": 78,
    "directArtifactIds": [316, 317, 318, 319, 320]
  }, {
    "id": 77,
    "transitiveDepSetIds": [78],
    "directArtifactIds": [125]
  }, {
    "id": 80,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 79,
    "transitiveDepSetIds": [6, 80],
    "directArtifactIds": [121]
  }, {
    "id": 82,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 81,
    "transitiveDepSetIds": [6, 82],
    "directArtifactIds": [281]
  }, {
    "id": 84,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 83,
    "transitiveDepSetIds": [6, 84],
    "directArtifactIds": [281]
  }, {
    "id": 86,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 85,
    "transitiveDepSetIds": [6, 86],
    "directArtifactIds": [281]
  }, {
    "id": 88,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 87,
    "transitiveDepSetIds": [6, 88],
    "directArtifactIds": [281]
  }, {
    "id": 90,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 89,
    "transitiveDepSetIds": [6, 90],
    "directArtifactIds": [281]
  }, {
    "id": 93,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 92,
    "transitiveDepSetIds": [6, 93],
    "directArtifactIds": [121, 348]
  }, {
    "id": 95,
    "directArtifactIds": [274, 322]
  }, {
    "id": 96,
    "directArtifactIds": [274, 322]
  }, {
    "id": 94,
    "transitiveDepSetIds": [95, 96]
  }, {
    "id": 91,
    "transitiveDepSetIds": [92, 94]
  }, {
    "id": 97,
    "transitiveDepSetIds": [6, 95],
    "directArtifactIds": [121, 348, 278]
  }, {
    "id": 98,
    "directArtifactIds": [348, 125]
  }, {
    "id": 100,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 99,
    "transitiveDepSetIds": [6, 100],
    "directArtifactIds": [121]
  }, {
    "id": 102,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 101,
    "transitiveDepSetIds": [6, 102],
    "directArtifactIds": [121]
  }, {
    "id": 104,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 103,
    "transitiveDepSetIds": [6, 104],
    "directArtifactIds": [121]
  }, {
    "id": 105,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [361, 6]
  }, {
    "id": 106,
    "directArtifactIds": [301, 362]
  }, {
    "id": 107,
    "directArtifactIds": [297, 362]
  }, {
    "id": 108,
    "directArtifactIds": [154, 362]
  }, {
    "id": 109,
    "directArtifactIds": [304, 362]
  }, {
    "id": 110,
    "directArtifactIds": [300, 362]
  }, {
    "id": 111,
    "directArtifactIds": [299, 362]
  }, {
    "id": 112,
    "directArtifactIds": [303, 362]
  }, {
    "id": 113,
    "directArtifactIds": [302, 362]
  }, {
    "id": 114,
    "directArtifactIds": [305, 362]
  }, {
    "id": 115,
    "directArtifactIds": [294, 362]
  }, {
    "id": 116,
    "directArtifactIds": [296, 362]
  }, {
    "id": 117,
    "directArtifactIds": [298, 362]
  }, {
    "id": 118,
    "directArtifactIds": [295, 362]
  }, {
    "id": 119,
    "directArtifactIds": [154, 362]
  }, {
    "id": 120,
    "directArtifactIds": [146, 362]
  }, {
    "id": 121,
    "directArtifactIds": [146, 362]
  }, {
    "id": 122,
    "directArtifactIds": [151, 362]
  }, {
    "id": 123,
    "directArtifactIds": [148, 362]
  }, {
    "id": 124,
    "directArtifactIds": [148, 362]
  }, {
    "id": 125,
    "directArtifactIds": [151, 362]
  }, {
    "id": 126,
    "directArtifactIds": [293, 362]
  }, {
    "id": 128,
    "transitiveDepSetIds": [3],
    "directArtifactIds": [380]
  }, {
    "id": 127,
    "transitiveDepSetIds": [128],
    "directArtifactIds": [381, 6]
  }, {
    "id": 130,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 129,
    "transitiveDepSetIds": [6, 130],
    "directArtifactIds": [121]
  }, {
    "id": 132,
    "directArtifactIds": [387, 385]
  }, {
    "id": 131,
    "transitiveDepSetIds": [132],
    "directArtifactIds": [125]
  }, {
    "id": 133,
    "directArtifactIds": [389]
  }, {
    "id": 136,
    "directArtifactIds": [382, 386]
  }, {
    "id": 137,
    "directArtifactIds": [391, 392]
  }, {
    "id": 138,
    "directArtifactIds": [391, 392]
  }, {
    "id": 135,
    "transitiveDepSetIds": [136, 137, 138, 37]
  }, {
    "id": 134,
    "transitiveDepSetIds": [135],
    "directArtifactIds": [390]
  }, {
    "id": 140,
    "transitiveDepSetIds": [138],
    "directArtifactIds": [393, 267]
  }, {
    "id": 139,
    "transitiveDepSetIds": [140],
    "directArtifactIds": [125]
  }, {
    "id": 142,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 141,
    "transitiveDepSetIds": [6, 142],
    "directArtifactIds": [121]
  }, {
    "id": 145,
    "transitiveDepSetIds": [6],
    "directArtifactIds": [120]
  }, {
    "id": 144,
    "transitiveDepSetIds": [6, 145],
    "directArtifactIds": [281]
  }, {
    "id": 143,
    "transitiveDepSetIds": [144],
    "directArtifactIds": [398]
  }, {
    "id": 146,
    "directArtifactIds": [391, 362]
  }, {
    "id": 147,
    "directArtifactIds": [392, 362]
  }, {
    "id": 148,
    "directArtifactIds": [405, 362]
  }],
  "configuration": [{
    "id": 1,
    "mnemonic": "k8-fastbuild",
    "platformName": "k8",
    "checksum": "4e67ca85ce50afa1c60118c9ac5cb28f1e0a8fe7c49020037cc89ebbb414d9ff"
  }, {
    "id": 2,
    "mnemonic": "k8-opt-exec-2B5CBBC6",
    "platformName": "k8",
    "checksum": "016b1f61418d077200c86faff737efc698bce5e4ca29b59a2a746868ee0b4615",
    "isTool": true
  }],
  "ruleClasses": [{
    "id": 1,
    "name": "genrule"
  }, {
    "id": 2,
    "name": "java_library"
  }, {
    "id": 3,
    "name": "java_binary"
  }, {
    "id": 4,
    "name": "expand_template"
  }, {
    "id": 5,
    "name": "pom_file"
  }, {
    "id": 6,
    "name": "java_import"
  }, {
    "id": 7,
    "name": "java_plugin"
  }],
  "pathFragments": [{
    "id": 8,
    "label": "bazel-out"
  }, {
    "id": 7,
    "label": "k8-opt-exec-2B5CBBC6",
    "parentId": 8
  }, {
    "id": 6,
    "label": "bin",
    "parentId": 7
  }, {
    "id": 5,
    "label": "external",
    "parentId": 6
  }, {
    "id": 4,
    "label": "google_bazel_common",
    "parentId": 5
  }, {
    "id": 3,
    "label": "tools",
    "parentId": 4
  }, {
    "id": 2,
    "label": "jarjar",
    "parentId": 3
  }, {
    "id": 1,
    "label": "jarjar.jar",
    "parentId": 2
  }, {
    "id": 9,
    "label": "jarjar",
    "parentId": 2
  }, {
    "id": 12,
    "label": "internal",
    "parentId": 7
  }, {
    "id": 11,
    "label": "_middlemen",
    "parentId": 12
  }, {
    "id": 10,
    "label": "external_Sgoogle_Ubazel_Ucommon_Stools_Sjarjar_Sjarjar-runfiles",
    "parentId": 11
  }, {
    "id": 13,
    "label": "rules.txt"
  }, {
    "id": 16,
    "label": "k8-fastbuild",
    "parentId": 8
  }, {
    "id": 15,
    "label": "bin",
    "parentId": 16
  }, {
    "id": 14,
    "label": "allocationinstrumenter_internal_deploy.jar",
    "parentId": 15
  }, {
    "id": 21,
    "label": "external"
  }, {
    "id": 20,
    "label": "bazel_tools",
    "parentId": 21
  }, {
    "id": 19,
    "label": "tools",
    "parentId": 20
  }, {
    "id": 18,
    "label": "genrule",
    "parentId": 19
  }, {
    "id": 17,
    "label": "genrule-setup.sh",
    "parentId": 18
  }, {
    "id": 22,
    "label": "allocationinstrumenter_internal_2_deploy.jar",
    "parentId": 15
  }, {
    "id": 25,
    "label": "remotejdk11_linux",
    "parentId": 21
  }, {
    "id": 24,
    "label": "bin",
    "parentId": 25
  }, {
    "id": 23,
    "label": "jaotc",
    "parentId": 24
  }, {
    "id": 26,
    "label": "jar",
    "parentId": 24
  }, {
    "id": 27,
    "label": "jarsigner",
    "parentId": 24
  }, {
    "id": 28,
    "label": "java",
    "parentId": 24
  }, {
    "id": 29,
    "label": "javac",
    "parentId": 24
  }, {
    "id": 30,
    "label": "javadoc",
    "parentId": 24
  }, {
    "id": 31,
    "label": "javap",
    "parentId": 24
  }, {
    "id": 32,
    "label": "jcmd",
    "parentId": 24
  }, {
    "id": 33,
    "label": "jconsole",
    "parentId": 24
  }, {
    "id": 34,
    "label": "jdb",
    "parentId": 24
  }, {
    "id": 35,
    "label": "jdeprscan",
    "parentId": 24
  }, {
    "id": 36,
    "label": "jdeps",
    "parentId": 24
  }, {
    "id": 37,
    "label": "jfr",
    "parentId": 24
  }, {
    "id": 38,
    "label": "jhsdb",
    "parentId": 24
  }, {
    "id": 39,
    "label": "jimage",
    "parentId": 24
  }, {
    "id": 40,
    "label": "jinfo",
    "parentId": 24
  }, {
    "id": 41,
    "label": "jjs",
    "parentId": 24
  }, {
    "id": 42,
    "label": "jlink",
    "parentId": 24
  }, {
    "id": 43,
    "label": "jmap",
    "parentId": 24
  }, {
    "id": 44,
    "label": "jmod",
    "parentId": 24
  }, {
    "id": 45,
    "label": "jps",
    "parentId": 24
  }, {
    "id": 46,
    "label": "jrunscript",
    "parentId": 24
  }, {
    "id": 47,
    "label": "jshell",
    "parentId": 24
  }, {
    "id": 48,
    "label": "jstack",
    "parentId": 24
  }, {
    "id": 49,
    "label": "jstat",
    "parentId": 24
  }, {
    "id": 50,
    "label": "jstatd",
    "parentId": 24
  }, {
    "id": 51,
    "label": "keytool",
    "parentId": 24
  }, {
    "id": 52,
    "label": "pack200",
    "parentId": 24
  }, {
    "id": 53,
    "label": "rmic",
    "parentId": 24
  }, {
    "id": 54,
    "label": "rmid",
    "parentId": 24
  }, {
    "id": 55,
    "label": "rmiregistry",
    "parentId": 24
  }, {
    "id": 56,
    "label": "serialver",
    "parentId": 24
  }, {
    "id": 57,
    "label": "unpack200",
    "parentId": 24
  }, {
    "id": 59,
    "label": "conf",
    "parentId": 25
  }, {
    "id": 58,
    "label": "logging.properties",
    "parentId": 59
  }, {
    "id": 61,
    "label": "management",
    "parentId": 59
  }, {
    "id": 60,
    "label": "jmxremote.access",
    "parentId": 61
  }, {
    "id": 62,
    "label": "jmxremote.password.template",
    "parentId": 61
  }, {
    "id": 63,
    "label": "management.properties",
    "parentId": 61
  }, {
    "id": 64,
    "label": "net.properties",
    "parentId": 59
  }, {
    "id": 66,
    "label": "security",
    "parentId": 59
  }, {
    "id": 65,
    "label": "java.policy",
    "parentId": 66
  }, {
    "id": 67,
    "label": "java.security",
    "parentId": 66
  }, {
    "id": 69,
    "label": "policy",
    "parentId": 66
  }, {
    "id": 68,
    "label": "README.txt",
    "parentId": 69
  }, {
    "id": 71,
    "label": "limited",
    "parentId": 69
  }, {
    "id": 70,
    "label": "default_US_export.policy",
    "parentId": 71
  }, {
    "id": 72,
    "label": "default_local.policy",
    "parentId": 71
  }, {
    "id": 73,
    "label": "exempt_local.policy",
    "parentId": 71
  }, {
    "id": 75,
    "label": "unlimited",
    "parentId": 69
  }, {
    "id": 74,
    "label": "default_US_export.policy",
    "parentId": 75
  }, {
    "id": 76,
    "label": "default_local.policy",
    "parentId": 75
  }, {
    "id": 77,
    "label": "sound.properties",
    "parentId": 59
  }, {
    "id": 79,
    "label": "include",
    "parentId": 25
  }, {
    "id": 78,
    "label": "classfile_constants.h",
    "parentId": 79
  }, {
    "id": 80,
    "label": "jawt.h",
    "parentId": 79
  }, {
    "id": 81,
    "label": "jdwpTransport.h",
    "parentId": 79
  }, {
    "id": 82,
    "label": "jni.h",
    "parentId": 79
  }, {
    "id": 83,
    "label": "jvmti.h",
    "parentId": 79
  }, {
    "id": 84,
    "label": "jvmticmlr.h",
    "parentId": 79
  }, {
    "id": 86,
    "label": "linux",
    "parentId": 79
  }, {
    "id": 85,
    "label": "jawt_md.h",
    "parentId": 86
  }, {
    "id": 87,
    "label": "jni_md.h",
    "parentId": 86
  }, {
    "id": 89,
    "label": "lib",
    "parentId": 25
  }, {
    "id": 88,
    "label": "classlist",
    "parentId": 89
  }, {
    "id": 90,
    "label": "ct.sym",
    "parentId": 89
  }, {
    "id": 91,
    "label": "jexec",
    "parentId": 89
  }, {
    "id": 93,
    "label": "jfr",
    "parentId": 89
  }, {
    "id": 92,
    "label": "default.jfc",
    "parentId": 93
  }, {
    "id": 94,
    "label": "profile.jfc",
    "parentId": 93
  }, {
    "id": 96,
    "label": "jli",
    "parentId": 89
  }, {
    "id": 95,
    "label": "libjli.so",
    "parentId": 96
  }, {
    "id": 97,
    "label": "jrt-fs.jar",
    "parentId": 89
  }, {
    "id": 98,
    "label": "jspawnhelper",
    "parentId": 89
  }, {
    "id": 99,
    "label": "jvm.cfg",
    "parentId": 89
  }, {
    "id": 100,
    "label": "libattach.so",
    "parentId": 89
  }, {
    "id": 101,
    "label": "libawt.so",
    "parentId": 89
  }, {
    "id": 102,
    "label": "libawt_headless.so",
    "parentId": 89
  }, {
    "id": 103,
    "label": "libawt_xawt.so",
    "parentId": 89
  }, {
    "id": 104,
    "label": "libdt_socket.so",
    "parentId": 89
  }, {
    "id": 105,
    "label": "libextnet.so",
    "parentId": 89
  }, {
    "id": 106,
    "label": "libfontmanager.so",
    "parentId": 89
  }, {
    "id": 107,
    "label": "libfreetype.so",
    "parentId": 89
  }, {
    "id": 108,
    "label": "libinstrument.so",
    "parentId": 89
  }, {
    "id": 109,
    "label": "libj2gss.so",
    "parentId": 89
  }, {
    "id": 110,
    "label": "libj2pcsc.so",
    "parentId": 89
  }, {
    "id": 111,
    "label": "libj2pkcs11.so",
    "parentId": 89
  }, {
    "id": 112,
    "label": "libjaas.so",
    "parentId": 89
  }, {
    "id": 113,
    "label": "libjava.so",
    "parentId": 89
  }, {
    "id": 114,
    "label": "libjavajpeg.so",
    "parentId": 89
  }, {
    "id": 115,
    "label": "libjawt.so",
    "parentId": 89
  }, {
    "id": 116,
    "label": "libjdwp.so",
    "parentId": 89
  }, {
    "id": 117,
    "label": "libjimage.so",
    "parentId": 89
  }, {
    "id": 118,
    "label": "libjsig.so",
    "parentId": 89
  }, {
    "id": 119,
    "label": "libjsound.so",
    "parentId": 89
  }, {
    "id": 120,
    "label": "liblcms.so",
    "parentId": 89
  }, {
    "id": 121,
    "label": "libmanagement.so",
    "parentId": 89
  }, {
    "id": 122,
    "label": "libmanagement_agent.so",
    "parentId": 89
  }, {
    "id": 123,
    "label": "libmanagement_ext.so",
    "parentId": 89
  }, {
    "id": 124,
    "label": "libmlib_image.so",
    "parentId": 89
  }, {
    "id": 125,
    "label": "libnet.so",
    "parentId": 89
  }, {
    "id": 126,
    "label": "libnio.so",
    "parentId": 89
  }, {
    "id": 127,
    "label": "libprefs.so",
    "parentId": 89
  }, {
    "id": 128,
    "label": "librmi.so",
    "parentId": 89
  }, {
    "id": 129,
    "label": "libsaproc.so",
    "parentId": 89
  }, {
    "id": 130,
    "label": "libsctp.so",
    "parentId": 89
  }, {
    "id": 131,
    "label": "libsplashscreen.so",
    "parentId": 89
  }, {
    "id": 132,
    "label": "libsunec.so",
    "parentId": 89
  }, {
    "id": 133,
    "label": "libunpack.so",
    "parentId": 89
  }, {
    "id": 134,
    "label": "libverify.so",
    "parentId": 89
  }, {
    "id": 135,
    "label": "libzip.so",
    "parentId": 89
  }, {
    "id": 136,
    "label": "modules",
    "parentId": 89
  }, {
    "id": 137,
    "label": "psfont.properties.ja",
    "parentId": 89
  }, {
    "id": 138,
    "label": "psfontj2d.properties",
    "parentId": 89
  }, {
    "id": 140,
    "label": "security",
    "parentId": 89
  }, {
    "id": 139,
    "label": "blocked.certs",
    "parentId": 140
  }, {
    "id": 141,
    "label": "cacerts",
    "parentId": 140
  }, {
    "id": 142,
    "label": "default.policy",
    "parentId": 140
  }, {
    "id": 143,
    "label": "public_suffix_list.dat",
    "parentId": 140
  }, {
    "id": 145,
    "label": "server",
    "parentId": 89
  }, {
    "id": 144,
    "label": "Xusage.txt",
    "parentId": 145
  }, {
    "id": 146,
    "label": "libjsig.so",
    "parentId": 145
  }, {
    "id": 147,
    "label": "libjvm.so",
    "parentId": 145
  }, {
    "id": 148,
    "label": "src.zip",
    "parentId": 89
  }, {
    "id": 149,
    "label": "tzdb.dat",
    "parentId": 89
  }, {
    "id": 152,
    "label": "remote_java_tools",
    "parentId": 21
  }, {
    "id": 151,
    "label": "java_tools",
    "parentId": 152
  }, {
    "id": 150,
    "label": "JavaBuilder_deploy.jar",
    "parentId": 151
  }, {
    "id": 157,
    "label": "external",
    "parentId": 15
  }, {
    "id": 156,
    "label": "bazel_tools",
    "parentId": 157
  }, {
    "id": 155,
    "label": "tools",
    "parentId": 156
  }, {
    "id": 154,
    "label": "jdk",
    "parentId": 155
  }, {
    "id": 153,
    "label": "platformclasspath.jar",
    "parentId": 154
  }, {
    "id": 158,
    "label": "liballocationinstrumenter.jar",
    "parentId": 15
  }, {
    "id": 159,
    "label": "liballocationinstrumenter-native-header.jar",
    "parentId": 15
  }, {
    "id": 160,
    "label": "liballocationinstrumenter.jar_manifest_proto",
    "parentId": 15
  }, {
    "id": 166,
    "label": "remote_java_tools_linux",
    "parentId": 21
  }, {
    "id": 165,
    "label": "java_tools",
    "parentId": 166
  }, {
    "id": 164,
    "label": "src",
    "parentId": 165
  }, {
    "id": 163,
    "label": "tools",
    "parentId": 164
  }, {
    "id": 162,
    "label": "singlejar",
    "parentId": 163
  }, {
    "id": 161,
    "label": "singlejar_local",
    "parentId": 162
  }, {
    "id": 167,
    "label": "liballocationinstrumenter-src.jar",
    "parentId": 15
  }, {
    "id": 168,
    "label": "AllocationInstrumenterBootstrap.java",
    "parentId": 15
  }, {
    "id": 172,
    "label": "javax_annotation_jsr250_api",
    "parentId": 157
  }, {
    "id": 171,
    "label": "_ijar",
    "parentId": 172
  }, {
    "id": 170,
    "label": "javax_annotation_jsr250_api",
    "parentId": 171
  }, {
    "id": 169,
    "label": "jsr250-api-1.0-ijar.jar",
    "parentId": 170
  }, {
    "id": 173,
    "label": "allocationinstrumenter_internal.jar",
    "parentId": 15
  }, {
    "id": 174,
    "label": "allocationinstrumenter_internal.jdeps",
    "parentId": 15
  }, {
    "id": 175,
    "label": "allocationinstrumenter_internal-native-header.jar",
    "parentId": 15
  }, {
    "id": 176,
    "label": "allocationinstrumenter_internal.jar_manifest_proto",
    "parentId": 15
  }, {
    "id": 177,
    "label": "allocationinstrumenter_internal-src.jar",
    "parentId": 15
  }, {
    "id": 178,
    "label": "allocationinstrumenter_internal",
    "parentId": 15
  }, {
    "id": 183,
    "label": "google_bazel_common",
    "parentId": 157
  }, {
    "id": 182,
    "label": "third_party",
    "parentId": 183
  }, {
    "id": 181,
    "label": "java",
    "parentId": 182
  }, {
    "id": 180,
    "label": "asm",
    "parentId": 181
  }, {
    "id": 179,
    "label": "libasm-src.jar",
    "parentId": 180
  }, {
    "id": 192,
    "label": "src",
    "parentId": 15
  }, {
    "id": 191,
    "label": "main",
    "parentId": 192
  }, {
    "id": 190,
    "label": "java",
    "parentId": 191
  }, {
    "id": 189,
    "label": "com",
    "parentId": 190
  }, {
    "id": 188,
    "label": "google",
    "parentId": 189
  }, {
    "id": 187,
    "label": "monitoring",
    "parentId": 188
  }, {
    "id": 186,
    "label": "runtime",
    "parentId": 187
  }, {
    "id": 185,
    "label": "instrumentation",
    "parentId": 186
  }, {
    "id": 184,
    "label": "libstaticclasswriter-src.jar",
    "parentId": 185
  }, {
    "id": 193,
    "label": "libasm-commons-src.jar",
    "parentId": 180
  }, {
    "id": 194,
    "label": "libverifying_class_adapter-src.jar",
    "parentId": 185
  }, {
    "id": 195,
    "label": "libsampler-src.jar",
    "parentId": 185
  }, {
    "id": 196,
    "label": "libasm-tree-src.jar",
    "parentId": 180
  }, {
    "id": 197,
    "label": "liballocation_instrumenter-src.jar",
    "parentId": 185
  }, {
    "id": 199,
    "label": "jsr250_annotations",
    "parentId": 181
  }, {
    "id": 198,
    "label": "libjsr250_annotations-src.jar",
    "parentId": 199
  }, {
    "id": 200,
    "label": "allocationinstrumenter_internal_deploy-src.jar",
    "parentId": 15
  }, {
    "id": 201,
    "label": "allocationinstrumenter_internal.runfiles_manifest",
    "parentId": 15
  }, {
    "id": 203,
    "label": "allocationinstrumenter_internal.runfiles",
    "parentId": 15
  }, {
    "id": 202,
    "label": "MANIFEST",
    "parentId": 203
  }, {
    "id": 205,
    "label": "org_ow2_asm_asm",
    "parentId": 21
  }, {
    "id": 204,
    "label": "asm-9.4.jar",
    "parentId": 205
  }, {
    "id": 206,
    "label": "libstaticclasswriter.jar",
    "parentId": 185
  }, {
    "id": 208,
    "label": "org_ow2_asm_asm_commons",
    "parentId": 21
  }, {
    "id": 207,
    "label": "asm-commons-9.4.jar",
    "parentId": 208
  }, {
    "id": 209,
    "label": "libverifying_class_adapter.jar",
    "parentId": 185
  }, {
    "id": 210,
    "label": "libsampler.jar",
    "parentId": 185
  }, {
    "id": 212,
    "label": "org_ow2_asm_asm_tree",
    "parentId": 21
  }, {
    "id": 211,
    "label": "asm-tree-9.4.jar",
    "parentId": 212
  }, {
    "id": 213,
    "label": "liballocation_instrumenter.jar",
    "parentId": 185
  }, {
    "id": 214,
    "label": "guava.jar",
    "parentId": 185
  }, {
    "id": 216,
    "label": "javax_annotation_jsr250_api",
    "parentId": 21
  }, {
    "id": 215,
    "label": "jsr250-api-1.0.jar",
    "parentId": 216
  }, {
    "id": 219,
    "label": "local_jdk",
    "parentId": 21
  }, {
    "id": 218,
    "label": "bin",
    "parentId": 219
  }, {
    "id": 217,
    "label": "jar",
    "parentId": 218
  }, {
    "id": 220,
    "label": "jarsigner",
    "parentId": 218
  }, {
    "id": 221,
    "label": "java",
    "parentId": 218
  }, {
    "id": 222,
    "label": "javac",
    "parentId": 218
  }, {
    "id": 223,
    "label": "javadoc",
    "parentId": 218
  }, {
    "id": 224,
    "label": "javap",
    "parentId": 218
  }, {
    "id": 225,
    "label": "jcmd",
    "parentId": 218
  }, {
    "id": 226,
    "label": "jconsole",
    "parentId": 218
  }, {
    "id": 227,
    "label": "jdb",
    "parentId": 218
  }, {
    "id": 228,
    "label": "jdeprscan",
    "parentId": 218
  }, {
    "id": 229,
    "label": "jdeps",
    "parentId": 218
  }, {
    "id": 230,
    "label": "jfr",
    "parentId": 218
  }, {
    "id": 231,
    "label": "jhsdb",
    "parentId": 218
  }, {
    "id": 232,
    "label": "jimage",
    "parentId": 218
  }, {
    "id": 233,
    "label": "jinfo",
    "parentId": 218
  }, {
    "id": 234,
    "label": "jlink",
    "parentId": 218
  }, {
    "id": 235,
    "label": "jmap",
    "parentId": 218
  }, {
    "id": 236,
    "label": "jmod",
    "parentId": 218
  }, {
    "id": 237,
    "label": "jpackage",
    "parentId": 218
  }, {
    "id": 238,
    "label": "jps",
    "parentId": 218
  }, {
    "id": 239,
    "label": "jrunscript",
    "parentId": 218
  }, {
    "id": 240,
    "label": "jshell",
    "parentId": 218
  }, {
    "id": 241,
    "label": "jstack",
    "parentId": 218
  }, {
    "id": 242,
    "label": "jstat",
    "parentId": 218
  }, {
    "id": 243,
    "label": "jstatd",
    "parentId": 218
  }, {
    "id": 244,
    "label": "keytool",
    "parentId": 218
  }, {
    "id": 245,
    "label": "rmiregistry",
    "parentId": 218
  }, {
    "id": 246,
    "label": "serialver",
    "parentId": 218
  }, {
    "id": 248,
    "label": "conf",
    "parentId": 219
  }, {
    "id": 247,
    "label": "accessibility.properties",
    "parentId": 248
  }, {
    "id": 249,
    "label": "logging.properties",
    "parentId": 248
  }, {
    "id": 251,
    "label": "management",
    "parentId": 248
  }, {
    "id": 250,
    "label": "jmxremote.access",
    "parentId": 251
  }, {
    "id": 252,
    "label": "management.properties",
    "parentId": 251
  }, {
    "id": 253,
    "label": "net.properties",
    "parentId": 248
  }, {
    "id": 255,
    "label": "security",
    "parentId": 248
  }, {
    "id": 254,
    "label": "java.policy",
    "parentId": 255
  }, {
    "id": 256,
    "label": "java.security",
    "parentId": 255
  }, {
    "id": 257,
    "label": "nss.cfg",
    "parentId": 255
  }, {
    "id": 259,
    "label": "policy",
    "parentId": 255
  }, {
    "id": 258,
    "label": "README.txt",
    "parentId": 259
  }, {
    "id": 261,
    "label": "limited",
    "parentId": 259
  }, {
    "id": 260,
    "label": "default_US_export.policy",
    "parentId": 261
  }, {
    "id": 262,
    "label": "default_local.policy",
    "parentId": 261
  }, {
    "id": 263,
    "label": "exempt_local.policy",
    "parentId": 261
  }, {
    "id": 265,
    "label": "unlimited",
    "parentId": 259
  }, {
    "id": 264,
    "label": "default_US_export.policy",
    "parentId": 265
  }, {
    "id": 266,
    "label": "default_local.policy",
    "parentId": 265
  }, {
    "id": 267,
    "label": "sound.properties",
    "parentId": 248
  }, {
    "id": 268,
    "label": "swing.properties",
    "parentId": 248
  }, {
    "id": 270,
    "label": "include",
    "parentId": 219
  }, {
    "id": 269,
    "label": "classfile_constants.h",
    "parentId": 270
  }, {
    "id": 271,
    "label": "jawt.h",
    "parentId": 270
  }, {
    "id": 272,
    "label": "jdwpTransport.h",
    "parentId": 270
  }, {
    "id": 273,
    "label": "jni.h",
    "parentId": 270
  }, {
    "id": 274,
    "label": "jvmti.h",
    "parentId": 270
  }, {
    "id": 275,
    "label": "jvmticmlr.h",
    "parentId": 270
  }, {
    "id": 277,
    "label": "linux",
    "parentId": 270
  }, {
    "id": 276,
    "label": "jawt_md.h",
    "parentId": 277
  }, {
    "id": 278,
    "label": "jni_md.h",
    "parentId": 277
  }, {
    "id": 280,
    "label": "lib",
    "parentId": 219
  }, {
    "id": 279,
    "label": "classlist",
    "parentId": 280
  }, {
    "id": 281,
    "label": "ct.sym",
    "parentId": 280
  }, {
    "id": 282,
    "label": "jar.binfmt",
    "parentId": 280
  }, {
    "id": 283,
    "label": "jexec",
    "parentId": 280
  }, {
    "id": 285,
    "label": "jfr",
    "parentId": 280
  }, {
    "id": 284,
    "label": "default.jfc",
    "parentId": 285
  }, {
    "id": 286,
    "label": "profile.jfc",
    "parentId": 285
  }, {
    "id": 287,
    "label": "jrt-fs.jar",
    "parentId": 280
  }, {
    "id": 288,
    "label": "jspawnhelper",
    "parentId": 280
  }, {
    "id": 289,
    "label": "jvm.cfg",
    "parentId": 280
  }, {
    "id": 290,
    "label": "jvm.cfg-default",
    "parentId": 280
  }, {
    "id": 291,
    "label": "libatk-wrapper.so",
    "parentId": 280
  }, {
    "id": 292,
    "label": "libattach.so",
    "parentId": 280
  }, {
    "id": 293,
    "label": "libawt.so",
    "parentId": 280
  }, {
    "id": 294,
    "label": "libawt_headless.so",
    "parentId": 280
  }, {
    "id": 295,
    "label": "libawt_xawt.so",
    "parentId": 280
  }, {
    "id": 296,
    "label": "libdt_socket.so",
    "parentId": 280
  }, {
    "id": 297,
    "label": "libextnet.so",
    "parentId": 280
  }, {
    "id": 298,
    "label": "libfontmanager.so",
    "parentId": 280
  }, {
    "id": 299,
    "label": "libinstrument.so",
    "parentId": 280
  }, {
    "id": 300,
    "label": "libj2gss.so",
    "parentId": 280
  }, {
    "id": 301,
    "label": "libj2pcsc.so",
    "parentId": 280
  }, {
    "id": 302,
    "label": "libj2pkcs11.so",
    "parentId": 280
  }, {
    "id": 303,
    "label": "libjaas.so",
    "parentId": 280
  }, {
    "id": 304,
    "label": "libjava.so",
    "parentId": 280
  }, {
    "id": 305,
    "label": "libjavajpeg.so",
    "parentId": 280
  }, {
    "id": 306,
    "label": "libjawt.so",
    "parentId": 280
  }, {
    "id": 307,
    "label": "libjdwp.so",
    "parentId": 280
  }, {
    "id": 308,
    "label": "libjimage.so",
    "parentId": 280
  }, {
    "id": 309,
    "label": "libjli.so",
    "parentId": 280
  }, {
    "id": 310,
    "label": "libjsig.so",
    "parentId": 280
  }, {
    "id": 311,
    "label": "libjsound.so",
    "parentId": 280
  }, {
    "id": 312,
    "label": "libjsvml.so",
    "parentId": 280
  }, {
    "id": 313,
    "label": "liblcms.so",
    "parentId": 280
  }, {
    "id": 314,
    "label": "libmanagement.so",
    "parentId": 280
  }, {
    "id": 315,
    "label": "libmanagement_agent.so",
    "parentId": 280
  }, {
    "id": 316,
    "label": "libmanagement_ext.so",
    "parentId": 280
  }, {
    "id": 317,
    "label": "libmlib_image.so",
    "parentId": 280
  }, {
    "id": 318,
    "label": "libnet.so",
    "parentId": 280
  }, {
    "id": 319,
    "label": "libnio.so",
    "parentId": 280
  }, {
    "id": 320,
    "label": "libprefs.so",
    "parentId": 280
  }, {
    "id": 321,
    "label": "librmi.so",
    "parentId": 280
  }, {
    "id": 322,
    "label": "libsaproc.so",
    "parentId": 280
  }, {
    "id": 323,
    "label": "libsctp.so",
    "parentId": 280
  }, {
    "id": 324,
    "label": "libsplashscreen.so",
    "parentId": 280
  }, {
    "id": 325,
    "label": "libsyslookup.so",
    "parentId": 280
  }, {
    "id": 326,
    "label": "libverify.so",
    "parentId": 280
  }, {
    "id": 327,
    "label": "libzip.so",
    "parentId": 280
  }, {
    "id": 328,
    "label": "modules",
    "parentId": 280
  }, {
    "id": 329,
    "label": "psfont.properties.ja",
    "parentId": 280
  }, {
    "id": 330,
    "label": "psfontj2d.properties",
    "parentId": 280
  }, {
    "id": 332,
    "label": "security",
    "parentId": 280
  }, {
    "id": 331,
    "label": "blocked.certs",
    "parentId": 332
  }, {
    "id": 333,
    "label": "cacerts",
    "parentId": 332
  }, {
    "id": 334,
    "label": "default.policy",
    "parentId": 332
  }, {
    "id": 335,
    "label": "public_suffix_list.dat",
    "parentId": 332
  }, {
    "id": 337,
    "label": "server",
    "parentId": 280
  }, {
    "id": 336,
    "label": "classes.jsa",
    "parentId": 337
  }, {
    "id": 338,
    "label": "classes_nocoops.jsa",
    "parentId": 337
  }, {
    "id": 339,
    "label": "libjsig.so",
    "parentId": 337
  }, {
    "id": 340,
    "label": "libjvm.so",
    "parentId": 337
  }, {
    "id": 341,
    "label": "tzdb.dat",
    "parentId": 280
  }, {
    "id": 344,
    "label": "internal",
    "parentId": 16
  }, {
    "id": 343,
    "label": "_middlemen",
    "parentId": 344
  }, {
    "id": 342,
    "label": "allocationinstrumenter_Uinternal-runfiles",
    "parentId": 343
  }, {
    "id": 346,
    "label": "include",
    "parentId": 16
  }, {
    "id": 345,
    "label": "build-info-redacted.properties",
    "parentId": 346
  }, {
    "id": 347,
    "label": "allocationinstrumenter_internal_deploy.jar.unstripped",
    "parentId": 15
  }, {
    "id": 356,
    "label": "src"
  }, {
    "id": 355,
    "label": "main",
    "parentId": 356
  }, {
    "id": 354,
    "label": "java",
    "parentId": 355
  }, {
    "id": 353,
    "label": "com",
    "parentId": 354
  }, {
    "id": 352,
    "label": "google",
    "parentId": 353
  }, {
    "id": 351,
    "label": "monitoring",
    "parentId": 352
  }, {
    "id": 350,
    "label": "runtime",
    "parentId": 351
  }, {
    "id": 349,
    "label": "instrumentation",
    "parentId": 350
  }, {
    "id": 348,
    "label": "Bootstrap.java.in",
    "parentId": 349
  }, {
    "id": 357,
    "label": "allocationinstrumenteragent_deploy.jar",
    "parentId": 15
  }, {
    "id": 359,
    "label": "tools"
  }, {
    "id": 358,
    "label": "pom-template.xml",
    "parentId": 359
  }, {
    "id": 360,
    "label": "pom.xml",
    "parentId": 15
  }, {
    "id": 361,
    "label": "StaticClassWriter.java",
    "parentId": 349
  }, {
    "id": 365,
    "label": "org_ow2_asm_asm",
    "parentId": 157
  }, {
    "id": 364,
    "label": "_ijar",
    "parentId": 365
  }, {
    "id": 363,
    "label": "org_ow2_asm_asm",
    "parentId": 364
  }, {
    "id": 362,
    "label": "asm-9.4-ijar.jar",
    "parentId": 363
  }, {
    "id": 366,
    "label": "libstaticclasswriter.jdeps",
    "parentId": 185
  }, {
    "id": 367,
    "label": "libstaticclasswriter-native-header.jar",
    "parentId": 185
  }, {
    "id": 368,
    "label": "libstaticclasswriter.jar_manifest_proto",
    "parentId": 185
  }, {
    "id": 369,
    "label": "turbine_direct_binary_deploy.jar",
    "parentId": 151
  }, {
    "id": 370,
    "label": "libstaticclasswriter-hjar.jar",
    "parentId": 185
  }, {
    "id": 371,
    "label": "libstaticclasswriter-hjar.jdeps",
    "parentId": 185
  }, {
    "id": 375,
    "label": "bazel_tools",
    "parentId": 5
  }, {
    "id": 374,
    "label": "tools",
    "parentId": 375
  }, {
    "id": 373,
    "label": "jdk",
    "parentId": 374
  }, {
    "id": 372,
    "label": "platformclasspath.jar",
    "parentId": 373
  }, {
    "id": 376,
    "label": "jarjar-native-header.jar",
    "parentId": 2
  }, {
    "id": 377,
    "label": "jarjar.jar_manifest_proto",
    "parentId": 2
  }, {
    "id": 378,
    "label": "jarjar-src.jar",
    "parentId": 2
  }, {
    "id": 382,
    "label": "third_party",
    "parentId": 4
  }, {
    "id": 381,
    "label": "java",
    "parentId": 382
  }, {
    "id": 380,
    "label": "asm",
    "parentId": 381
  }, {
    "id": 379,
    "label": "libasm-src.jar",
    "parentId": 380
  }, {
    "id": 383,
    "label": "libasm-commons-src.jar",
    "parentId": 380
  }, {
    "id": 384,
    "label": "libasm-tree-src.jar",
    "parentId": 380
  }, {
    "id": 386,
    "label": "jsr250_annotations",
    "parentId": 381
  }, {
    "id": 385,
    "label": "libjsr250_annotations-src.jar",
    "parentId": 386
  }, {
    "id": 388,
    "label": "jsr330_inject",
    "parentId": 381
  }, {
    "id": 387,
    "label": "libjsr330_inject-src.jar",
    "parentId": 388
  }, {
    "id": 389,
    "label": "jarjar_deploy-src.jar",
    "parentId": 2
  }, {
    "id": 390,
    "label": "jarjar.runfiles_manifest",
    "parentId": 2
  }, {
    "id": 392,
    "label": "jarjar.runfiles",
    "parentId": 2
  }, {
    "id": 391,
    "label": "MANIFEST",
    "parentId": 392
  }, {
    "id": 394,
    "label": "javax_inject_javax_inject",
    "parentId": 21
  }, {
    "id": 393,
    "label": "javax.inject-1.jar",
    "parentId": 394
  }, {
    "id": 396,
    "label": "javax_enterprise_cdi_api",
    "parentId": 21
  }, {
    "id": 395,
    "label": "cdi-api-1.0.jar",
    "parentId": 396
  }, {
    "id": 398,
    "label": "org_apache_ant_ant",
    "parentId": 21
  }, {
    "id": 397,
    "label": "ant-1.9.6.jar",
    "parentId": 398
  }, {
    "id": 400,
    "label": "org_apache_ant_ant_launcher",
    "parentId": 21
  }, {
    "id": 399,
    "label": "ant-launcher-1.9.6.jar",
    "parentId": 400
  }, {
    "id": 402,
    "label": "org_apache_maven_maven_artifact",
    "parentId": 21
  }, {
    "id": 401,
    "label": "maven-artifact-3.3.3.jar",
    "parentId": 402
  }, {
    "id": 404,
    "label": "org_apache_maven_maven_model",
    "parentId": 21
  }, {
    "id": 403,
    "label": "maven-model-3.3.3.jar",
    "parentId": 404
  }, {
    "id": 406,
    "label": "org_apache_maven_maven_plugin_api",
    "parentId": 21
  }, {
    "id": 405,
    "label": "maven-plugin-api-3.3.3.jar",
    "parentId": 406
  }, {
    "id": 408,
    "label": "org_codehaus_plexus_plexus_classworlds",
    "parentId": 21
  }, {
    "id": 407,
    "label": "plexus-classworlds-2.5.2.jar",
    "parentId": 408
  }, {
    "id": 410,
    "label": "org_codehaus_plexus_plexus_component_annotations",
    "parentId": 21
  }, {
    "id": 409,
    "label": "plexus-component-annotations-1.5.5.jar",
    "parentId": 410
  }, {
    "id": 412,
    "label": "org_codehaus_plexus_plexus_utils",
    "parentId": 21
  }, {
    "id": 411,
    "label": "plexus-utils-3.0.20.jar",
    "parentId": 412
  }, {
    "id": 414,
    "label": "org_eclipse_sisu_org_eclipse_sisu_inject",
    "parentId": 21
  }, {
    "id": 413,
    "label": "org.eclipse.sisu.inject-0.3.0.jar",
    "parentId": 414
  }, {
    "id": 416,
    "label": "org_eclipse_sisu_org_eclipse_sisu_plexus",
    "parentId": 21
  }, {
    "id": 415,
    "label": "org.eclipse.sisu.plexus-0.3.0.jar",
    "parentId": 416
  }, {
    "id": 418,
    "label": "org_pantsbuild_jarjar",
    "parentId": 21
  }, {
    "id": 417,
    "label": "jarjar-1.7.2.jar",
    "parentId": 418
  }, {
    "id": 420,
    "label": "include",
    "parentId": 7
  }, {
    "id": 419,
    "label": "build-info-redacted.properties",
    "parentId": 420
  }, {
    "id": 421,
    "label": "jarjar_deploy.jar",
    "parentId": 2
  }, {
    "id": 422,
    "label": "jarjar_deploy.jar.unstripped",
    "parentId": 2
  }, {
    "id": 423,
    "label": "ConstructorCallback.java",
    "parentId": 349
  }, {
    "id": 424,
    "label": "Sampler.java",
    "parentId": 349
  }, {
    "id": 425,
    "label": "libsampler.jdeps",
    "parentId": 185
  }, {
    "id": 426,
    "label": "libsampler-native-header.jar",
    "parentId": 185
  }, {
    "id": 427,
    "label": "libsampler.jar_manifest_proto",
    "parentId": 185
  }, {
    "id": 428,
    "label": "libsampler-hjar.jar",
    "parentId": 185
  }, {
    "id": 429,
    "label": "libsampler-hjar.jdeps",
    "parentId": 185
  }, {
    "id": 430,
    "label": "AllocationClassAdapter.java",
    "parentId": 349
  }, {
    "id": 431,
    "label": "AllocationInstrumenter.java",
    "parentId": 349
  }, {
    "id": 432,
    "label": "AllocationMethodAdapter.java",
    "parentId": 349
  }, {
    "id": 433,
    "label": "AllocationRecorder.java",
    "parentId": 349
  }, {
    "id": 434,
    "label": "ConstructorInstrumenter.java",
    "parentId": 349
  }, {
    "id": 435,
    "label": "libverifying_class_adapter-hjar.jar",
    "parentId": 185
  }, {
    "id": 439,
    "label": "org_ow2_asm_asm_commons",
    "parentId": 157
  }, {
    "id": 438,
    "label": "_ijar",
    "parentId": 439
  }, {
    "id": 437,
    "label": "org_ow2_asm_asm_commons",
    "parentId": 438
  }, {
    "id": 436,
    "label": "asm-commons-9.4-ijar.jar",
    "parentId": 437
  }, {
    "id": 443,
    "label": "org_ow2_asm_asm_tree",
    "parentId": 157
  }, {
    "id": 442,
    "label": "_ijar",
    "parentId": 443
  }, {
    "id": 441,
    "label": "org_ow2_asm_asm_tree",
    "parentId": 442
  }, {
    "id": 440,
    "label": "asm-tree-9.4-ijar.jar",
    "parentId": 441
  }, {
    "id": 444,
    "label": "libverifying_class_adapter-hjar.jdeps",
    "parentId": 185
  }, {
    "id": 445,
    "label": "liballocation_instrumenter.jdeps",
    "parentId": 185
  }, {
    "id": 446,
    "label": "liballocation_instrumenter-native-header.jar",
    "parentId": 185
  }, {
    "id": 447,
    "label": "liballocation_instrumenter.jar_manifest_proto",
    "parentId": 185
  }, {
    "id": 448,
    "label": "liballocation_instrumenter-hjar.jar",
    "parentId": 185
  }, {
    "id": 449,
    "label": "liballocation_instrumenter-hjar.jdeps",
    "parentId": 185
  }, {
    "id": 450,
    "label": "libjsr250_annotations.jar",
    "parentId": 199
  }, {
    "id": 451,
    "label": "libjsr250_annotations-native-header.jar",
    "parentId": 199
  }, {
    "id": 452,
    "label": "libjsr250_annotations.jar_manifest_proto",
    "parentId": 199
  }, {
    "id": 453,
    "label": "libjsr250_annotations.jar",
    "parentId": 386
  }, {
    "id": 454,
    "label": "libjsr250_annotations-native-header.jar",
    "parentId": 386
  }, {
    "id": 455,
    "label": "libjsr250_annotations.jar_manifest_proto",
    "parentId": 386
  }, {
    "id": 456,
    "label": "libasm.jar",
    "parentId": 380
  }, {
    "id": 457,
    "label": "libasm-native-header.jar",
    "parentId": 380
  }, {
    "id": 458,
    "label": "libasm.jar_manifest_proto",
    "parentId": 380
  }, {
    "id": 459,
    "label": "libasm-commons.jar",
    "parentId": 380
  }, {
    "id": 460,
    "label": "libasm-commons-native-header.jar",
    "parentId": 380
  }, {
    "id": 461,
    "label": "libasm-commons.jar_manifest_proto",
    "parentId": 380
  }, {
    "id": 462,
    "label": "libasm-tree.jar",
    "parentId": 380
  }, {
    "id": 463,
    "label": "libasm-tree-native-header.jar",
    "parentId": 380
  }, {
    "id": 464,
    "label": "libasm-tree.jar_manifest_proto",
    "parentId": 380
  }, {
    "id": 465,
    "label": "libjsr330_inject.jar",
    "parentId": 388
  }, {
    "id": 466,
    "label": "libjsr330_inject-native-header.jar",
    "parentId": 388
  }, {
    "id": 467,
    "label": "libjsr330_inject.jar_manifest_proto",
    "parentId": 388
  }, {
    "id": 468,
    "label": "VerifyingClassAdapter.java",
    "parentId": 349
  }, {
    "id": 469,
    "label": "libverifying_class_adapter.jdeps",
    "parentId": 185
  }, {
    "id": 470,
    "label": "libverifying_class_adapter-native-header.jar",
    "parentId": 185
  }, {
    "id": 471,
    "label": "libverifying_class_adapter.jar_manifest_proto",
    "parentId": 185
  }, {
    "id": 472,
    "label": "libasm-commons.jar",
    "parentId": 180
  }, {
    "id": 473,
    "label": "libasm-commons-native-header.jar",
    "parentId": 180
  }, {
    "id": 474,
    "label": "libasm-commons.jar_manifest_proto",
    "parentId": 180
  }, {
    "id": 475,
    "label": "libasm-tree.jar",
    "parentId": 180
  }, {
    "id": 476,
    "label": "libasm-tree-native-header.jar",
    "parentId": 180
  }, {
    "id": 477,
    "label": "libasm-tree.jar_manifest_proto",
    "parentId": 180
  }, {
    "id": 478,
    "label": "libasm.jar",
    "parentId": 180
  }, {
    "id": 479,
    "label": "libasm-native-header.jar",
    "parentId": 180
  }, {
    "id": 480,
    "label": "libasm.jar_manifest_proto",
    "parentId": 180
  }, {
    "id": 481,
    "label": "guava_no_classes.jar",
    "parentId": 185
  }, {
    "id": 483,
    "label": "ijar",
    "parentId": 165
  }, {
    "id": 482,
    "label": "ijar",
    "parentId": 483
  }, {
    "id": 487,
    "label": "org_codehaus_plexus_plexus_component_annotations",
    "parentId": 5
  }, {
    "id": 486,
    "label": "_ijar",
    "parentId": 487
  }, {
    "id": 485,
    "label": "org_codehaus_plexus_plexus_component_annotations",
    "parentId": 486
  }, {
    "id": 484,
    "label": "plexus-component-annotations-1.5.5-ijar.jar",
    "parentId": 485
  }, {
    "id": 491,
    "label": "org_apache_maven_maven_artifact",
    "parentId": 5
  }, {
    "id": 490,
    "label": "_ijar",
    "parentId": 491
  }, {
    "id": 489,
    "label": "org_apache_maven_maven_artifact",
    "parentId": 490
  }, {
    "id": 488,
    "label": "maven-artifact-3.3.3-ijar.jar",
    "parentId": 489
  }, {
    "id": 495,
    "label": "org_eclipse_sisu_org_eclipse_sisu_plexus",
    "parentId": 5
  }, {
    "id": 494,
    "label": "_ijar",
    "parentId": 495
  }, {
    "id": 493,
    "label": "org_eclipse_sisu_org_eclipse_sisu_plexus",
    "parentId": 494
  }, {
    "id": 492,
    "label": "org.eclipse.sisu.plexus-0.3.0-ijar.jar",
    "parentId": 493
  }, {
    "id": 499,
    "label": "org_codehaus_plexus_plexus_classworlds",
    "parentId": 5
  }, {
    "id": 498,
    "label": "_ijar",
    "parentId": 499
  }, {
    "id": 497,
    "label": "org_codehaus_plexus_plexus_classworlds",
    "parentId": 498
  }, {
    "id": 496,
    "label": "plexus-classworlds-2.5.2-ijar.jar",
    "parentId": 497
  }, {
    "id": 503,
    "label": "org_apache_maven_maven_plugin_api",
    "parentId": 5
  }, {
    "id": 502,
    "label": "_ijar",
    "parentId": 503
  }, {
    "id": 501,
    "label": "org_apache_maven_maven_plugin_api",
    "parentId": 502
  }, {
    "id": 500,
    "label": "maven-plugin-api-3.3.3-ijar.jar",
    "parentId": 501
  }, {
    "id": 507,
    "label": "org_eclipse_sisu_org_eclipse_sisu_inject",
    "parentId": 5
  }, {
    "id": 506,
    "label": "_ijar",
    "parentId": 507
  }, {
    "id": 505,
    "label": "org_eclipse_sisu_org_eclipse_sisu_inject",
    "parentId": 506
  }, {
    "id": 504,
    "label": "org.eclipse.sisu.inject-0.3.0-ijar.jar",
    "parentId": 505
  }, {
    "id": 511,
    "label": "org_codehaus_plexus_plexus_utils",
    "parentId": 5
  }, {
    "id": 510,
    "label": "_ijar",
    "parentId": 511
  }, {
    "id": 509,
    "label": "org_codehaus_plexus_plexus_utils",
    "parentId": 510
  }, {
    "id": 508,
    "label": "plexus-utils-3.0.20-ijar.jar",
    "parentId": 509
  }, {
    "id": 515,
    "label": "org_pantsbuild_jarjar",
    "parentId": 5
  }, {
    "id": 514,
    "label": "_ijar",
    "parentId": 515
  }, {
    "id": 513,
    "label": "org_pantsbuild_jarjar",
    "parentId": 514
  }, {
    "id": 512,
    "label": "jarjar-1.7.2-ijar.jar",
    "parentId": 513
  }, {
    "id": 519,
    "label": "javax_enterprise_cdi_api",
    "parentId": 5
  }, {
    "id": 518,
    "label": "_ijar",
    "parentId": 519
  }, {
    "id": 517,
    "label": "javax_enterprise_cdi_api",
    "parentId": 518
  }, {
    "id": 516,
    "label": "cdi-api-1.0-ijar.jar",
    "parentId": 517
  }, {
    "id": 523,
    "label": "org_apache_ant_ant_launcher",
    "parentId": 5
  }, {
    "id": 522,
    "label": "_ijar",
    "parentId": 523
  }, {
    "id": 521,
    "label": "org_apache_ant_ant_launcher",
    "parentId": 522
  }, {
    "id": 520,
    "label": "ant-launcher-1.9.6-ijar.jar",
    "parentId": 521
  }, {
    "id": 527,
    "label": "org_apache_maven_maven_model",
    "parentId": 5
  }, {
    "id": 526,
    "label": "_ijar",
    "parentId": 527
  }, {
    "id": 525,
    "label": "org_apache_maven_maven_model",
    "parentId": 526
  }, {
    "id": 524,
    "label": "maven-model-3.3.3-ijar.jar",
    "parentId": 525
  }, {
    "id": 531,
    "label": "org_apache_ant_ant",
    "parentId": 5
  }, {
    "id": 530,
    "label": "_ijar",
    "parentId": 531
  }, {
    "id": 529,
    "label": "org_apache_ant_ant",
    "parentId": 530
  }, {
    "id": 528,
    "label": "ant-1.9.6-ijar.jar",
    "parentId": 529
  }, {
    "id": 535,
    "label": "javax_annotation_jsr250_api",
    "parentId": 5
  }, {
    "id": 534,
    "label": "_ijar",
    "parentId": 535
  }, {
    "id": 533,
    "label": "javax_annotation_jsr250_api",
    "parentId": 534
  }, {
    "id": 532,
    "label": "jsr250-api-1.0-ijar.jar",
    "parentId": 533
  }, {
    "id": 539,
    "label": "org_ow2_asm_asm",
    "parentId": 5
  }, {
    "id": 538,
    "label": "_ijar",
    "parentId": 539
  }, {
    "id": 537,
    "label": "org_ow2_asm_asm",
    "parentId": 538
  }, {
    "id": 536,
    "label": "asm-9.4-ijar.jar",
    "parentId": 537
  }, {
    "id": 543,
    "label": "org_ow2_asm_asm_tree",
    "parentId": 5
  }, {
    "id": 542,
    "label": "_ijar",
    "parentId": 543
  }, {
    "id": 541,
    "label": "org_ow2_asm_asm_tree",
    "parentId": 542
  }, {
    "id": 540,
    "label": "asm-tree-9.4-ijar.jar",
    "parentId": 541
  }, {
    "id": 547,
    "label": "org_ow2_asm_asm_commons",
    "parentId": 5
  }, {
    "id": 546,
    "label": "_ijar",
    "parentId": 547
  }, {
    "id": 545,
    "label": "org_ow2_asm_asm_commons",
    "parentId": 546
  }, {
    "id": 544,
    "label": "asm-commons-9.4-ijar.jar",
    "parentId": 545
  }, {
    "id": 551,
    "label": "javax_inject_javax_inject",
    "parentId": 5
  }, {
    "id": 550,
    "label": "_ijar",
    "parentId": 551
  }, {
    "id": 549,
    "label": "javax_inject_javax_inject",
    "parentId": 550
  }, {
    "id": 548,
    "label": "javax.inject-1-ijar.jar",
    "parentId": 549
  }, {
    "id": 552,
    "label": "jarjar_guava.txt",
    "parentId": 349
  }, {
    "id": 553,
    "label": "guava_base_deploy.jar",
    "parentId": 185
  }, {
    "id": 554,
    "label": "guava_base.jar",
    "parentId": 185
  }, {
    "id": 555,
    "label": "guava_base-native-header.jar",
    "parentId": 185
  }, {
    "id": 556,
    "label": "guava_base.jar_manifest_proto",
    "parentId": 185
  }, {
    "id": 557,
    "label": "guava_base-src.jar",
    "parentId": 185
  }, {
    "id": 558,
    "label": "guava_base",
    "parentId": 185
  }, {
    "id": 560,
    "label": "guava",
    "parentId": 181
  }, {
    "id": 559,
    "label": "libguava-src.jar",
    "parentId": 560
  }, {
    "id": 561,
    "label": "guava_base_deploy-src.jar",
    "parentId": 185
  }, {
    "id": 562,
    "label": "guava_base.runfiles_manifest",
    "parentId": 185
  }, {
    "id": 564,
    "label": "guava_base.runfiles",
    "parentId": 185
  }, {
    "id": 563,
    "label": "MANIFEST",
    "parentId": 564
  }, {
    "id": 566,
    "label": "com_google_guava_failureaccess",
    "parentId": 21
  }, {
    "id": 565,
    "label": "failureaccess-1.0.1.jar",
    "parentId": 566
  }, {
    "id": 568,
    "label": "com_google_guava_guava",
    "parentId": 21
  }, {
    "id": 567,
    "label": "guava-32.1.1-jre.jar",
    "parentId": 568
  }, {
    "id": 569,
    "label": "src_Smain_Sjava_Scom_Sgoogle_Smonitoring_Sruntime_Sinstrumentation_Sguava_Ubase-runfiles",
    "parentId": 343
  }, {
    "id": 570,
    "label": "guava_base_deploy.jar.unstripped",
    "parentId": 185
  }, {
    "id": 571,
    "label": "libguava.jar",
    "parentId": 560
  }, {
    "id": 572,
    "label": "libguava-native-header.jar",
    "parentId": 560
  }, {
    "id": 573,
    "label": "libguava.jar_manifest_proto",
    "parentId": 560
  }, {
    "id": 577,
    "label": "com_google_guava_guava_beta_checker",
    "parentId": 5
  }, {
    "id": 576,
    "label": "_ijar",
    "parentId": 577
  }, {
    "id": 575,
    "label": "com_google_guava_guava_beta_checker",
    "parentId": 576
  }, {
    "id": 574,
    "label": "guava-beta-checker-1.0-ijar.jar",
    "parentId": 575
  }, {
    "id": 579,
    "label": "guava",
    "parentId": 381
  }, {
    "id": 578,
    "label": "libbeta-checker.jar",
    "parentId": 579
  }, {
    "id": 580,
    "label": "libbeta-checker-native-header.jar",
    "parentId": 579
  }, {
    "id": 581,
    "label": "libbeta-checker.jar_manifest_proto",
    "parentId": 579
  }, {
    "id": 582,
    "label": "libbeta-checker-src.jar",
    "parentId": 579
  }, {
    "id": 586,
    "label": "com_google_guava_failureaccess",
    "parentId": 157
  }, {
    "id": 585,
    "label": "_ijar",
    "parentId": 586
  }, {
    "id": 584,
    "label": "com_google_guava_failureaccess",
    "parentId": 585
  }, {
    "id": 583,
    "label": "failureaccess-1.0.1-ijar.jar",
    "parentId": 584
  }, {
    "id": 590,
    "label": "com_google_guava_guava",
    "parentId": 157
  }, {
    "id": 589,
    "label": "_ijar",
    "parentId": 590
  }, {
    "id": 588,
    "label": "com_google_guava_guava",
    "parentId": 589
  }, {
    "id": 587,
    "label": "guava-32.1.1-jre-ijar.jar",
    "parentId": 588
  }, {
    "id": 592,
    "label": "com_google_guava_guava_beta_checker",
    "parentId": 21
  }, {
    "id": 591,
    "label": "guava-beta-checker-1.0.jar",
    "parentId": 592
  }]
}
