project,tool,command
google_fruit,github-actions,, test: DebugPlain}
baidu_braft,github-actions,]
baidu_braft,github-actions,- build_tool: bazel
baidu_braft,github-actions,if: ${{ matrix.build_tool == 'bazel' }}
baidu_braft,github-actions,-0.25.2-installer-linux-x86_64.sh
baidu_braft,github-actions,-0.25.2-installer-linux-x86_64.sh
baidu_braft,github-actions,-0.25.2-installer-linux-x86_64.sh --user
baidu_braft,github-actions,if: ${{ matrix.build_tool == 'bazel' }}
baidu_braft,github-actions,build -c opt --copt -DHAVE_ZLIB=1 //...
google_crubit,buildkite,# Part of the Crubit project, under the Apache License v2.0 with LLVM
# Exceptions. See /LICENSE for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

---
default_linux_targets: &default_linux_targets
  # TODO(b/234804076): Make the whole repo buildable/testable with //...
  # Target below is only a rudimentary smoke test.
  - "//rs_bindings_from_cc:rs_bindings_from_cc_impl"
  - "//rs_bindings_from_cc:importer_test"
  - "//rs_bindings_from_cc:cc_collect_instantiations_test"
  - "//rs_bindings_from_cc:collect_instantiations_test"
  - "//rs_bindings_from_cc:bazel_types_test"
  - "//rs_bindings_from_cc:cmdline_test"
  - "//rs_bindings_from_cc:rs_ir_test"
  - "//cc_template/..."
  - "//lifetime_analysis/..."
default_linux_task: &default_linux_task
  platform: ubuntu2004
  shell_commands:
    - "sudo apt -y update && sudo apt -y install lld"
  build_flags:
    - "--repo_env=CC=clang"
  build_targets: *default_linux_targets
  test_targets: *default_linux_targets
tasks:
  ubuntu2004:
    name: Stable Bazel Version With Clang and LLD
    <<: *default_linux_task
  ubuntu2004_rolling:
    name: Rolling Bazel Version With Clang and LLD
    bazel: "rolling"
    <<: *default_linux_task

google_closure-compiler,github-actions,-bin-unsymlink
google_closure-compiler,github-actions,isk
google_closure-compiler,github-actions,isk@v2
google_closure-compiler,github-actions,isk test //:all
google_closure-compiler,github-actions,Artifacts
google_closure-compiler,github-actions,-bin/compiler_uberjar_deploy.jar
google_closure-compiler,github-actions,-bin/*_bundle.jar
google_closure-compiler,github-actions,-bin.
google_closure-compiler,github-actions,would have put it.
google_closure-compiler,github-actions,-bin
google_closure-compiler,github-actions,-bin/compiler_uberjar_deploy.jar
google_closure-compiler,github-actions,-bin.
google_closure-compiler,github-actions,path: bazel-bin
bazelbuild_rules_closure,buildkite,---
platforms:
  ubuntu1804:
    build_targets:
    - "..."
    test_targets:
    - "..."
  macos:
    build_targets:
    - "..."
    test_targets:
    - "..."

dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,isk
dreal_dreal4,github-actions,isk; fi
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,isk
dreal_dreal4,github-actions,isk; fi
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,isk
dreal_dreal4,github-actions,isk; fi
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,isk
dreal_dreal4,github-actions,isk; fi
dreal_dreal4,github-actions,test //... \
dreal_dreal4,github-actions,isk
dreal_dreal4,github-actions,isk; fi
dreal_dreal4,github-actions,test //... \
bazelbuild_vscode-bazel,buildkite,---
tasks:
  ubuntu1804:
    shell_commands:
      # Install Node.js and NPM
      - "curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash - && sudo apt -y install nodejs && sudo npm install -g npm@latest"
      # Install node_modules and then compile and check the code for lint
      # errors.
      - npm ci
      - npm run compile
      - npm run check-lint
      # TODO(allevato): Add a prettier check to verify that *.ts files don't
      # differ from their prettier output. We need `prettier-tslint` so that
      # prettier will obey our tslint config, but it doesn't support
      # Typescript 3 yet.
      # (https://github.com/azz/prettier-tslint/issues/18)
    build_targets:
      - "//:dummy_target_for_ci"

pytorch_pytorch,github-actions,-test:
pytorch_pytorch,github-actions,-test
pytorch_pytorch,github-actions,-build-test.yml
pytorch_pytorch,github-actions,-test
pytorch_pytorch,github-actions,on:
pytorch_pytorch,github-actions,-testlogs symlink to
pytorch_pytorch,github-actions,-testlogs ./test/test-reports'
pytorch_pytorch,github-actions,-${{ github.job }}_${{ steps.get-job-id.outputs.job-id }}
pytorch_pytorch,circleci,_build:
pytorch_pytorch,circleci,Build
pytorch_pytorch,circleci,to avoid collisions
pytorch_pytorch,circleci,-${CIRCLE_SHA1}
pytorch_pytorch,circleci,_test:
pytorch_pytorch,circleci,-${CIRCLE_SHA1}
pytorch_pytorch,circleci,-testlogs ./ || echo 'No test reports found!'
pytorch_pytorch,circleci,-testlogs
pytorch_pytorch,circleci,_build:
pytorch_pytorch,circleci,Build
pytorch_pytorch,circleci,to avoid collisions
pytorch_pytorch,circleci,-${CIRCLE_SHA1}
pytorch_pytorch,circleci,_test:
pytorch_pytorch,circleci,-${CIRCLE_SHA1}
pytorch_pytorch,circleci,-testlogs ./ || echo 'No test reports found!'
pytorch_pytorch,circleci,-testlogs
buchgr_bazel-remote,github-actions,-remote-linux-amd64
buchgr_bazel-remote,github-actions,-remote-linux-amd64
buchgr_bazel-remote,github-actions,-remote-linux-arm64
buchgr_bazel-remote,github-actions,-remote-linux-arm64
buchgr_bazel-remote,github-actions,-remote-linux-amd64
buchgr_bazel-remote,github-actions,-remote-${{ steps.release_version.outputs.VERSION }}-linux-x86_64
buchgr_bazel-remote,github-actions,-remote-linux-arm64
buchgr_bazel-remote,github-actions,-remote-${{ steps.release_version.outputs.VERSION }}-linux-arm64
buchgr_bazel-remote,github-actions,-remote-darwin-amd64
buchgr_bazel-remote,github-actions,-remote-darwin-amd64
buchgr_bazel-remote,github-actions,-remote-darwin-arm64
buchgr_bazel-remote,github-actions,-remote-darwin-arm64
buchgr_bazel-remote,github-actions,-remote-darwin-amd64
buchgr_bazel-remote,github-actions,-remote-${{ steps.release_version.outputs.VERSION }}-darwin-x86_64
buchgr_bazel-remote,github-actions,-remote-darwin-arm64
buchgr_bazel-remote,github-actions,-remote-${{ steps.release_version.outputs.VERSION }}-darwin-arm64
buchgr_bazel-remote,buildkite,---
validate_config: 1
buildifier:
  version: latest
  warnings: "all"
tasks:
  ubuntu1804:
    platform: ubuntu1804
    build_targets:
      - "//:bazel-remote"
      - "//:bazel-remote-image"
    test_targets:
      - "..."
  ubuntu2004:
    platform: ubuntu2004
    build_targets:
      - "//:bazel-remote"
      - "//:bazel-remote-image"
    test_targets:
      - "..."
  macos:
    platform: macos
    build_targets:
      # Skip the (linux) container image targets, just build the binary.
      - "//:bazel-remote"
    test_targets:
      - "..."
  # A series of checks, each in a separate job due to
  # https://github.com/bazelbuild/continuous-integration/issues/938
  check_modules:
    platform: ubuntu2004
    name: "gazelle-update-repos"
    shell_commands:
      - "bazel run //:gazelle-update-repos"
      - "echo check if deps.bzl is up to date"
      - "git diff --exit-code" # If there is a diff, fail.
  check_gofmt:
    platform: ubuntu2004
    name: "go fmt"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Check go format"
      - "PATH=$HOME/go/bin:$PATH .bazelci/check-gofmt.sh `find . -name '*.go'`"
  check_go_vet:
    platform: ubuntu2004
    name: "go vet"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Check go vet"
      - "PATH=$HOME/go/bin:$PATH go vet ./..."
  check_go_test_race:
    platform: ubuntu2004
    name: "go test --race"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Running go test with race detector"
      - "PATH=$HOME/go/bin:$PATH go test -race ./..."
  end_to_end_test_go:
    platform: ubuntu2004
    name: "end-to-end test - pure go zstd"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Run end-to-end system test - pure go zstd"
      - "PATH=$HOME/go/bin:$PATH timeout 30m .bazelci/system-test.sh"
  end_to_end_test_cgo:
    platform: ubuntu2004
    name: "end-to-end test - cgo zstd"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Run end-to-end system test - cgo zstd"
      - "PATH=$HOME/go/bin:$PATH EXTRA_FLAGS=\"--zstd_implementation=cgo\" timeout 30m .bazelci/system-test.sh"
  tls_tests:
    platform: ubuntu2004
    name: "TLS tests"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Run TLS tests"
      - "PATH=$HOME/go/bin:$PATH timeout 30m .bazelci/tls-tests.sh"
  basic_auth_tests:
    platform: ubuntu2004
    name: "basic auth tests"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Run basic auth tests"
      - "PATH=$HOME/go/bin:$PATH timeout 30m .bazelci/basic-auth-tests.sh"
  migration_tests:
    platform: ubuntu2004
    name: "migration tests"
    shell_commands:
      - ".bazelci/buildkite-install-go.sh"
      - "echo +++ Run migration tests"
      - "PATH=$HOME/go/bin:$PATH timeout 10m .bazelci/migration-test.sh"

johnynek_bazel-deps,github-actions,-deps-macos
johnynek_bazel-deps,github-actions,_installer_sha: b4c94148f52854b89cff5de38a9eeeb4b0bcb3fb3a027330c46c468d9ea0898b
johnynek_bazel-deps,github-actions,_version: 2.1.1
johnynek_bazel-deps,github-actions,-deps-linux
johnynek_bazel-deps,github-actions,_installer_sha: d6cea18d59e9c90c7ec417b2645834f968132de16d0022c7439b1e60438eb8c9
johnynek_bazel-deps,github-actions,_version: 2.1.1
johnynek_bazel-deps,github-actions,output cache
johnynek_bazel-deps,github-actions,uses: actions/cache@v1
johnynek_bazel-deps,github-actions,-cache"
johnynek_bazel-deps,github-actions,-out-${{ github.run_id}}
johnynek_bazel-deps,github-actions,-out-
johnynek_bazel-deps,github-actions,config for actions
johnynek_bazel-deps,github-actions,rc
johnynek_bazel-deps,github-actions,rc
johnynek_bazel-deps,github-actions,rc
johnynek_bazel-deps,github-actions,run: ./ci_scripts/ci_install_bazel.sh
johnynek_bazel-deps,github-actions,_version }}
johnynek_bazel-deps,github-actions,_installer_sha }}
johnynek_bazel-deps,github-actions,-bin"
johnynek_bazel-deps,github-actions,_version }}
johnynek_bazel-deps,github-actions,_installer_sha }}
johnynek_bazel-deps,github-actions,-bin"
johnynek_bazel-deps,github-actions,-deps
johnynek_bazel-deps,github-actions,-deps-linux
johnynek_bazel-deps,github-actions,-deps
johnynek_bazel-deps,github-actions,-deps-macos
johnynek_bazel-deps,github-actions,-deps-macos
johnynek_bazel-deps,github-actions,-deps-macos.sha256
johnynek_bazel-deps,github-actions,-deps-linux
johnynek_bazel-deps,github-actions,-deps-linux.sha256
bazelbuild_bazelisk,buildkite,---
platforms:
  ubuntu1804:
    build_targets:
      - //...
    test_targets:
      - //...
    test_flags:
      - --flaky_test_attempts=1
      - --test_output=streamed
  ubuntu2004:
    build_targets:
      - //...
    test_targets:
      - //...
    test_flags:
      - --flaky_test_attempts=1
      - --test_output=streamed
  macos:
    build_targets:
      - //...
    test_targets:
      - //...
    test_flags:
      - --flaky_test_attempts=1
      - --test_output=streamed
  windows:
    build_targets:
      - //...
    test_targets:
      - //...
      # Windows doesn't have a `python3` executable on PATH.
      - -//:py3_bazelisk_test
    test_flags:
      - --flaky_test_attempts=1
      - --test_env=PATH
      - --test_env=PROCESSOR_ARCHITECTURE
      - --test_output=streamed

3rdparty_stout,github-actions,build \
3rdparty_stout,github-actions,test \
p4lang_PI,github-actions,/*
p4lang_PI,github-actions,Build"
p4lang_PI,github-actions,isk-linux-amd64
p4lang_PI,github-actions,cache
p4lang_PI,github-actions,.build/versions/master/output_directories.html
p4lang_PI,github-actions,"
p4lang_PI,github-actions,files change.
p4lang_PI,github-actions,') }}
p4lang_PI,github-actions,-${{ runner.os }}-build-
p4lang_PI,github-actions,isk
p4lang_PI,github-actions,isk/releases/download/v1.4.0/$BAZEL"
p4lang_PI,github-actions,- name: Build and run tests
p4lang_PI,github-actions,test //proto/tests:pi_proto_tests //proto/tests:pi_proto_server_tests
protocolbuffers_upb,github-actions,Tests
protocolbuffers_upb,github-actions,-cache/upb
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "" }
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "-c opt" }  # Some warnings only fire with -c opt
protocolbuffers_upb,github-actions,, CC: gcc, os: ubuntu-20.04, flags: "-c opt" }
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "--//:fasttable_enabled=true -- -cmake:test_generated_files" }
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "--config=asan -c dbg -- -benchmarks:benchmark -python/..." }
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "--config=ubsan -c dbg -- -benchmarks:benchmark -python/... -upb/bindings/lua/...", install: "libunwind-dev" }
protocolbuffers_upb,github-actions,, CC: clang, os: ubuntu-20.04, flags: "--copt=-m32 --linkopt=-m32 -- -... benchmarks:benchmark ", install: "g++-multilib" }
protocolbuffers_upb,github-actions,, CC: clang, os: macos-11, flags: "" }
protocolbuffers_upb,github-actions,versions back per https://opensource.google/documentation/policies/cplusplus-support
protocolbuffers_upb,github-actions,-4.1.0-linux-x86_64, CC: clang, os: ubuntu-20.04, flags: "" }
protocolbuffers_upb,github-actions,-5.3.0-linux-x86_64, CC: clang, os: ubuntu-20.04, flags: "" }
protocolbuffers_upb,github-actions,version
protocolbuffers_upb,github-actions,/releases/download/$VERSION/${{ matrix.BAZEL }}
protocolbuffers_upb,github-actions,' }}
protocolbuffers_upb,github-actions,read/write caching
protocolbuffers_upb,github-actions,read-only caching
protocolbuffers_upb,github-actions,/linux@sha256:2bfd061284eff8234f2fcca16d71d43c69ccf3a22206628b54c204a6a9aac277
protocolbuffers_upb,github-actions,-cache/upb --google_default_credentials
protocolbuffers_upb,buildkite,---
tasks:
  ubuntu:
    platform: ubuntu2004
    shell_commands:
    - "sudo apt -y update && sudo apt -y install libreadline-dev cmake rsync"
    build_flags:
    - "--incompatible_disallow_empty_glob"
    test_targets:
    - //...
  macos:
    platform: macos
    build_flags:
    - "--incompatible_disallow_empty_glob"
    test_targets:
    - //...

bazelbuild_bazel-toolchains,github-actions,Authors. All rights reserved.
bazelbuild_bazel-toolchains,github-actions,Authors. All rights reserved.
bazelbuild_bazel-toolchains,buildkite,---
buildifier:
  version: latest
  # Check for issues with the format of our bazel config files.
  # All warnings from https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md
  # are enabled except:
  # rule-impl-return,uninitialized,return-value,rule-impl-return,unsorted-dict-items,out-of-order-load
  # TODO (suvanjan): Re-enable once issues and https://github.com/bazelbuild/buildtools/issues/575
  # are fixed.
  warnings: "attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,confusing-name,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,function-docstring,git-repository,http-archive,integer-division,load,load-on-top,module-docstring,name-conventions,native-build,native-package,no-effect,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,same-origin-load,string-iteration,unreachable,unused-variable"
tasks:
  presubmit:
    platform: ubuntu1604
    build_targets:
    - "--"
    - "..."
    test_targets:
    - "--"
    - "..."

risc0_risc0,github-actions,isk@6c0030d04c5269c111620b552fe2b7f619849944
risc0_risc0,github-actions,isk test //... $CONFIG --config=cpu
tensorflow_recommenders-addons,github-actions,:
tensorflow_recommenders-addons,github-actions,runs-on: ubuntu-18.04
tensorflow_recommenders-addons,github-actions,isk.sh ./
tensorflow_recommenders-addons,github-actions,test --local_ram_resources=4096 -c opt -k --test_timeout 300,450,1200,3600 --test_output=errors //tensorflow_recommenders_addons/...
tensorflow_recommenders-addons,github-actions,# Ubuntu bazel is run inside of the docker image
tensorflow_recommenders-addons,github-actions,isk.sh ./
tensorflow_recommenders-addons,github-actions,]
tensorflow_recommenders-addons,github-actions,]
tensorflow_recommenders-addons,github-actions,-format:
tensorflow_recommenders-addons,github-actions,code format
tensorflow_recommenders-addons,github-actions,-format
pytorch_TensorRT,github-actions,version
pytorch_TensorRT,github-actions,_info
pytorch_TensorRT,github-actions,version)"
pytorch_TensorRT,github-actions,run: |
pytorch_TensorRT,github-actions,chmod a+x /usr/bin/bazel
pytorch_TensorRT,circleci,:
pytorch_TensorRT,circleci,"
pytorch_TensorRT,circleci,command: |
pytorch_TensorRT,circleci,sudo chmod a+x /usr/bin/bazel
pytorch_TensorRT,circleci,-version:
pytorch_TensorRT,circleci,-platform:
pytorch_TensorRT,circleci,:
pytorch_TensorRT,circleci,-platform >>
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,version)" -w /workspace << parameters.torch-base-image >>
pytorch_TensorRT,circleci,version)"
pytorch_TensorRT,circleci,"
pytorch_TensorRT,circleci,-project/external/tensorrt/lib/:/usr/local/cuda/lib64/:$LD_LIBRARY_PATH"
pytorch_TensorRT,circleci,query 'kind(cc_*, tests(//tests))' --noshow_progress >> /tmp/test_manifest.txt
pytorch_TensorRT,circleci,test $(cat /tmp/node_test_manifest.txt) --test_arg=--gtest_output=xml:/tmp/artifacts/test_results/ --jobs 2 --config ci_testing --config pre_cxx11_abi --noshow_progress
pytorch_TensorRT,circleci,-testlogs /tmp/testlogs
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,-platform: "arm64"
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,-platform: "x86_64"
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,-platform: "x86_64"
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,-platform: "x86_64"
pytorch_TensorRT,circleci,build //:libtorchtrt -c opt --noshow_progress
pytorch_TensorRT,circleci,-bin/libtorchtrt.tar.gz ~/project/py/dist/libtorchtrt-${TORCHTRT_VERSION}-cudnn${CUDNN_VERSION}-tensorrt${TRT_VERSION}-cuda${CUDA_VERSION}-libtorch${TORCH_VERSION}-x86_64-linux.tar.gz
pytorch_TensorRT,circleci,-version >>
pytorch_TensorRT,circleci,-platform: "arm64"
pytorch_TensorRT,circleci,build //:libtorchtrt -c opt --noshow_progress
pytorch_TensorRT,circleci,-bin/libtorchtrt.tar.gz ~/project/py/dist/libtorchtrt-${TORCHTRT_VERSION}-cudnn${CUDNN_VERSION}-tensorrt${TRT_VERSION}-cuda${CUDA_VERSION}-libtorch${TORCH_VERSION}-aarch64-linux-jp<< parameters.jetpack-version >>.tar.gz
pytorch_TensorRT,circleci,-platform: "x86_64"
pytorch_TensorRT,circleci,-version:
realm_SwiftLint,buildkite,"
realm_SwiftLint,buildkite,build :swiftlint
realm_SwiftLint,buildkite,test --test_output=errors //Tests/...
realm_SwiftLint,buildkite,build //tools:danger
realm_SwiftLint,buildkite,-bin/tools/danger --verbose
realm_SwiftLint,buildkite,test -c opt --test_output=streamed --test_timeout=1800 --spawn_strategy=local analyze
realm_SwiftLint,buildkite,test --test_output=streamed --build_tests_only --features=tsan --test_timeout=1000 //Tests/...
realm_SwiftLint,buildkite,build --config=release --features=tsan swiftlint
realm_SwiftLint,buildkite,-bin/swiftlint --progress --lenient
realm_SwiftLint,buildkite,-bin/swiftlint --progress --lenient
morganstanley_modern-cpp-kafka,github-actions,Build'
morganstanley_modern-cpp-kafka,github-actions,-build:
morganstanley_modern-cpp-kafka,github-actions,build //...
morganstanley_modern-cpp-kafka,github-actions,test  //... --test_env=KAFKA_BROKER_LIST=$KAFKA_BROKER_LIST --test_tag_filters="${TEST_LABELS}" --test_verbose_timeout_warnings --test_output=all
alibaba_async_simple,github-actions,:
alibaba_async_simple,github-actions,build --cxxopt=/std:c++20 ...
alibaba_async_simple,github-actions,test --cxxopt=/std:c++20 --test_output=errors ...
alibaba_async_simple,github-actions,on:
alibaba_async_simple,github-actions,.build/install/ubuntu
alibaba_async_simple,github-actions,build --action_env=CXX=clang++ --action_env=CC=clang ...
alibaba_async_simple,github-actions,test --action_env=CXX=clang++ --action_env=CC=clang --test_output=errors ...
alibaba_async_simple,github-actions,:
alibaba_async_simple,github-actions,build --define=ASYNC_SIMPLE_DISABLE_AIO=true ...
alibaba_async_simple,github-actions,test --define=ASYNC_SIMPLE_DISABLE_AIO=true --test_output=errors ...
bazelbuild_rules_foreign_cc,github-actions,build/rules_foreign_cc/main/.github/docs-${{ matrix.ref }}.patch > ${{ github.workspace }}/.github/docs-${{ matrix.ref }}.patch
bazelbuild_rules_foreign_cc,github-actions,isk
bazelbuild_rules_foreign_cc,github-actions,isk-linux-amd64"
bazelbuild_rules_foreign_cc,github-actions,"
bazelbuild_rules_foreign_cc,github-actions,"
bazelbuild_rules_foreign_cc,github-actions," run //:generate_docs
bazelbuild_rules_foreign_cc,github-actions," clean
bazelbuild_rules_foreign_cc,buildkite,---
tasks:
  ubuntu2004:
    platform: ubuntu2004
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  rbe_ubuntu1604:
    platform: rbe_ubuntu1604
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  macos:
    platform: macos
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  windows:
    platform: windows
    build_targets:
      - "//..."
    test_targets:
      - "//..."
      # TODO: https://github.com/bazelbuild/rules_foreign_cc/issues/495
      - "-//test:shell_method_symlink_contents_to_dir_test"
      - "-//test:shell_script_inner_fun_test"
  ubuntu1804_examples_standalone:
    name: Examples (spawn_strategy=standalone)
    platform: ubuntu1804
    working_directory: examples
    linux_targets: &linux_targets_standalone
      - "//..."
      - "//:third_party_examples_linux_tests"
    build_targets: *linux_targets_standalone
    build_flags:
      - "-c"
      - "dbg"
      - "--spawn_strategy=standalone"
      - "-k"
    test_targets: *linux_targets_standalone
    test_flags:
      - "-c"
      - "dbg"
      - "--spawn_strategy=standalone"
  ubuntu2004_examples:
    name: Examples
    platform: ubuntu2004
    working_directory: examples
    linux_targets: &linux_targets
      - "//..."
      - "//:third_party_examples_linux_tests"
    build_targets: *linux_targets
    test_targets: *linux_targets
  rbe_ubuntu1604_examples:
    name: Examples
    platform: rbe_ubuntu1604
    working_directory: examples
    rbe_targets: &rbe_targets
      - "//..."
      - "//:third_party_examples_linux_rbe_tests"
      # Gives error: zipalign: error while loading shared libraries: /usr/local/lib/libc++.so: file too short
      - "-//cmake_android/..."
    build_targets: *rbe_targets
    test_targets: *rbe_targets
  macos_examples_standalone:
    name: Examples (spawn_strategy=standalone)
    platform: macos
    working_directory: examples
    macos_targets: &macos_targets_standalone
      - "//..."
      - "//:third_party_examples_macos_tests"
    build_targets: *macos_targets_standalone
    build_flags:
      - "-c"
      - "dbg"
      - "--spawn_strategy=standalone"
      - "-k"
      - "--noincompatible_enable_cc_toolchain_resolution"
    test_targets: *macos_targets_standalone
    test_flags:
      - "-c"
      - "dbg"
      - "--spawn_strategy=standalone"
      - "--noincompatible_enable_cc_toolchain_resolution"
  macos_examples:
    name: Examples
    platform: macos
    working_directory: examples
    macos_targets: &macos_targets
      - "//..."
      - "//:third_party_examples_macos_tests"
      # Remove tests that depend on shared libraries, which currently doesn't work on sandboxed MacOS - https://github.com/bazelbuild/bazel/issues/10254
      - "-@rules_foreign_cc_examples_third_party//curl:curl_test"
      - "-@rules_foreign_cc_examples_third_party//openssl:openssl_test"
    build_targets: *macos_targets
    build_flags:
      - "--noincompatible_enable_cc_toolchain_resolution"
    test_targets: *macos_targets
    test_flags:
      - "--noincompatible_enable_cc_toolchain_resolution"
  windows_examples:
    name: Examples
    platform: windows
    # Ping MSVC version to 2017, since LLVM 11.0.0 is not yet available on Bazel CI.
    # TODO: remove after https://github.com/bazelbuild/continuous-integration/pull/1433 is deployed.
    environment:
      BAZEL_VC: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC"
    working_directory: examples
    windows_targets: &windows_targets
      - "//..."
      - "//:third_party_examples_windows_tests"
      # TODO: Support all targets on windows
      - "-//cmake_android/..."
      # TODO: Fix `error C2118: negative subscript`
      - "-//cmake_defines/..."
      # TODO: Fix linker error
      - "-//cmake_synthetic/..."
      # TODO: Fix `error LNK2019: unresolved external symbol hello_func`
      - "-//cmake_hello_world_lib/shared/..."
      # TODO: Fix `CreateProcess failed: The system cannot find the file specified.`
      - "-//ninja_simple/..."
      # TODO: The use of Visual Studio generator targets are broken. These should
      # be re-enabled pending a resolution to
      # https://github.com/bazelbuild/continuous-integration/issues/1204
      - "-//cmake_hello_world_lib/static:libhello"
      - "-//cmake_hello_world_lib/static:libhello_example"
      - "-//cmake_hello_world_lib/static:test_hello"
      - "-//cmake_with_data/..."
    build_targets: *windows_targets
    test_targets: *windows_targets
    test_flags:
      - "--enable_runfiles"
  rbe_ubuntu1604_flags:
    name: Flags
    platform: rbe_ubuntu1604
    working_directory: test/standard_cxx_flags_test
    test_targets:
      - "//:flags_test"
  ubuntu2004_flags:
    name: Flags
    platform: ubuntu2004
    working_directory: test/standard_cxx_flags_test
    test_targets:
      - "//:flags_test"
  macos_flags:
    name: Flags
    platform: macos
    working_directory: test/standard_cxx_flags_test
    test_targets:
      - "//:flags_test"
  windows_flags:
    name: Flags
    platform: windows
    working_directory: test/standard_cxx_flags_test
    test_targets:
      - "//:flags_test"
  rbe_ubuntu1604_detect_root:
    name: Detect root
    platform: rbe_ubuntu1604
    working_directory: test/detect_root_test
    test_targets:
      - "//:tests"
  ubuntu2004_detect_root:
    name: Detect root
    platform: ubuntu2004
    working_directory: test/detect_root_test
    test_targets:
      - "//:tests"
  macos_detect_root:
    name: Detect root
    platform: macos
    working_directory: test/detect_root_test
    test_targets:
      - "//:tests"
  windows_detect_root:
    name: Detect root
    platform: windows
    working_directory: test/detect_root_test
    test_targets:
      - "//:tests"
  docs_linux:
    name: Docs
    platform: ubuntu2004
    working_directory: docs
    build_targets:
      - //...
  min_supported_version:
    name: "Minimum Supported Version"
    bazel: "4.0.0"
    platform: ubuntu1804
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  min_supported_version_examples:
    name: "Minimum Supported Version Examples"
    bazel: "4.0.0"
    platform: ubuntu1804
    working_directory: examples
    min_supported_targets: &min_supported_targets
      - "//..."
    build_targets: *min_supported_targets
    test_targets: *min_supported_targets

buildifier:
  version: "4.2.5" 
  # keep this argument in sync with .pre-commit-config.yaml
  warnings: "all"

jbeder_yaml-cpp,github-actions,-build:
jbeder_yaml-cpp,github-actions,build :all
jbeder_yaml-cpp,github-actions,test test
bazelbuild_rules_kotlin,github-actions,isk
bazelbuild_rules_kotlin,github-actions,isk@v1
bazelbuild_rules_kotlin,github-actions,cache
bazelbuild_rules_kotlin,github-actions,"
bazelbuild_rules_kotlin,github-actions,isk build //:rules_kotlin_release
bazelbuild_rules_kotlin,github-actions,-bin/rules_kotlin_release.tgz.sha256
bazelbuild_rules_kotlin,github-actions,-bin/rules_kotlin_release.tgz
bazelbuild_rules_kotlin,github-actions,-bin/rules_kotlin_release.tgz
bazelbuild_rules_kotlin,github-actions,-bin/rules_kotlin_release.tgz.sha256
bazelbuild_rules_kotlin,github-actions,-bin/rules_kotlin_release.tgz.sha256
bazelbuild_rules_kotlin,buildkite,---
validate_config: 1
bazel: 5.3.1
buildifier:
  version: 5.1.0
  # no lint warnings for the moment. They are basically a smoke alarm in hell.
  # keep this argument in sync with .pre-commit-config.yaml
  warnings: "-confusing-name,-constant-glob,-duplicated-name,-function-docstring,-function-docstring-args,-function-docstring-header,-module-docstring,-name-conventions,-no-effect,-constant-glob,-provider-params,-print,-rule-impl-return,-bzl-visibility,-unnamed-macro,-uninitialized,-unreachable"
tasks:
  ubuntu1804:
    test_targets:
      - "//:all_tests"
    build_targets:
      - "//:rules_kotlin_release"
  rbe_ubuntu1604:
    test_targets:
      - "--"
      - "//src/test/kotlin/io/bazel/kotlin/builder:builder_tests"
      # KotlinJvmDaggerExampleTest and KotlinJvmKaptAssertionTest are not remote
      # execution compatible, do not run them for now.
      - "//src/test/kotlin/io/bazel/kotlin:KotlinJvmAssociatesBasicVisibilityTest"
      - "//src/test/kotlin/io/bazel/kotlin:KotlinJvmBasicAssertionTest"
    test_flags:
      # Override the default worker strategy for remote builds (worker strategy
      # cannot be used with remote builds)
      - "--strategy=KotlinCompile=remote"
  macos:
    test_targets:
      - "//:all_tests"
  example-android:
    name: "Example - Android"
    platform: ubuntu1804
    working_directory: examples/android
    test_targets:
      - //...
  example-associates:
    name: "Example - Associates"
    platform: ubuntu1804
    working_directory: examples/associates
    test_targets:
      - //...
  example-anvil:
    name: "Example - Anvil"
    platform: ubuntu1804
    working_directory: examples/anvil
    test_targets:
      - //...
  example-plugins:
    name: "Example - Plugins"
    platform: ubuntu1804
    working_directory: examples/plugin
    test_targets:
      - //...
  examples-trivial-ubuntu1804:
    name: "Example - Trivial (Ubuntu 18.04)"
    platform: ubuntu1804
    working_directory: examples/trivial
    include_json_profile:
      - build
      - test
    build_targets:
      - //...
    test_targets:
      - //...
  examples-trivial-windows:
    name: "Example - Trivial (Windows)"
    platform: windows
    working_directory: examples/trivial
    include_json_profile:
      - build
      - test
    build_targets:
      - //...
    test_flags:
      - "--enable_runfiles"
    test_targets:
      - //...
  examples-dagger:
    name: "Example - Dagger"
    platform: ubuntu1804
    working_directory: examples/dagger
    include_json_profile:
      - build
      - test
    build_targets:
      - //...
  examples-nodejs:
    name: Example - Node
    platform: ubuntu1804
    working_directory: examples/node
    include_json_profile:
      - build
      - test
    build_targets:
      - //coroutines-helloworld/...
      - //express/...
  example-jetpack-compose:
    name: "Example - Jetpack Compose"
    platform: ubuntu1804
    working_directory: examples/jetpack_compose
    test_targets:
      - //...
  stardoc:
    name: Stardoc api documentation
    platform: ubuntu1804
    build_targets:
      - //kotlin:stardoc
  ktlint:
    name: KtLint
    platform: ubuntu1804
    test_targets:
      - //...
    test_flags:
      - "--test_tag_filters=ktlint"
      - "--test_output=errors"

chipsalliance_verible,github-actions,key: clang-tidy-${{ steps.cache_timestamp.outputs.time }}
chipsalliance_verible,github-actions,cache
chipsalliance_verible,github-actions,"
chipsalliance_verible,github-actions,cache_${{ matrix.mode }}_${{ steps.cache_timestamp.outputs.time }}
chipsalliance_verible,github-actions,cache_${{ matrix.mode }}_
chipsalliance_verible,github-actions,.sh
chipsalliance_verible,github-actions,-out/_coverage/_coverage_report.dat
chipsalliance_verible,github-actions,.sh
chipsalliance_verible,github-actions,cache
chipsalliance_verible,github-actions,_runner"
chipsalliance_verible,github-actions,cache_macos_${{ steps.cache_timestamp.outputs.time }}
chipsalliance_verible,github-actions,cache_macos_
chipsalliance_verible,github-actions,test --test_output=errors --cxxopt=-Wno-range-loop-analysis //...
chipsalliance_verible,github-actions,cache
chipsalliance_verible,github-actions,_runneradmin"
chipsalliance_verible,github-actions,cache_windows2_${{ steps.cache_timestamp.outputs.time }}
chipsalliance_verible,github-actions,cache_windows2_
chipsalliance_verible,github-actions,directory settings
chipsalliance_verible,github-actions,info
chipsalliance_verible,github-actions,test --test_output=errors //...
chipsalliance_verible,github-actions,build -c opt :install-binaries
chipsalliance_verible,github-actions,run -c opt :install -- "c:/verible-${VERSION}-win64"
chipsalliance_verible,github-actions,to let go of the filedescriptors in the
chipsalliance_verible,github-actions,run: |
chipsalliance_verible,github-actions,shutdown
chipsalliance_verible,github-actions,_runneradmin/*/install
chipsalliance_verible,github-actions,_runneradmin/*/java.log
emer_emergent,github-actions,:
emer_emergent,github-actions,action cache
emer_emergent,github-actions,"
emer_emergent,github-actions,- name: Mount bazel repo cache
emer_emergent,github-actions,-repo"
emer_emergent,github-actions,-repo
emer_emergent,github-actions,test //...
emer_emergent,github-actions,to here, ensure it is under .cache dir.
emer_emergent,github-actions,-repo
emer_emergent,github-actions,rc test //...
uber_ios-snapshot-test-case,github-actions,test runner
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
thought-machine_please,circleci,_compat/BUILD" }}
rabbitmq_rabbitmq-server,github-actions,index 62514c79af..5dc3169c75 100644
rabbitmq_rabbitmq-server,github-actions,+++ b/WORKSPACE.bazel
rabbitmq_rabbitmq-server,github-actions,-erlang",
rabbitmq_rabbitmq-server,github-actions,-erlang-1.4.0",
rabbitmq_rabbitmq-server,github-actions,-erlang/archive/refs/tags/1.4.0.zip"],
rabbitmq_rabbitmq-server,github-actions,-erlang//:ct_sharded.bzl", "ct_suite", "ct_suite_variant")
rabbitmq_rabbitmq-server,github-actions,index bbc541b766..9290f13053 100644
rabbitmq_rabbitmq-server,github-actions,+++ b/MODULE.bazel
rabbitmq_rabbitmq-server,github-actions,_dep(
rabbitmq_rabbitmq-server,github-actions,_dep(
rabbitmq_rabbitmq-server,github-actions,_dep(
rabbitmq_rabbitmq-server,github-actions,Cache
rabbitmq_rabbitmq-server,github-actions,run: |
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk info release
rabbitmq_rabbitmq-server,github-actions,isk build :package-generic-unix \
rabbitmq_rabbitmq-server,github-actions,-bin/package-generic-unix.tar.xz \
rabbitmq_rabbitmq-server,github-actions,Based Workflows
rabbitmq_rabbitmq-server,github-actions,/buildozer
rabbitmq_rabbitmq-server,github-actions,| buildozer 'print sha256' -:${{ matrix.name }})"
rabbitmq_rabbitmq-server,github-actions,| buildozer 'print version' -:${{ matrix.name }})"
rabbitmq_rabbitmq-server,github-actions,echo "$(cat MODULE.bazel | buildozer 'set version "${{ steps.fetch-version.outputs.VERSION }}"' -:${{ matrix.name }})" > MODULE.bazel
rabbitmq_rabbitmq-server,github-actions,Execution Logs
rabbitmq_rabbitmq-server,github-actions,label representing the test target'
rabbitmq_rabbitmq-server,github-actions,-cache-analysis
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk test ${{ github.event.inputs.target }} \
rabbitmq_rabbitmq-server,github-actions,-cache-analysis
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk test ${{ github.event.inputs.target }} \
rabbitmq_rabbitmq-server,github-actions,path: bazel
rabbitmq_rabbitmq-server,github-actions,"
rabbitmq_rabbitmq-server,github-actions,- name: BUILD EXECLOG PARSER
rabbitmq_rabbitmq-server,github-actions,run: |
rabbitmq_rabbitmq-server,github-actions,isk build src/tools/execlog:parser
rabbitmq_rabbitmq-server,github-actions,-bin/src/tools/execlog/parser \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,version
rabbitmq_rabbitmq-server,github-actions,'
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk info release
rabbitmq_rabbitmq-server,github-actions,isk test //... \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk test //... \
rabbitmq_rabbitmq-server,github-actions,Based Workflows
rabbitmq_rabbitmq-server,github-actions,/buildozer
rabbitmq_rabbitmq-server,github-actions,| buildozer 'print sha256' -:${{ matrix.name }})"
rabbitmq_rabbitmq-server,github-actions,| buildozer 'print version' -:${{ matrix.name }})"
rabbitmq_rabbitmq-server,github-actions,echo "$(cat MODULE.bazel | buildozer 'set version "${{ steps.fetch-version.outputs.VERSION }}"' -:${{ matrix.name }})" > MODULE.bazel
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,version
rabbitmq_rabbitmq-server,github-actions,'
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk test //... \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,query 'attr(tags, "mixed-version-cluster", attr(tags, "exclusive", tests(//...)))')
rabbitmq_rabbitmq-server,github-actions,isk test $MIXED_EXCLUSIVE_TESTS \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,/platforms:erlang_linux_git_master_platform
rabbitmq_rabbitmq-server,github-actions,isk info release
rabbitmq_rabbitmq-server,github-actions,isk test //... \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,version
rabbitmq_rabbitmq-server,github-actions,'
rabbitmq_rabbitmq-server,github-actions,Cache
rabbitmq_rabbitmq-server,github-actions,run: |
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk run packaging/docker-image:rabbitmq \
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk info release
rabbitmq_rabbitmq-server,github-actions,isk test //... ^
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,isk test //deps/rabbitmq_peer_discovery_aws:integration_SUITE \
rabbitmq_rabbitmq-server,github-actions,-bin/package-generic-unix.tar.xz
rabbitmq_rabbitmq-server,github-actions,:
rabbitmq_rabbitmq-server,github-actions,otp_version_id: 25_0
rabbitmq_rabbitmq-server,github-actions,otp_version_id: 25_1
rabbitmq_rabbitmq-server,github-actions,Cache
rabbitmq_rabbitmq-server,github-actions,run: |
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,rc
rabbitmq_rabbitmq-server,github-actions,_rules_docker//transitions:enable=false
rabbitmq_rabbitmq-server,github-actions,isk build :otp_version :elixir_version \
rabbitmq_rabbitmq-server,github-actions,/platforms:erlang_linux_${{ matrix.otp_version_id }}_platform
rabbitmq_rabbitmq-server,github-actions,-bin/otp_version.txt)" >> $GITHUB_OUTPUT
rabbitmq_rabbitmq-server,github-actions,-bin/elixir_version.txt)" >> $GITHUB_OUTPUT
rabbitmq_rabbitmq-server,github-actions,/buildozer
rabbitmq_rabbitmq-server,github-actions,isk build //packaging/docker-image:rabbitmq \
rabbitmq_rabbitmq-server,github-actions,query 'tests(//packaging/docker-image/...)')
rabbitmq_rabbitmq-server,github-actions,isk test ${OCI_TESTS} \
rabbitmq_rabbitmq-server,github-actions,isk run //packaging/docker-image:rabbitmq \
rabbitmq_rabbitmq-server,github-actions,/packaging/docker-image:rabbitmq \
rabbitmq_rabbitmq-server,github-actions,/packaging/docker-image:rabbitmq \
jpsim_SourceKitten,github-actions,on:
jpsim_SourceKitten,github-actions,isk info workspace)
jpsim_SourceKitten,github-actions,isk build sourcekitten
jpsim_SourceKitten,github-actions,run: go install github.com/bazelbuild/bazelisk@latest
jpsim_SourceKitten,github-actions,isk build sourcekitten
jesec_rtorrent,github-actions,:
jesec_rtorrent,github-actions,- run: sudo chmod +x /usr/local/bin/bazel
jesec_rtorrent,github-actions,coverage --instrument_test_targets --collect_code_coverage --combined_report=lcov --test_output=all //...
jesec_rtorrent,github-actions,-out/_coverage
jesec_rtorrent,github-actions,-clang:
jesec_rtorrent,github-actions,- run: sudo chmod +x /usr/local/bin/bazel
jesec_rtorrent,github-actions,test --config=clang -s //...
jesec_rtorrent,github-actions,build --config=clang -s rtorrent-deb
jesec_rtorrent,github-actions,-bin/rtorrent-deb.deb rtorrent.deb
jesec_rtorrent,github-actions,-clang
jesec_rtorrent,github-actions,| sed s/-jc+master/-jc-$release/ | sed s/100master/${release:1}/ > BUILD.versioned
jesec_rtorrent,github-actions,# - name: Set up QEMU
jesec_rtorrent,github-actions,| sed s/-jc+master/-jc+`date +%s`-`git rev-parse --short HEAD`/ | sed s/100master/`date +%s`.`git rev-parse --short HEAD`/ > BUILD.versioned
jesec_rtorrent,github-actions,# - name: Set up QEMU
jesec_rtorrent,github-actions,:
jesec_rtorrent,github-actions,- run: sudo chmod +x /usr/local/bin/bazel
jesec_rtorrent,github-actions,test -s //...
jesec_rtorrent,github-actions,build -s //...
jesec_rtorrent,github-actions,-bin/rtorrent rtorrent
jesec_rtorrent,github-actions,runs-on: macos-latest
grpc_grpc,github-actions,Tests
grpc_grpc,github-actions,-cache
grpc_grpc,github-actions,read/write caching
grpc_grpc,github-actions,read-only caching
grpc_grpc,github-actions,test --test_output=errors $BAZEL_CACHE $BAZEL_CACHE_AUTH ... ${{ matrix.flags }}
grpc_grpc,github-actions,/linux@sha256:05a41edee21f620445ca01c46b9d33be2e4d06c3d8adced4341ac5abea754baa
grpc_grpc,github-actions,-cache --google_default_credentials
grpc_grpc,github-actions,-bin/cmake/test_generated_files --fix
grpc_grpc,github-actions,build
grpc_grpc,github-actions,uses: actions/cache@v3
grpc_grpc,github-actions,-cache
grpc_grpc,github-actions,# formattedTime here is like 2021323 - the year concatenated with the week then
grpc_grpc,buildkite,# Configuration file for Bazel CI [1].
#
# Also testing on Bazel CI in addition of our normal CI workflow
# ensures that gRPC is tested against Bazel@HEAD and stays compatible
# with the latest release.
#
# See [2,3] in case you have questions.
#
# [1] https://github.com/bazelbuild/continuous-integration
# [2] https://github.com/grpc/grpc/issues/19171
# [3] https://github.com/grpc/grpc/pull/20784
---
# TODO(yannic): Ideally, we should also enable buildifier and all platforms should test `//...`.
tasks:
  ubuntu1804:
    build_targets:
      - //:all
      - //src/proto/...
      - //src/python/...
    test_targets:
      - //:all
      - //src/proto/...
      - //src/python/...

grpc_grpc,buildkite,---
tasks:
  ubuntu:
    platform: ubuntu1804
    shell_commands:
    - "sudo apt -y update && sudo apt -y install libreadline-dev cmake"
    test_targets:
    - //...
  macos:
    platform: macos
    test_targets:
    - //...

thesayyn_protoc-gen-ts,github-actions,rc
nanopb_nanopb,github-actions,on:
nanopb_nanopb,github-actions,cache
nanopb_nanopb,github-actions,"
nanopb_nanopb,github-actions,- name: Test
nanopb_nanopb,github-actions,isk test //...
nanopb_nanopb,github-actions,isk build //...
google_flatbuffers,buildkite,---
buildifier: latest
platforms:
  ubuntu1804:
    environment:
      CC: clang
      SWIFT_VERSION: "5.5.3"
      SWIFT_HOME: "$HOME/swift-$SWIFT_VERSION"
      PATH: "$PATH:$SWIFT_HOME/usr/bin"
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu1804/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu18.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  ubuntu2004:
    environment:
      CC: clang
      SWIFT_VERSION: "5.5.3"
      SWIFT_HOME: "$HOME/swift-$SWIFT_VERSION"
      PATH: "$PATH:$SWIFT_HOME/usr/bin"
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2004/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu20.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  macos:
    build_targets:
    - "//..."
    test_targets:
    - "//..."

batfish_batfish,github-actions,isk cache
batfish_batfish,github-actions,isk"
batfish_batfish,github-actions,version') }}
batfish_batfish,github-actions,cache
batfish_batfish,github-actions,"
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-${{ needs.get_date.outputs.ymd }}
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-
batfish_batfish,github-actions,-
batfish_batfish,github-actions,build //projects/allinone:allinone_main_deploy.jar
batfish_batfish,github-actions,-bin/projects/allinone/allinone_main_deploy.jar
batfish_batfish,github-actions,_build_test_and_pmd:
batfish_batfish,github-actions,isk cache
batfish_batfish,github-actions,isk"
batfish_batfish,github-actions,version') }}
batfish_batfish,github-actions,cache
batfish_batfish,github-actions,"
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-test-${{ needs.get_date.outputs.ymd }}
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-test-
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-
batfish_batfish,github-actions,-
batfish_batfish,github-actions,build and test
batfish_batfish,github-actions,test --test_output=errors --test_tag_filters=-pmd_test --build_tag_filters=-pmd_test -- //...
batfish_batfish,github-actions,test --test_output=errors --test_tag_filters=pmd_test -- //...
batfish_batfish,github-actions,build //projects/allinone:allinone_main_deploy.jar
batfish_batfish,github-actions,-bin/projects/allinone/allinone_main_deploy.jar workspace/allinone.jar
batfish_batfish,github-actions,isk cache
batfish_batfish,github-actions,isk"
batfish_batfish,github-actions,version') }}
batfish_batfish,github-actions,cache
batfish_batfish,github-actions,"
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-junit-${{ needs.get_date.outputs.ymd }}
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-junit-
batfish_batfish,github-actions,version', 'WORKSPACE', 'maven_install.json') }}-
batfish_batfish,github-actions,-
batfish_batfish,github-actions,Junit Tests and Coverage
batfish_batfish,github-actions,coverage //projects/... \
batfish_batfish,github-actions,-out/_coverage/_coverage_report.dat
martian-lang_martian,github-actions,:
martian-lang_martian,github-actions,variables
martian-lang_martian,github-actions,info
martian-lang_martian,github-actions,info repository_cache)" >> $GITHUB_ENV
martian-lang_martian,github-actions,info output_base)" >> $GITHUB_ENV
martian-lang_martian,github-actions,build of external repositories
martian-lang_martian,github-actions,_output_base }}/external
martian-lang_martian,github-actions,-build-cache-${{steps.setup_go.outputs.go-version}}-${{hashFiles('deps.bzl', 'WORKSPACE')}}
martian-lang_martian,github-actions,-build-cache-${{steps.setup_go.outputs.go-version}}
martian-lang_martian,github-actions,-build-cache-
martian-lang_martian,github-actions,external repositories
martian-lang_martian,github-actions,_repository_cache }}
martian-lang_martian,github-actions,-repo-cache-${{hashFiles('deps.bzl', 'WORKSPACE', 'web/martian/yarn.lock')}}
martian-lang_martian,github-actions,-repo-cache-
martian-lang_martian,github-actions,test --nobuild_tests_only \
martian-lang_martian,github-actions,_output_base }}/command.profile.gz
protocolbuffers_protobuf,github-actions,run: |
protocolbuffers_protobuf,github-actions,-5.3.2-linux-x86_64
protocolbuffers_protobuf,github-actions,- name: Install git
protocolbuffers_protobuf,github-actions,-bin/php/protobuf-*.tgz
protocolbuffers_protobuf,github-actions,build php:release
protocolbuffers_protobuf,github-actions,-bin/php/protobuf-*.tgz
eclipse-iceoryx_iceoryx,github-actions,sanity check
eclipse-iceoryx_iceoryx,github-actions,:
eclipse-iceoryx_iceoryx,github-actions,.sh
oppia_oppia-android,github-actions,_build_app:
oppia_oppia-android,github-actions,runs-on: ${{ matrix.os }}
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-binary-${{ github.sha }}
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,environment
oppia_oppia-android,github-actions,info
oppia_oppia-android,github-actions,build --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia
oppia_oppia-android,github-actions,build -- //:oppia
oppia_oppia-android,github-actions,build --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_kitkat
oppia_oppia-android,github-actions,build -- //:oppia_kitkat
oppia_oppia-android,github-actions,-bin/oppia.apk /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,-bin/oppia_kitkat.apk /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,.apk
oppia_oppia-android,github-actions,-kitkat.apk
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-binary-${{ github.sha }}
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,environment
oppia_oppia-android,github-actions,info
oppia_oppia-android,github-actions,build --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_dev
oppia_oppia-android,github-actions,build -- //:oppia_dev
oppia_oppia-android,github-actions,build --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_dev_kitkat
oppia_oppia-android,github-actions,build -- //:oppia_dev_kitkat
oppia_oppia-android,github-actions,-bin/oppia_dev.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,-bin/oppia_dev_kitkat.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-binary-${{ github.sha }}
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,environment
oppia_oppia-android,github-actions,info
oppia_oppia-android,github-actions,build --compilation_mode=opt --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_alpha
oppia_oppia-android,github-actions,build --compilation_mode=opt -- //:oppia_alpha
oppia_oppia-android,github-actions,build --compilation_mode=opt --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_alpha_kitkat
oppia_oppia-android,github-actions,build --compilation_mode=opt -- //:oppia_alpha_kitkat
oppia_oppia-android,github-actions,build --compilation_mode=opt --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_alpha_kenya
oppia_oppia-android,github-actions,build --compilation_mode=opt -- //:oppia_alpha_kenya
oppia_oppia-android,github-actions,-bin/oppia_alpha.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,-bin/oppia_alpha_kitkat.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,-bin/oppia_alpha_kenya.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-binary-${{ github.sha }}
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,environment
oppia_oppia-android,github-actions,info
oppia_oppia-android,github-actions,build --compilation_mode=opt --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_beta
oppia_oppia-android,github-actions,build --compilation_mode=opt -- //:oppia_beta
oppia_oppia-android,github-actions,-bin/oppia_beta.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-binary-${{ github.sha }}
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,environment
oppia_oppia-android,github-actions,info
oppia_oppia-android,github-actions,build --compilation_mode=opt --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- //:oppia_ga
oppia_oppia-android,github-actions,build --compilation_mode=opt -- //:oppia_ga
oppia_oppia-android,github-actions,-bin/oppia_ga.aab /home/runner/work/oppia-android/oppia-android/
oppia_oppia-android,github-actions,)
oppia_oppia-android,github-actions,_compute_affected_targets:
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-scripts-${{ github.sha }}
oppia_oppia-android,github-actions,-scripts-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,run //scripts:compute_affected_tests -- $(pwd) $(pwd)/affected_targets.log origin/develop compute_all_tests=$compute_all_targets
oppia_oppia-android,github-actions,_run_test:
oppia_oppia-android,github-actions,Test
oppia_oppia-android,github-actions,_compute_affected_targets
oppia_oppia-android,github-actions,_compute_affected_targets.outputs.have_tests_to_run == 'true' }}
oppia_oppia-android,github-actions,_compute_affected_targets.outputs.matrix) }}
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-scripts-${{ github.sha }}
oppia_oppia-android,github-actions,-scripts-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,-build-environment
oppia_oppia-android,github-actions,to use a local cache (for scripts)
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,_test_targets
oppia_oppia-android,github-actions,_test_targets)
oppia_oppia-android,github-actions,test targets: $BAZEL_TEST_TARGETS"
oppia_oppia-android,github-actions,can share the most recent cache from an unrelated build and still
oppia_oppia-android,github-actions,'s large cache size).
oppia_oppia-android,github-actions,-tests-${{ env.TEST_CACHING_BUCKET }}-${{ github.sha }}
oppia_oppia-android,github-actions,-tests-${{ env.TEST_CACHING_BUCKET }}-
oppia_oppia-android,github-actions,-tests-
oppia_oppia-android,github-actions,-binary-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache (for tests)
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,_build_app for how this is installed.
oppia_oppia-android,github-actions,build --keep_going --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- $BAZEL_TEST_TARGETS
oppia_oppia-android,github-actions,build --keep_going -- $BAZEL_TEST_TARGETS
oppia_oppia-android,github-actions,test --keep_going --remote_http_cache=$BAZEL_REMOTE_CACHE_URL --google_credentials=./config/oppia-dev-workflow-remote-cache-credentials.json -- $BAZEL_TEST_TARGETS
oppia_oppia-android,github-actions,test --keep_going -- $BAZEL_TEST_TARGETS
oppia_oppia-android,github-actions,Test Results
oppia_oppia-android,github-actions,_run_test]
oppia_oppia-android,github-actions,_run_test.result != 'success' }}
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,run //scripts:todo_issue_resolved_check -- $(pwd) ${{ github.event.issue.number }} ${{ github.sha }}
oppia_oppia-android,github-actions,run //scripts:todo_issue_comment_check -- $(pwd) latest_comment.txt script_failures.txt
oppia_oppia-android,github-actions,lint check
oppia_oppia-android,github-actions,_cache
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,-scripts-${{ github.sha }}
oppia_oppia-android,github-actions,-scripts-
oppia_oppia-android,github-actions,-
oppia_oppia-android,github-actions,'s unbounded cache growth doesn't result in a
oppia_oppia-android,github-actions,cache (rounded up to MBs): $CACHE_SIZE_MB"
oppia_oppia-android,github-actions,caches seem
oppia_oppia-android,github-actions,to use a local cache
oppia_oppia-android,github-actions,'s cache path"
oppia_oppia-android,github-actions,rc
oppia_oppia-android,github-actions,run //scripts:regex_pattern_validation_check -- $(pwd)
oppia_oppia-android,github-actions,run //scripts:xml_syntax_check -- $(pwd)
oppia_oppia-android,github-actions,run //scripts:test_file_check -- $(pwd)
oppia_oppia-android,github-actions,run //scripts:accessibility_label_check -- $(pwd) scripts/assets/accessibility_label_exemptions.pb app/src/main/AndroidManifest.xml
oppia_oppia-android,github-actions,run //scripts:kdoc_validity_check -- $(pwd) scripts/assets/kdoc_validity_exemptions.pb
oppia_oppia-android,github-actions,run //scripts:todo_open_check -- $(pwd) scripts/assets/todo_open_exemptions.pb open_issues.json
oppia_oppia-android,github-actions,run //scripts:string_resource_validation_check -- $(pwd)
oppia_oppia-android,github-actions,uses: abhinavsingh/setup-bazel@v3
oppia_oppia-android,github-actions,run @unpinned_maven//:pin
oppia_oppia-android,github-actions,run //scripts:maven_dependencies_list_check -- $(pwd) third_party/maven_install.json scripts/assets/maven_dependencies.pb
oppia_oppia-android,github-actions,run //scripts:license_texts_check -- $(pwd)/app/src/main/res/values/third_party_dependencies.xml
google_go-jsonnet,github-actions,:
google_go-jsonnet,github-actions,test
google_go-jsonnet,github-actions,~/.cache/bazelisk
google_go-jsonnet,github-actions,-cache
google_go-jsonnet,github-actions,build //...
google_go-jsonnet,github-actions,test //...
google_highway,github-actions,:
google_highway,github-actions,isk@v1
google_highway,github-actions,key: bazel-${{ runner.os }}
google_highway,github-actions,build //...
google_guice,github-actions,-test:
google_guice,github-actions,Test JDK ${{ matrix.java }}, ${{ matrix.os }}
google_guice,github-actions,-test
google_guice,github-actions,-build:
google_guice,github-actions,Build
google_guice,github-actions,-build
google_guice,github-actions,-build]
google_guice,github-actions,-build, local-artifact-tests]
scionproto_scion,buildkite,:"
scionproto_scion,buildkite,build --verbose_failures --announce_rc //:all
scionproto_scion,buildkite,run --verbose_failures //docker:prod //docker:test
scionproto_scion,buildkite,:"
scionproto_scion,buildkite,test --config=race --config=unit_all
scionproto_scion,buildkite,info output_base 2>/dev/null)/external/go_sdk/bin/go mod tidy
scionproto_scion,buildkite,-remote:
scionproto_scion,buildkite,-remote-cache
scionproto_scion,buildkite,-remote-cache:v2.3.3
bazelbuild_bazel-buildfarm,buildkite,---
buildifier: 4.2.5
tasks:

  # Linting jobs
  format_check:
    name: "Code Format"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/format.sh --check
  package_layout:
    name: "Package Layout"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/package_name_check.sh
  java_unused_deps_check:
    name: "Java Unused Dependencies"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/unused_deps.sh --check
  static_analysis_check:
    name: "Static Analysis"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/static_analyze.sh
  code_coverage:
    name: "Code Coverage"
    platform: ubuntu1804
    shell_commands:
    - export BUILDFARM_SKIP_COVERAGE_HOST=true
    - export BUILDFARM_GATE_LCOV_RESULTS=true
    - ./generate_coverage.sh

  # Typical unit tests that run across a variety of operating systems.
  ubuntu1604:
    name: "Unit Tests"
    build_targets:
    - "..."
    test_flags:
    - "--test_tag_filters=-integration,-redis"
    test_targets:
    - "..."
  ubuntu1804:
    name: "Unit Tests"
    build_targets:
    - "..."
    test_flags:
    - "--test_tag_filters=-integration,-redis"
    test_targets:
    - "..."
  macos:
    name: "Unit Tests"
    build_flags:
    - "--build_tag_filters=-container"
    build_targets:
    - "..."
    test_flags:
    - "--test_tag_filters=-integration,-redis"
    test_targets:
    - "..."
  windows:
    name: "Unit Tests"
    build_flags:
    - "--build_tag_filters=-container"
    build_targets:
    - "..."
    test_flags:
    - "--test_tag_filters=-integration,-redis"
    test_targets:
    - "..."
  rpm_builds:
    name: "Rpm Builds"
    platform: centos7
    shell_commands:
    - bazel build //src/main/java/build/buildfarm/rpms/server:buildfarm-server-rpm //src/main/java/build/buildfarm/rpms/worker:buildfarm-worker-rpm

  # This will run unit tests that integrate with redis.
  # Outside of this step, similar functionality may be tested with mocks.
  redis_unit_tests:
    name: "Redis Unit Tests"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/redis_unit_tests.sh

  # We want to run the unit tests again inside of a docker container.
  # This is because test cases may behave different while in docker due to user permissions.
  # This is more of a sanity check between a defined docker file and running tests directly on the host.
  docker_unit_tests:
    name: "Docker Unit Tests"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/docker_unit_test.sh

  # Run server integration tests.
  # It starts the distributed storage backend and buildfarm services.
  # It performs a realistic build on generated cc targets and gating projects.
  integration_test_server:
    name: "Server Integration Test"
    platform: ubuntu1804
    shell_commands:
      - ./.bazelci/run_server_test.sh

  # Test that buildfarm can build software using the default configurations.
  # It starts the distributed storage backend and buildfarm services.
  # It performs a realistic build on generated cc targets and gating projects.
  integration_test_many:
    name: "Integration Test"
    platform: ubuntu1804
    shell_commands:
    - export RUN_TEST=./.bazelci/run_generative_cc_many_test.sh
    - export EXECUTION_STAGE_WIDTH=5
    - ./.bazelci/integration_test.sh

  # Test that buildfarm can work with zstd compression
  compression_test_many_shard:
    name: "Integration Test (Shard/Compression)"
    platform: ubuntu1804
    shell_commands:
    - export RUN_TEST=./.bazelci/run_generative_cc_many_test.sh
    - export TEST_ARG1=--experimental_remote_cache_compression
    - export EXECUTION_STAGE_WIDTH=5
    - ./.bazelci/integration_test.sh

  # In the same way that clients will want to verify their cache hit rates / latencies.
  # We as service owners will want a way to verify that our cache hit rate is correct and
  # that latencies can be captured.
  cache_check_many:
    name: "Cache Check"
    platform: ubuntu1804
    shell_commands:
    - export CACHE_TEST=true
    - export RUN_TEST=./.bazelci/run_generative_cc_many_double_test.sh
    - export TEST_ARG1=--experimental_remote_grpc_log='./grpc.log'
    - export TEST_ARG2=--experimental_remote_grpc_log='./grpc2.log'
    - export SHA1_TOOLS_REMOTE=9969ed6911aea04f7e896cd3958ea933547f933c
    - export EXECUTION_STAGE_WIDTH=5
    - ./.bazelci/cache_test.sh

  integration_test_absei:
    name: "Abseil Test"
    platform: ubuntu1804
    shell_commands:
    - export RUN_TEST=./.bazelci/run_abseil_test.sh
    - export EXECUTION_STAGE_WIDTH=10
    - ./.bazelci/integration_test.sh
  integration_test_abseil_shard_compression:
    name: "Abseil Test (Shard/Compression)"
    platform: ubuntu1804
    shell_commands:
    - export RUN_TEST=./.bazelci/run_abseil_test.sh
    - export EXECUTION_STAGE_WIDTH=10
    - export TEST_ARG1=--experimental_remote_cache_compression
    - ./.bazelci/integration_test.sh

  buildfarm_admin_test:
    name: "BF Admin Test"
    platform: ubuntu1804
    shell_commands:
    - ./.bazelci/test_bfadmin.sh

bazelbuild_bazel-skylib,buildkite,---
tasks:
  ubuntu1804_latest:
    name: "Latest Bazel"
    platform: ubuntu1804
    bazel: latest
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  ubuntu1604_latest:
    name: "Latest Bazel"
    platform: ubuntu1604
    bazel: latest
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  macos_latest:
    name: "Latest Bazel"
    platform: macos
    bazel: latest
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  windows_latest:
    name: "Latest Bazel"
    platform: windows
    bazel: latest
    build_targets:
    - "//..."
    test_targets:
    - "--"
    - "//..."
    test_flags:
    # TODO(laszlocsomor): remove "--test_env=LOCALAPPDATA" after
    # https://github.com/bazelbuild/bazel/issues/7761 is fixed
    - "--test_env=LOCALAPPDATA"
    - "--test_tag_filters=-no_windows"

  ubuntu1804_last_green:
    name: "Last Green Bazel"
    platform: ubuntu1804
    bazel: last_green
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  ubuntu1604_last_green:
    name: "Last Green Bazel"
    platform: ubuntu1604
    bazel: last_green
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  macos_last_green:
    name: "Last Green Bazel"
    platform: macos
    bazel: last_green
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    test_flags:
    - "--test_env=PATH"

  windows_last_green:
    name: "Last Green Bazel"
    platform: windows
    bazel: last_green
    build_targets:
    - "//..."
    test_targets:
    - "--"
    - "//..."
    test_flags:
    # TODO(laszlocsomor): remove "--test_env=LOCALAPPDATA" after
    # https://github.com/bazelbuild/bazel/issues/7761 is fixed
    - "--test_env=LOCALAPPDATA"
    - "--test_tag_filters=-no_windows"

  ubuntu1804_last_green_bzlmod:
    name: "Last Green Bazel (with bzlmod)"
    platform: ubuntu1804
    bazel: last_green
    build_targets:
    - "//..."
    test_targets:
    - "//..."
    build_flags:
      - "--experimental_enable_bzlmod"
    test_flags:
      - "--experimental_enable_bzlmod"
      - "--test_env=PATH"

buildifier: latest

angular_components,github-actions,/setup-remote-execution.sh
angular_components,github-actions,from a low-resource Github action container,
angular_components,github-actions,to run more actions concurrently as by default
angular_components,github-actions,build //src/dev-app:web_package --symlink_prefix=dist/ --jobs=32
angular_components,circleci,version" }}-{{ checksum "tools/postinstall/apply-patches.js" }}-{{ checksum "WORKSPACE" }}-{{ checksum "yarn.lock" }}
angular_components,circleci,isk` cache folder will
angular_components,circleci,version" }}-{{ checksum "tools/postinstall/apply-patches.js" }}-
angular_components,circleci,repository cache.
angular_components,circleci,# repository cache in order to make subsequent builds faster.
angular_components,circleci,isk'
angular_components,circleci,_repository_cache'
angular_components,circleci,config which is specific for CircleCI builds.
angular_components,circleci,_ci_config
angular_components,circleci,configuration for CI'
angular_components,circleci,rc file that is not tracked
angular_components,circleci,rc.user
angular_components,circleci,remote execution. This will be used by jobs that run
angular_components,circleci,primarily and should benefit from remote caching and execution.
angular_components,circleci,_remote_execution
angular_components,circleci,-remote-exec:
angular_components,circleci,rc.user
angular_components,circleci,through Yarn and NodeJS
angular_components,circleci,child process only has access to limited memory.
angular_components,circleci,_binary
angular_components,circleci,binary'
angular_components,circleci,_binary.sh
angular_components,circleci,# -----------------------------------
angular_components,circleci,_build:
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,build --build_tag_filters=-docs-package,-release-package -- src/...
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,test tools/public_api_guard/...
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,will re-run a failed e2e test target
angular_components,circleci,-provided browsers (Chrome and Firefox headless).
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,test --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only -- src/...
angular_components,circleci,_ci_config
angular_components,circleci,_ci_config
angular_components,circleci,_ci_config
angular_components,circleci,_binary
angular_components,circleci,build //:package_externals
angular_components,circleci,-bin)/package_externals.json
angular_components,circleci,build //:entry_points_manifest
angular_components,circleci,-bin)/entry_points_manifest.json
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,tests that run Madge. This is
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,test --build_tag_filters=-e2e --test_tag_filters=-e2e --build_tests_only -- src/...
angular_components,circleci,integration tests.
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,_binary
angular_components,circleci,tests against material-components-web@canary
angular_components,circleci,_binary
angular_components,circleci,_ci_config
angular_components,circleci,_remote_execution
angular_components,circleci,test --build_tag_filters=-docs-package,-e2e --test_tag_filters=-e2e --build_tests_only -- src/...
angular_components,circleci,_build:
bazelbuild_rules_swift,buildkite,---
x_defaults:
  # YAML has a feature for "repeated nodes", BazelCI is fine with extra nodes
  # it doesn't know about; so that is used to avoid repeating common subparts.
  mac_common: &mac_common
    platform: macos
    build_targets:
      - "//examples/..."
    test_targets:
      - "//examples/..."
      - "//test/..."
  linux_common: &linux_common
    platform: ubuntu2004
    environment:
      CC: clang
      SWIFT_VERSION: "5.5.3"
      SWIFT_HOME: "$HOME/swift-$SWIFT_VERSION"
      PATH: "$PATH:$SWIFT_HOME/usr/bin"
    build_flags: &linux_flags
      # On Linux, we look for Swift toolchain binaries on the path. We may be
      # able to change this when we start auto-downloading toolchains (see
      # https://github.com/bazelbuild/rules_swift/issues/4).
      - "--action_env=PATH"
    build_targets:
      - "//examples/..."
      - "-//examples/apple/..."
      - "-//examples/xplatform/grpc/..." # TODO: Fix grpc on Linux
    test_flags: *linux_flags
    test_targets:
      - "//examples/..."
      - "//test/..."
      - "-//examples/apple/..."
      - "-//examples/xplatform/grpc/..." # TODO: Fix grpc on Linux
  windows_common: &windows_common
    platform: windows
    build_flags:
      # Override 'sandboxed' strategy set in .bazelrc because it's not
      # available on Windows
      - "--strategy=SwiftCompile="
    build_targets:
      - "//tools/..."

tasks:
  macos_latest:
    name: "Latest Bazel"
    bazel: latest
    <<: *mac_common

  macos_last_green:
    name: "Last Green Bazel"
    bazel: 45ca62c042f3679e60664b9ebe6d24239b390e1d
    <<: *mac_common

  macos_latest_head_deps:
    name: "Latest Bazel with Head Deps"
    bazel: latest
    shell_commands:
    # Update the WORKSPACE to use head versions of some deps to ensure nothing
    # has landed on them breaking this project.
    - .bazelci/update_workspace_to_deps_heads.sh
    <<: *mac_common

  ubuntu2004_latest:
    name: "Latest Bazel"
    bazel: latest
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2004/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu20.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
    <<: *linux_common

  ubuntu2004_last_green:
    name: "Last Green Bazel"
    bazel: 45ca62c042f3679e60664b9ebe6d24239b390e1d
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2004/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu20.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
    <<: *linux_common

  ubuntu2004_latest_head_deps:
    name: "Latest Bazel with Head Deps"
    bazel: latest
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2004/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu20.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
      # Update the WORKSPACE to use head versions of some deps to ensure nothing
      # has landed on them breaking this project.
      - .bazelci/update_workspace_to_deps_heads.sh
    <<: *linux_common

  windows_last_green:
    name: "Last Green Bazel"
    bazel: 45ca62c042f3679e60664b9ebe6d24239b390e1d
    <<: *windows_common

  doc_tests:
    name: "Doc tests"
    bazel: 45ca62c042f3679e60664b9ebe6d24239b390e1d
    platform: ubuntu2004
    test_targets:
    - "doc/..."

buildifier: latest

buildbuddy-io_buildbuddy,github-actions,build //website:website
buildbuddy-io_buildbuddy,github-actions,-bin/website/website.tar
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk-linux-amd64"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions," build --config=untrusted-ci //...
buildbuddy-io_buildbuddy,github-actions," test --config=untrusted-ci //...
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk-darwin-arm64"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions," build --config=release-m1 --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --define version=${{ steps.tag.outputs.TAG }} //enterprise/server/cmd/executor:executor
buildbuddy-io_buildbuddy,github-actions,-bin/enterprise/server/cmd/**/**/executor executor-enterprise-darwin-arm64
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk-darwin-amd64"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions," build --config=release --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --define version=${{ steps.tag.outputs.TAG }} //server/cmd/buildbuddy:buildbuddy //enterprise/server/cmd/server:buildbuddy //enterprise/server/cmd/executor:executor
buildbuddy-io_buildbuddy,github-actions,-bin/server/cmd/**/**/buildbuddy buildbuddy-darwin-amd64
buildbuddy-io_buildbuddy,github-actions,-bin/enterprise/server/cmd/**/**/buildbuddy buildbuddy-enterprise-darwin-amd64
buildbuddy-io_buildbuddy,github-actions,-bin/enterprise/server/cmd/**/**/executor executor-enterprise-darwin-amd64
buildbuddy-io_buildbuddy,github-actions,cache
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk-linux-amd64"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions," build \
buildbuddy-io_buildbuddy,github-actions," test \
buildbuddy-io_buildbuddy,github-actions,build //website:website
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk-linux-amd64"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions," build --config=release --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --define version=${{ steps.tag.outputs.TAG }} //server/cmd/buildbuddy:buildbuddy //enterprise/server/cmd/server:buildbuddy //enterprise/server/cmd/executor:executor
buildbuddy-io_buildbuddy,github-actions,-bin/server/cmd/**/**/buildbuddy buildbuddy-linux-amd64
buildbuddy-io_buildbuddy,github-actions,-bin/enterprise/server/cmd/**/**/buildbuddy buildbuddy-enterprise-linux-amd64
buildbuddy-io_buildbuddy,github-actions,-bin/enterprise/server/cmd/**/**/executor executor-enterprise-linux-amd64
buildbuddy-io_buildbuddy,github-actions,uses: actions/checkout@v3
buildbuddy-io_buildbuddy,github-actions,path: bazel-fork
buildbuddy-io_buildbuddy,github-actions,; then
buildbuddy-io_buildbuddy,github-actions,release ${{ steps.version.outputs.VERSION }} already exists."
buildbuddy-io_buildbuddy,github-actions,-fork"
buildbuddy-io_buildbuddy,github-actions,--title="$TAG" --draft --notes="Release version $TAG"
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,isk
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,"
buildbuddy-io_buildbuddy,github-actions,naming convention is "x86_64", not "amd64"
buildbuddy-io_buildbuddy,github-actions," build //cli/cmd/bb \
buildbuddy-io_buildbuddy,github-actions,-${VERSION}-${OS}-${ARCH}"
buildbuddy-io_buildbuddy,github-actions,-bin/cli/cmd/bb/bb_/bb "$BINARY"
buildbuddy-io_buildbuddy,github-actions,\
buildbuddy-io_buildbuddy,github-actions,build/buildtools/buildifier@3.4.0
buildbuddy-io_buildbuddy,github-actions,-gazelle/cmd/gazelle@v0.25.0
buildbuddy-io_buildbuddy,github-actions,-gazelle/cmd/gazelle@v0.23.0
larq_compute-engine,github-actions,run: LCE_SET_ANDROID_WORKSPACE=1 ANDROID_SDK_HOME="/tmp/lce_android" ANDROID_NDK_HOME="/tmp/lce_android/ndk/19.2.5345600" ./configure.py
larq_compute-engine,github-actions,isk build //larq_compute_engine/tflite/benchmark:lce_benchmark_model --config=aarch64 -c opt --copt=-O3
larq_compute-engine,github-actions,-bin/larq_compute_engine/tflite/benchmark/lce_benchmark_model benchmark-binaries/lce_benchmark_model_aarch64
larq_compute-engine,github-actions,isk build //larq_compute_engine/tflite/benchmark:lce_benchmark_model --config=rpi3 -c opt --copt=-O3
larq_compute-engine,github-actions,-bin/larq_compute_engine/tflite/benchmark/lce_benchmark_model benchmark-binaries/lce_benchmark_model_aarch32
larq_compute-engine,github-actions,isk build //larq_compute_engine/tflite/benchmark:lce_benchmark_model --config=android_arm64 -c opt --copt=-O3
larq_compute-engine,github-actions,-bin/larq_compute_engine/tflite/benchmark/lce_benchmark_model benchmark-binaries/lce_benchmark_model_android_arm64
larq_compute-engine,github-actions,run: LCE_SET_ANDROID_WORKSPACE=1 ANDROID_SDK_HOME="/tmp/lce_android" ANDROID_NDK_HOME="/tmp/lce_android/ndk/19.2.5345600" ./configure.py
larq_compute-engine,github-actions,isk ./larq_compute_engine/tflite/java/build_lce_aar.sh
larq_compute-engine,github-actions,_cache }}
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,isk build :build_pip_pkg --copt=-fvisibility=hidden --copt=-mavx --copt=-mmacosx-version-min=10.14 --linkopt=-mmacosx-version-min=10.14 --linkopt=-dead_strip --distinct_host_configuration=false
larq_compute-engine,github-actions,-bin/build_pip_pkg artifacts --plat-name macosx_10_14_x86_64
larq_compute-engine,github-actions,_cache }}
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,isk build :build_pip_pkg --copt=-fvisibility=hidden --copt=-mmacosx-version-min=11.0 --linkopt=-mmacosx-version-min=11.0 --linkopt=-dead_strip --config=macos_arm64
larq_compute-engine,github-actions,-bin/build_pip_pkg artifacts --plat-name macosx_11_0_arm64
larq_compute-engine,github-actions,_cache }}
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,_cache }}
larq_compute-engine,github-actions,-cache/lce-release-windows-python${{ matrix.python-version }} --google_default_credentials
larq_compute-engine,github-actions,-bin/build_pip_pkg wheelhouse
larq_compute-engine,github-actions,build/buildtools/releases/download/4.0.1/buildifier-linux-amd64
larq_compute-engine,github-actions,files
larq_compute-engine,github-actions,run: ./configure.py
larq_compute-engine,github-actions,isk test larq_compute_engine/tests:cc_tests --distinct_host_configuration=false --test_output=all
larq_compute-engine,github-actions,run: ./configure.py
larq_compute-engine,github-actions,isk test larq_compute_engine/tests:arm32_tests --config=rpi3 --test_output=all --test_filter="-*BigTest*" --copt=-O1
larq_compute-engine,github-actions,isk test larq_compute_engine/tests:aarch64_tests --config=aarch64 --test_output=all --test_filter="-*BigTest*"
larq_compute-engine,github-actions,isk build //larq_compute_engine/tflite/benchmark:lce_benchmark_model --config=aarch64 --compilation_mode=fastbuild
larq_compute-engine,github-actions,_cache }}
larq_compute-engine,github-actions,run: |
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,cache
larq_compute-engine,github-actions,rc.user
larq_compute-engine,github-actions,isk test larq_compute_engine/tflite/tests:interpreter_test --test_output=all
larq_compute-engine,github-actions,isk test larq_compute_engine/mlir/tests:all --test_output=all
larq_compute-engine,github-actions,isk test larq_compute_engine/tests:end2end_test --test_output=all
larq_compute-engine,github-actions,isk test larq_compute_engine/tests:strip_lcedequantize_test --test_output=all
larq_compute-engine,github-actions,run: LCE_SET_ANDROID_WORKSPACE=1 ANDROID_SDK_HOME="/tmp/lce_android" ANDROID_NDK_HOME="/tmp/lce_android/ndk/19.2.5345600" ./configure.py
larq_compute-engine,github-actions,isk ./larq_compute_engine/tflite/java/build_lce_aar.sh
google_brotli,github-actions,:root
google_brotli,github-actions,bazel_project: .
google_brotli,github-actions,:go
google_brotli,github-actions,bazel_project: go
google_brotli,github-actions,:java
google_brotli,github-actions,bazel_project: java
google_brotli,github-actions,:js
google_brotli,github-actions,bazel_project: js
google_brotli,github-actions,:research
google_brotli,github-actions,bazel_project: research
google_brotli,github-actions,-osx:root
google_brotli,github-actions,bazel_project: .
google_brotli,github-actions,-osx:go
google_brotli,github-actions,bazel_project: go
google_brotli,github-actions,-osx:java
google_brotli,github-actions,bazel_project: java
google_brotli,github-actions,-osx:js
google_brotli,github-actions,bazel_project: js
google_brotli,github-actions,-osx:research
google_brotli,github-actions,bazel_project: research
google_brotli,github-actions,-win:root
google_brotli,github-actions,bazel_project: .
google_brotli,github-actions,-win:go
google_brotli,github-actions,#  bazel_project: go
google_brotli,github-actions,-win:java
google_brotli,github-actions,bazel_project: java
google_brotli,github-actions,Closure rules issue
google_brotli,github-actions,-win:js
google_brotli,github-actions,#  bazel_project: js
google_brotli,github-actions,-win:research
google_brotli,github-actions,bazel_project: research
google_brotli,github-actions,, clang{10-12}, cmake, gcc{9,10}, java{8,11}, maven, python{2.7,3.5-3.9}
google_brotli,github-actions,if: ${{ matrix.build_system == 'bazel' }}
google_brotli,github-actions,_project }}
google_brotli,github-actions,build -c opt ...:all
google_brotli,github-actions,(Windows)
google_brotli,github-actions,_project == 'java' }}
google_brotli,github-actions,_project }}')
google_brotli,github-actions,-bin\\org\\brotli'):
google_brotli,github-actions,if: ${{ matrix.build_system == 'bazel' }}
google_brotli,github-actions,_project }}
google_brotli,github-actions,query "tests(...)" --output=label > ${RUNNER_TEMP}/tests.lst
google_brotli,github-actions,test -c opt ...:all
google_brotli,github-actions,clean
airyhq_airy,github-actions,isk
airyhq_airy,github-actions,isk-linux-amd64"
airyhq_airy,github-actions,"
airyhq_airy,github-actions,"
airyhq_airy,github-actions,rc
airyhq_airy,github-actions,cache secret
airyhq_airy,github-actions,rc
airyhq_airy,github-actions,test --test_tag_filters=-lint //...
airyhq_airy,github-actions,build //...
airyhq_airy,github-actions,run //lib/typescript/httpclient:publish-npm release
airyhq_airy,github-actions,run //frontend/chat-plugin/lib:publish-npm release
bazelbuild_rules_pkg,buildkite,common: &common
  working_directory: ../examples/naming_package_files
  build_targets:
  - "..."

tasks:
  centos7:
    platform: centos7
    <<: *common
  ubuntu1804:
    platform: ubuntu1804
    <<: *common
  macos:
    platform: macos
    <<: *common
  windows:
    platform: windows
    <<: *common
  bzlmod:
    name: bzlmod
    platform: ubuntu1804
    build_flags:
      - "--experimental_enable_bzlmod"
    <<: *common

bazelbuild_rules_pkg,buildkite,common: &common
  working_directory: ../examples/rich_structure
  build_targets:
  - "..."

tasks:
  centos7:
    platform: centos7
    <<: *common
  ubuntu1804:
    platform: ubuntu1804
    <<: *common
  macos:
    <<: *common
  windows:
    <<: *common

bazelbuild_rules_pkg,buildkite,lts: &lts
  bazel: latest

rolling: &rolling
  bazel: rolling


common: &common
  platform: ubuntu1804
  working_directory: /workdir
  build_targets:
  - "distro:*"

tasks:
  rolling_ubuntu:
    name: rolling_distro
    <<: *rolling
    <<: *common
  lts_ubuntu:
    name: lts_distro
    platform: ubuntu1804
    <<: *lts
    <<: *common

bazelbuild_rules_pkg,buildkite,
common: &common
  working_directory: ..

#
# Bazel releases
#
lts: &lts
  bazel: latest

rolling: &rolling
  bazel: rolling

#
# Groups of tests, by platform
#

# rpmbuild(8) is not available or installed on most platforms
default_tests: &default_tests
  test_targets:
    - "//distro/..."
    - "//pkg/..."
    - "//tests/..."
    - "//toolchains/..."
    - "-//tests/rpm/..."
    - "-//pkg/legacy/tests/rpm/..."

default_tests_with_rpm: &default_tests_with_rpm
  test_targets:
    - "//distro/..."
    - "//pkg/..."
    - "//tests/..."
    - "//toolchains/..."

win_tests: &win_tests
  test_targets:
    - "//pkg/..."
    - "//tests/..."
    - "//toolchains/..."
    - "-//tests:package_naming_aggregate_test"
    - "-//tests:path_test"
    # Bazel might be broken w.r.t. Unicode processing for windows. Multiple issues:
    # https://github.com/bazelbuild/bazel/issues?q=is%3Aissue+is%3Aopen+%2Bunicode+%2Bwindows+
    - "-//tests/mappings:utf8_manifest_test"
    - "-//tests/mappings/filter_directory/..."
    # See #387
    - "-//tests/install/..."
    # rpmbuild(8) is not supported on Windows
    - "-//tests/rpm/..."
    - "-//pkg/legacy/tests/rpm/..."

#
# Commmon features by platform
# 
ubuntu1804: &ubuntu
  platform: ubuntu1804
  <<: *common
  <<: *default_tests
  build_targets:
    - "//distro:distro"
    - "//distro:relnotes"
    - "//doc_build:*"

centos7: &centos
  platform: centos7
  <<: *common
  <<: *default_tests_with_rpm

macos: &macos
  platform: macos
  <<: *common
  <<: *default_tests

windows: &windows
  platform: windows
  <<: *common
  <<: *win_tests

#
# Finally, the cross product of bazel releases X platforms
#
tasks:
  rolling_ubuntu:
    name: rolling_ubuntu
    <<: *ubuntu
    <<: *rolling
  rolling_macos:
    name: rolling_macos
    <<: *macos
    # It seems there is no rolling Bazel for macos.
    bazel: last_green
  rolling_windows:
    name: rolling_windows
    <<: *windows
    <<: *rolling
  lts_centos:
    name: lts_centos
    <<: *centos
    <<: *lts
  lts_macos:
    name: lts_macos
    <<: *macos
    <<: *lts
  lts_ubuntu:
    name: lts_ubuntu
    <<: *ubuntu
    <<: *lts
  lts_windows:
    name: lts_windows
    <<: *windows
    <<: *lts

bazelbuild_rules_pkg,buildkite,common: &common
  working_directory: ../examples/time_stamping
  build_targets:
  - "..."

tasks:
  centos7:
    platform: centos7
    <<: *common
  ubuntu1804:
    platform: ubuntu1804
    <<: *common
  macos:
    <<: *common
  windows:
    <<: *common

bazelbuild_rules_pkg,buildkite,imports:
- tests.yml
- examples_naming.yml
- examples_rich_structure.yml
- examples_stamping.yml
- integration.yml

google_glog,buildkite,---
tasks:
  ubuntu1804:
    name: "Ubuntu 18.04"
    platform: ubuntu1804
    build_flags:
    - "--features=layering_check"
    - "--copt=-Werror"
    build_targets:
    - "//..."
    test_flags:
    - "--features=layering_check"
    - "--copt=-Werror"
    test_targets:
    - "//..."
  macos:
    name: "macOS: latest Xcode"
    platform: macos
    build_flags:
    - "--features=layering_check"
    - "--copt=-Werror"
    build_targets:
    - "//..."
    test_flags:
    - "--features=layering_check"
    - "--copt=-Werror"
    test_targets:
    - "//..."
  windows-msvc:
    name: "Windows: MSVC 2017"
    platform: windows
    environment:
      BAZEL_VC: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC"
    build_flags:
    - "--features=layering_check"
    - "--copt=/WX"
    build_targets:
    - "//..."
    test_flags:
    - "--features=layering_check"
    - "--copt=/WX"
    test_targets:
    - "//..."
  windows-clang-cl:
    name: "Windows: Clang"
    platform: windows
    environment:
      BAZEL_VC: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC"
    build_flags:
    - "--noincompatible_enable_cc_toolchain_resolution"
    - "--compiler=clang-cl"
    - "--features=layering_check"
    build_targets:
    - "//..."
    test_flags:
    - "--noincompatible_enable_cc_toolchain_resolution"
    - "--compiler=clang-cl"
    - "--features=layering_check"
    test_targets:
    - "//..."

bazelbuild_rules_nodejs,github-actions,build/rules_nodejs'
bazelbuild_rules_nodejs,github-actions,build/rules_nodejs'
bazelbuild_rules_nodejs,github-actions,build/rules_nodejs'
bazelbuild_rules_nodejs,buildkite,---
bazel: 5.0.0
# Note, this will tell the user to do the wrong thing (manually run buildifer)
# See https://github.com/bazelbuild/continuous-integration/issues/1161
buildifier:
  version: 4.0.1
  # Keep this in sync with the list in .pre-commit-config.yaml
  # https://github.com/bazelbuild/buildtools/issues/479 should fix this by giving us a config file
  warnings: "-bzl-visibility,-function-docstring-args,-function-docstring-return,-print,-unnamed-macro,-provider-params,-function-docstring-header,-no-effect,-uninitialized,-rule-impl-return"
  # Note, we ought to be able to exclude third_party from this check, but currently cannot:
  # https://github.com/bazelbuild/continuous-integration/issues/1162
tasks:
  ubuntu1804:
    name: ubuntu1804
    platform: ubuntu1804
    run_targets:
    - "@yarn//:yarn"
    # Regression test for #1493
    - "//packages/create:npm_package.pack"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/npm_install/test:index"
    # Disabled due to https://github.com/bazelbuild/rules_nodejs/issues/1486
    #- "@fine_grained_deps_yarn//typescript/bin:tsc"
    build_targets:
    - "//..."
    build_flags:
    # TODO(gregmagolan): figure out how to install missing shared libs
    # Without this filter the @cypress external repository will be built and that build will fail due to missing shared libs.
    - "--build_tag_filters=-cypress"
    test_flags:
    # Both chrome & firefox are missing shared libs on bazelci ubuntu.
    # On circleci we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_tag_filters=-e2e,-examples,-browser:chromium-local,-browser:firefox-local,-browser:custom_chrome,-cypress"
    test_targets:
    - "//..."
  ubuntu1804_debug:
    name: ubuntu1804_debug
    platform: ubuntu1804
    build_flags:
    # TODO(gregmagolan): figure out how to install missing shared libs
    # Without this filter the @cypress external repository will be built and that build will fail due to missing shared libs.
    - "--build_tag_filters=-cypress"
    test_flags:
    - "--compilation_mode=dbg"
    - "--define=VERBOSE_LOGS=1"
    # Both chrome & firefox are missing shared libs on bazelci ubuntu.
    # On circleci we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_tag_filters=-e2e,-examples,-browser:chromium-local,-browser:firefox-local,-browser:custom_chrome,-cypress"
    test_targets:
    - "//..."
  ubuntu1804_e2e:
    name: ubuntu1804_e2e
    platform: ubuntu1804
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=e2e,-cypress"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=e2e"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_ram_resources=13288"
    - "--test_arg=--local_cpu_resources=7"
    # Both chrome & firefox are missing shared libs on bazelci ubuntu.
    # On circleci we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_arg=--test_tag_filters=-browser:chromium-local,-browser:firefox-local,-cypress"
    test_targets:
    - "//..."
  ubuntu1804_examples:
    name: ubuntu1804_examples
    platform: ubuntu1804
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=examples,-cypress"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=examples,-cypress"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_ram_resources=13288"
    - "--test_arg=--local_cpu_resources=7"
    # Both chrome & firefox are missing shared libs on bazelci ubuntu.
    # On circleci we have the same issue but we can work around it using apt-get.
    # on bazelci apt-get fails with permission denied and there is no sudo
    # command to switch to root.
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_arg=--test_tag_filters=-browser:chromium-local,-browser:firefox-local,-cypress"
    - "--test_output=streamed"
    test_targets:
    - "//..."
  macos:
    name: macos
    platform: macos
    run_targets:
    - "@yarn//:yarn"
    # Regression test for #1493
    - "//packages/create:npm_package.pack"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/npm_install/test:index"
    # Disabled due to https://github.com/bazelbuild/rules_nodejs/issues/1486
    #- "@fine_grained_deps_yarn//typescript/bin:tsc"
    build_targets:
    - "//..."
    test_flags:
    # Firefox are missing shared libs on bazelci mac
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_tag_filters=-e2e,-examples,-browser:firefox-local"
    test_targets:
    - "//..."
  macos_e2e:
    name: macos_e2e
    platform: macos
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=e2e"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=e2e,-no-bazelci-mac"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    # TODO(gregmagolan): fix frequent flake with multiple cores in nested bazel (osx buildkite & local)
    - "--test_arg=--local_ram_resources=13288"
    # Firefox are missing shared libs on bazelci mac
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_arg=--test_tag_filters=-browser:firefox-local"
    test_targets:
    - "//..."
  macos_examples:
    name: macos_examples
    platform: macos
    # We need to reduce the memory & CPU usage of the top-level
    # bazel process for bazel-in-bazel tests to not
    # deplete the system memory completely.
    # - startup JVM memory reduced
    # - top-level bazel process should use as little memory as possible and only 1 core
    # - nested bazel process should use a limited number of cores
    shell_commands:
    - echo 'startup --host_jvm_args=-Xms256m --host_jvm_args=-Xmx1536m' >> .bazelrc
    build_flags:
    - "--build_tag_filters=examples"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=examples"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    # TODO(gregmagolan): fix frequent flake with multiple cores in nested bazel (osx buildkite & local)
    - "--test_arg=--local_ram_resources=13288"
    # Firefox are missing shared libs on bazelci mac
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_arg=--test_tag_filters=-no-bazelci-mac,-browser:firefox-local"
    test_targets:
    - "//..."
  # TODO(gregmagolan): fix platform configuraiton for this test job for Bazel 2.0
  # macos_fake_rbe:
  #   name: macos_fake_rbe
  #   platform: macos
  #   shell_commands:
  #   # Reproduce https://github.com/bazelbuild/rules_nodejs/issues/1305
  #   # TODO: switch to use real mac cross-platform RBE on CI when
  #   #       https://github.com/bazelbuild/continuous-integration/pull/749
  #   #       lands on bazelci master.
  #   - echo 'build --platforms=@rbe_default//config:platform' >> .bazelrc
  #   run_targets:
  #   - "//internal/node/test:no_deps"
  windows:
    name: windows
    platform: windows
    run_targets:
    - "@yarn//:yarn"
    - "//internal/node/test:no_deps"
    - "//internal/node/test:has_deps_legacy"
    - "//internal/node/test:has_deps"
    - "//internal/node/test:has_deps_hybrid"
    - "//internal/npm_install/test:index"
    # Disabled due to https://github.com/bazelbuild/rules_nodejs/issues/1486
    #- "@fine_grained_deps_yarn//typescript/bin:tsc"
    build_flags:
    - "--build_tag_filters=-e2e,-examples,-fix-windows,-no-bazelci-windows,-requires-runfiles"
    build_targets:
    - "//..."
    test_flags:
    # Firefox not supported on Windows with rules_webtesting (if run it exit with success)
    # See https://github.com/bazelbuild/rules_webtesting/blob/0.3.3/browsers/BUILD.bazel#L66.
    - "--test_tag_filters=-e2e,-examples,-fix-windows,-no-bazelci-windows,-requires-runfiles,-browser:firefox-local,-cypress"
    test_targets:
    - "//..."
  windows_runfiles_enabled:
    name: windows_runfiles_enabled
    platform: windows
    test_flags:
    - "--test_tag_filters=requires-runfiles,-fix-windows,-no-bazelci-windows"
    - "--enable_runfiles"
    test_targets:
    - "//..."
  windows_e2e:
    name: windows_e2e
    platform: windows
    build_flags:
    - "--build_tag_filters=e2e,-fix-windows,-no-bazelci-windows,-requires-runfiles"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=e2e,-fix-windows,-no-bazelci-windows,-requires-runfiles"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_ram_resources=13288"
    # Firefox not supported on Windows with rules_webtesting (if run it exit with success)
    # See https://github.com/bazelbuild/rules_webtesting/blob/0.3.3/browsers/BUILD.bazel#L66.
    # Chrome fails to launch on Windows inside bazel-in-bazel with: [17:12:04] E/launcher -
    # spawn D:\...\external\io_bazel_rules_webtesting\third_party\chromedriver\chromedriver.out\chromedriver_win32\chromedriver.exe ENOENT
    - "--test_arg=--test_tag_filters=-fix-windows,-no-bazelci-windows,-requires-runfiles,-browser:chromium-local,-browser:firefox-local"
    test_targets:
    - "//..."
  windows_examples:
    name: windows_examples
    platform: windows
    build_flags:
    - "--build_tag_filters=examples,-fix-windows,-no-bazelci-windows,-requires-runfiles"
    build_targets:
    - "//..."
    # We control Bazel version in integration tests, so we don't need USE_BAZEL_VERSION for tests.
    skip_use_bazel_version_for_test: true
    test_flags:
    - "--test_tag_filters=examples,-fix-windows,-no-bazelci-windows,-requires-runfiles,-cypress"
    - "--local_ram_resources=792"
    # test_args will be passed to the nested bazel process
    - "--test_arg=--local_ram_resources=13288"
    # Firefox not supported on Windows with rules_webtesting (if run it exit with success)
    # See https://github.com/bazelbuild/rules_webtesting/blob/0.3.3/browsers/BUILD.bazel#L66.
    # Chrome fails to launch on Windows inside bazel-in-bazel with: [17:12:04] E/launcher -
    # spawn D:\...\external\io_bazel_rules_webtesting\third_party\chromedriver\chromedriver.out\chromedriver_win32\chromedriver.exe ENOENT
    - "--test_arg=--test_tag_filters=-fix-windows,-no-bazelci-windows,-requires-runfiles,-browser:chromium-local,-browser:firefox-local,-cypress"
    test_targets:
    - "//..."
  rbe_ubuntu1604:
    name: rbe_ubuntu1604
    platform: rbe_ubuntu1604
    build_targets:
    - "//..."
    build_flags:
    # TODO(gregmagolan): figure out how to install missing shared libs
    # Without this filter the @cypress external repository will be built and that build will fail due to missing shared libs.
    - "--build_tag_filters=-cypress,-examples,-e2e,-no-rbe,-browser:chromium-local,-browser:firefox-local"
    test_flags:
    # TODO(gregmagolan): figure out how to install missing shared libs
    - "--test_tag_filters=-cypress,-examples,-e2e,-no-rbe,-browser:chromium-local,-browser:firefox-local"
    test_targets:
    - "//..."

google_googletest,github-actions,test --cxxopt=-std=c++14 --features=external_include_paths --test_output=errors ...
google_googletest,github-actions,test --cxxopt=-std=c++14 --features=external_include_paths --test_output=errors ...
google_googletest,github-actions,test --cxxopt=/std:c++14 --features=external_include_paths --test_output=errors ...
squzy_squzy,github-actions,run: |
squzy_squzy,github-actions,isk@latest
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_monitoring:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_agent_server:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_api:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_storage:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_application_monitoring:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_incident:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=${{ steps.set_env.outputs.RELEASE_VERSION }} //apps/squzy_notification:squzy_push_hub_ci
squzy_squzy,github-actions,run: |
squzy_squzy,github-actions,isk@latest
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_monitoring:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_agent_server:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_api:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_storage:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_application_monitoring:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_incident:squzy_push_hub_ci
squzy_squzy,github-actions,isk run --stamp --workspace_status_command=./scripts/status.sh --define version=latest //apps/squzy_notification:squzy_push_hub_ci
google_gvisor,buildkite,: ABSL build benchmarks"
google_gvisor,buildkite,_test BENCHMARKS_OPTIONS=-test.benchtime=1ns
google_gvisor,buildkite,_test BENCHMARKS_OPTIONS=-test.benchtime=1ns
thundergolfer_example-bazel-monorepo,buildkite,test //..."
thundergolfer_example-bazel-monorepo,buildkite,: Build + Test"
google_brunsli,github-actions,:c
google_brunsli,github-actions,bazel_project_root: .
google_brunsli,github-actions,:java
google_brunsli,github-actions,bazel_project_root: java
google_brunsli,github-actions,if: ${{ matrix.mode == 'bazel' }}
google_brunsli,github-actions,build -c opt ...:all
google_brunsli,github-actions,if: ${{ matrix.mode == 'bazel' }}
google_brunsli,github-actions,test -c opt ...:all
dropbox_dbx_build_tools,buildkite,---
buildifier:
  version: latest
  warnings: "default"
platforms:
  ubuntu1604:
    test_targets:
    - "//:tests"
  ubuntu1804:
    test_targets:
    - "//:tests"
  macos:
    test_targets:
    - "//:tests"
  windows:
    test_flags:
    - "--enable_runfiles"
    test_targets:
    - "--"
    - "//:tests"

google_schedviz,github-actions,build server
google_schedviz,github-actions,test //...
tensorflow_tensorboard,github-actions,version in sync with the `versions.check` directive
tensorflow_tensorboard,github-actions,'
tensorflow_tensorboard,github-actions,sudo mv ~/bazel /usr/local/bin/bazel
tensorflow_tensorboard,github-actions,cp ./ci/bazelrc ~/.bazelrc
tensorflow_tensorboard,github-actions,rc \
tensorflow_tensorboard,github-actions,: fetch'
tensorflow_tensorboard,github-actions,fetch //tensorboard/...
tensorflow_tensorboard,github-actions,: build'
tensorflow_tensorboard,github-actions,build //tensorboard/... |&\
tensorflow_tensorboard,github-actions,: test (with TensorFlow support)'
tensorflow_tensorboard,github-actions,test //tensorboard/...
tensorflow_tensorboard,github-actions,: test (non-TensorFlow only)'
tensorflow_tensorboard,github-actions,test //tensorboard/... --test_tag_filters="support_notf"
tensorflow_tensorboard,github-actions,: run Pip package test (with TensorFlow support)'
tensorflow_tensorboard,github-actions,run //tensorboard/pip_package:test_pip_package -- \
tensorflow_tensorboard,github-actions,: run Pip package test (non-TensorFlow only)'
tensorflow_tensorboard,github-actions,run //tensorboard/pip_package:test_pip_package -- \
tensorflow_tensorboard,github-actions,: run manual tests'
tensorflow_tensorboard,github-actions,test //tensorboard/compat/tensorflow_stub:gfile_s3_test &&
tensorflow_tensorboard,github-actions,test //tensorboard/summary/writer:event_file_writer_s3_test &&
tensorflow_tensorboard,github-actions,test //tensorboard/compat/tensorflow_stub:gfile_fsspec_test &&
tensorflow_tensorboard,github-actions,test //tensorboard/summary/writer:event_file_writer_fsspec_test
tensorflow_tensorboard,github-actions,: build Pip package (with TensorFlow only)'
tensorflow_tensorboard,github-actions,run //tensorboard/pip_package:build_pip_package -- /tmp/tb_nightly_pip_package
tensorflow_tensorboard,github-actions,//:index.bzl"' 'tensorboard/**/BUILD'
tensorflow_tensorboard,github-actions,build/buildtools/blob/master/buildozer/README.md#error-code
vaticle_biograkn,circleci,-linux-rbe:
vaticle_biograkn,circleci,-linux.sh
vaticle_biograkn,circleci,-linux.sh
vaticle_biograkn,circleci,-rbe.sh
vaticle_biograkn,circleci,-rbe.sh
vaticle_biograkn,circleci,-rbe:
vaticle_biograkn,circleci,-rbe -- << parameters.command >>
vaticle_biograkn,circleci,-rbe:
vaticle_biograkn,circleci,build @graknlabs_grakn_core//:assemble-linux-targz
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,run @graknlabs_build_tools//checkstyle:test-coverage
vaticle_biograkn,circleci,build //...
vaticle_biograkn,circleci,run @graknlabs_build_tools//unused_deps -- list
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,build @graknlabs_grakn_core//:assemble-linux-targz
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
vaticle_biograkn,circleci,test --test_output=streamed //migrator:assemble-mock-test
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,build @graknlabs_grakn_core//:assemble-mac-zip
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server start
vaticle_biograkn,circleci,test --test_output=streamed //migrator:assemble-mock-test
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server stop
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,test //migrator:assemble-all-test
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,build @graknlabs_grakn_core//:assemble-mac-zip
vaticle_biograkn,circleci,-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d dist/
vaticle_biograkn,circleci,run //migrator:migrator-bin TODO: uncomment
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,test //migrator:assemble-all-test
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,run @graknlabs_build_tools//ci:release-approval
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,run @graknlabs_build_tools//ci:release-validate-deps -- \
vaticle_biograkn,circleci,-linux-rbe
vaticle_biograkn,circleci,-linux-rbe
tweag_clodl,circleci,to clean up old items (LRU style):
tweag_clodl,circleci,.build/versions/master/remote-caching.html
tweag_clodl,circleci,/issues/5139
tweag_clodl,circleci,/
tweag_clodl,circleci,rc.local
tweag_clodl,circleci,build //...'
tweag_clodl,circleci,run clotestbin'
tweag_clodl,circleci,run clotestbin-cc'
tweag_clodl,circleci,run hello-java'
tweag_clodl,circleci,/
tweag_clodl,circleci,/
tweag_clodl,circleci,/
tweag_clodl,circleci,/
tweag_clodl,buildkite,rc.local
tweag_clodl,buildkite,build //...'
tweag_clodl,buildkite,run clotestbin'
tweag_clodl,buildkite,run clotestbin-cc'
tweag_clodl,buildkite,run hello-java'
tweag_clodl,buildkite,run //:buildifier-diff'
bazelbuild_buildtools,buildkite,---
buildifier:
  version: latest
  warnings: "default"
platforms:
  ubuntu1604:
    test_targets:
    - "//..."
  ubuntu1804:
    test_targets:
    - "//..."
  macos:
    test_targets:
    - "//..."
  windows:
    test_flags:
    - "--enable_runfiles"
    test_targets:
    - "--"
    - "//:tests"

bazelbuild_rules_docker,github-actions,_rules_docker",
bazelbuild_rules_docker,github-actions,isk-linux-amd64
bazelbuild_rules_docker,github-actions,isk
bazelbuild_rules_docker,github-actions,isk || exit 1
bazelbuild_rules_docker,github-actions,_rules_go//go/toolchain:${{ matrix.os }}_${{ matrix.cpu }} container/go/cmd/${{ matrix.application }}:${{ matrix.application }}
bazelbuild_rules_docker,github-actions,-bin/container/go/cmd/${{ matrix.application }}/${{ matrix.application }}_/${{ matrix.application }} | awk '{print $1}' > /tmp/output.sha256
bazelbuild_rules_docker,github-actions,-bin/container/go/cmd/${{ matrix.application }}/${{ matrix.application }}_/${{ matrix.application }}
bazelbuild_rules_docker,buildkite,---
buildifier:
  version: 4.0.1
  # Keep this argument in sync with .pre-commit-config.yml
  warnings: "-function-docstring-args,-print,-provider-params,-unnamed-macro"
bazel: 4.0.0
tasks:
  default_workspace_ubuntu2004:
    platform: ubuntu2004
    test_targets:
      - //...
    test_flags:
      - --config=buildkite
  default_workspace_macos:
    platform: macos
    test_targets:
      # Use "bazel query 'kind(".*_test", ...)'" to refresh this list.
      #
      # NOTE: per Philipp Wollermann, docker is not installed on the macos
      # buildkite runners due to security concerns.
      #
      # Tests excluded from macos
      - -//:structure_test_at_workspace_root
      - -//testing/new_pusher_tests:new_push_verify_pushed_configs_and_files
      - -//tests/container:alpine_amd64_image_test
      - -//tests/container:alpine_arm_image_test
      - -//tests/container:alpine_linux_amd64_image_oci_tar_test
      - -//tests/container:alpine_linux_amd64_image_oci_test
      - -//tests/container:alpine_linux_amd64_image_tar_test
      - -//tests/container:alpine_ppc64le_image_test
      - -//tests/container:base_with_cmd_and_entrypoint_test
      - -//tests/container:deb_image_with_dpkgs_test
      - -//tests/container:new_alpine_linux_armv6_image_oci_tar_test
      - -//tests/container:new_alpine_linux_armv6_image_oci_test
      - -//tests/container:new_alpine_linux_armv6_image_tar_digest_test
      - -//tests/container:new_alpine_linux_armv6_image_tar_digest_test_impl
      - -//tests/container:new_alpine_linux_armv6_image_tar_test
      - -//tests/container:new_alpine_linux_ppc64le_image_oci_go_join_layers_test
      - -//tests/container:new_alpine_linux_ppc64le_image_oci_tar_test
      - -//tests/container:new_alpine_linux_ppc64le_image_oci_test
      - -//tests/container:new_alpine_linux_ppc64le_image_tar_test
      - -//tests/container:new_distroless_base_oci_test_0_tar_gz
      - -//tests/container:new_distroless_base_oci_test_0_tar_gz_impl
      - -//tests/container:new_distroless_base_oci_test_config
      - -//tests/container:new_distroless_base_oci_test_config_impl
      - -//tests/container:null_cmd_and_entrypoint_empty_list_test
      - -//tests/container:null_cmd_and_entrypoint_empty_str_test
      - -//tests/container:null_cmd_and_entrypoint_none_test
      - -//tests/container:set_cmd_and_entrypoint_null_on_base_test
      - -//tests/container:set_cmd_and_entrypoint_test
      - -//tests/container:set_cmd_test
      - -//tests/container:set_entrypoint_test
      - -//tests/container:set_env_csv_test
      - -//tests/container:set_env_equals_test
      - -//tests/container:set_env_make_vars_test
      - -//tests/container:stripped_directory_name_test
      - -//tests/container:structure_test
      - -//tests/container/cc:cc_image_test
      - -//tests/container/go:go_image_test
      - -//tests/container/go:go_static_image_test
      - -//tests/container/groovy:groovy_image_test
      - -//tests/container/groovy:groovy_classpath_as_file_image_test
      - -//tests/container/java:java_image_test
      - -//tests/container/java:java_classpath_as_file_image_test
      - -//tests/container/java:java_partial_entrypoint_image_test
      - -//tests/container/java:java_runfiles_as_lib_image_test
      - -//tests/container/java:java_runfiles_image_test
      - -//tests/container/java:simple_java_entrypoint_image_test
      - -//tests/container/kotlin:kotlin_image_test
      - -//tests/container/kotlin:kotlin_classpath_as_file_image_test
      - -//tests/container/nodejs:nodejs_image_custom_binary_test
      - -//tests/container/nodejs:nodejs_image_custom_binary_with_args_test
      - -//tests/container/nodejs:nodejs_image_empty_list_args_test
      - -//tests/container/nodejs:nodejs_image_list_with_empty_string_args_test
      - -//tests/container/nodejs:nodejs_image_no_args_test
      - -//tests/container/nodejs:nodejs_image_none_args_test
      - -//tests/container/nodejs:nodejs_image_test
      - -//tests/container/python:py_image_test
      - -//tests/container/python3:py3_image_test
      - -//tests/container/rust:rust_image_test
      - -//tests/container/scala:scala_image_test
      - -//tests/container/scala:scala_classpath_as_file_image_test
      - -//tests/contrib:derivative_with_volume_repro_test
      - -//tests/contrib:random_file_img_non_repro_test
      - -//tests/contrib:rbe-test-xenial_repro_test
      - -//tests/contrib:set_cmd_repro_test
      - -//tests/contrib:test_compare_ids_test
      - -//tests/contrib:test_compare_ids_test_diff_ids_fails
      - -//tests/contrib:test_compare_ids_test_diff_ids_fails_no_regex
      - -//tests/contrib:test_compare_ids_test_invalid_tar_fails
      - -//tests/contrib:test_compare_ids_test_invalid_tar_fails_multi_regex
      - -//tests/contrib:test_compare_ids_test_no_images_with_id_fails
      - -//tests/contrib:test_compare_ids_test_one_tar_no_id_fails
      - -//tests/contrib:test_compare_ids_test_wrong_id_fails
      - -//tests/contrib:test_dockerfile_image_docker
      - -//tests/contrib/automatic_container_release:configs_test
      - -//tests/contrib/automatic_container_release:configs_test_deps_spec_only
      - -//tests/contrib/automatic_container_release:test_metadata_merge
      - -//tests/contrib/automatic_container_release:test_metadata_merge_impl
      - -//tests/contrib/automatic_container_release:test_packages_metadata
      - -//tests/contrib/automatic_container_release:test_packages_metadata_impl
      - -//tests/docker/package_managers:download_pkgs_run_test
      - -//tests/docker/package_managers:download_pkgs_with_additional_repos_run_test
      - -//tests/docker/package_managers:gpg_test
      - -//tests/docker/package_managers:install_pkgs_reproducibility_test
      - -//tests/docker/security:security_check_expect_cve_test
      - -//tests/docker/security:security_check_expect_cve_test_impl
      - -//tests/docker/security:security_check_test
      - -//tests/docker/security:security_check_test_impl
      - -//tests/docker/toolchain_container:test-rbe-test-xenial-with-pkgs
      - -//tests/docker/util:test_container_commit_layer_metadata
      - -//tests/docker/util:test_container_commit_metadata
      - -//tests/docker/util:test_extracted_file
      - -//tests/docker/util:test_extracted_file_impl
      # Tests included on macos
      - //container/go/pkg/compat:go_default_test
      - //container/go/pkg/oci:go_default_test
      - //docker/util:config_stripper_test
      - //docs:all
      - //tests/container:alpine_custom_attr_digest_test_impl
      - //tests/container:alpine_linux_armv6_tar_test_image_tar
      - //tests/container:alpine_linux_armv6_tar_test_image_tar_impl
      - //tests/container:architecture_test
      - //tests/container:basic_windows_image_test
      - //tests/container:build_tar_test
      - //tests/container:distroless_fixed_id_digest_test
      - //tests/container:distroless_fixed_id_digest_test_impl
      - //tests/container:distroless_fixed_id_image_digest_test
      - //tests/container:distroless_fixed_id_image_digest_test_impl
      - //tests/container:k8s_pause_arm64_digest_test
      - //tests/container:k8s_pause_arm64_digest_test_impl
      - //tests/container:pause_tar_test_0_tar_gz
      - //tests/container:pause_tar_test_0_tar_gz_impl
      - //tests/container:pause_tar_test_1_tar_gz
      - //tests/container:pause_tar_test_1_tar_gz_impl
      - //tests/container:pause_tar_test_config
      - //tests/container:pause_tar_test_config_impl
      - //tests/container:pull_info_validation_test
      - //tests/container:set_cmd_test_host
      - //tests/container:special_characters_test
      - //tests/contrib:rename_image_test
      - //tests/contrib:test_id_compare_ids_test
      - //tests/docker/package_managers:test_download_pkgs_docker_cp
      - //tests/docker/package_managers:test_download_pkgs_docker_cp_impl
      - //tests/docker/package_managers:test_download_pkgs_docker_run
      - //tests/docker/package_managers:test_download_pkgs_docker_run_impl
      - //tests/docker/package_managers:test_download_pkgs_rule
      - //tests/docker/package_managers:test_download_pkgs_rule_impl
      - //tests/docker/package_managers:test_install_pkgs_rule
      - //tests/docker/package_managers:test_install_pkgs_rule_impl
      - //tests/docker/util:test_container_commit_layer_rule
      - //tests/docker/util:test_container_commit_layer_rule_impl
      - //tests/docker/util:test_container_commit_rule
      - //tests/docker/util:test_container_commit_rule_impl
      - //tests/docker/util:test_container_extract_rule
      - //tests/docker/util:test_container_extract_rule_impl
      - //tests/docker/util:test_extract_script
      - //tests/docker/util:test_extract_script_impl
    test_flags:
      - --keep_going
      - --config=buildkite
  testing_examples:
    platform: ubuntu2004
    working_directory: testing/examples
    shell_commands:
      - cp ../../.bazelrc .
    test_targets:
      - //basic:all
      - //extended:all
      - //java_app:all
      - //run_instruction_apt_pkgs:all
      - //run_instruction_arbitrary:all
    test_flags:
      - --test_output=errors
  testing_java_image:
    platform: ubuntu2004
    working_directory: testing/java_image
    shell_commands:
      - cp ../../.bazelrc .
    build_targets:
      - //...
  testing_download_pkgs_at_root:
    platform: ubuntu2004
    working_directory: testing/download_pkgs_at_root
    shell_commands:
      - cp ../../.bazelrc .
    test_targets:
      - //...
    test_flags:
      - --test_output=errors
  testing_custom_toolchain_flags:
    platform: ubuntu2004
    working_directory: testing/custom_toolchain_flags
    shell_commands:
      - cp ../../.bazelrc .
    test_targets:
      - //...
    test_flags:
      - --test_output=errors

bazelbuild_rules_rust,github-actions,rc
bazelbuild_rules_rust,github-actions,rc
bazelbuild_rules_rust,github-actions,rc
bazelbuild_rules_rust,github-actions,binaries
bazelbuild_rules_rust,github-actions,${BAZEL_STARTUP_FLAGS[@]} run //crate_universe/tools/cross_installer -- --target=${TARGET} --output="${OUTPUT_PATH}"
bazelbuild_rules_rust,github-actions,${BAZEL_STARTUP_FLAGS[@]}  run //crate_universe/tools/urls_generator -- --artifacts-dir="${ARTIFACTS_DIR}" --url-prefix="${URL_PREFIX}"
bazelbuild_rules_rust,github-actions,clean
bazelbuild_rules_rust,github-actions,ARTIFACTS_DIR: ${{ github.workspace }}/crate_universe/target/artifacts
bazelbuild_rules_rust,github-actions,-aarch64-apple-darwin
bazelbuild_rules_rust,github-actions,asset_content_type: application/octet-stream
bazelbuild_rules_rust,github-actions,-aarch64-unknown-linux-gnu
bazelbuild_rules_rust,github-actions,asset_content_type: application/octet-stream
bazelbuild_rules_rust,github-actions,-x86_64-apple-darwin
bazelbuild_rules_rust,github-actions,asset_content_type: application/octet-stream
bazelbuild_rules_rust,github-actions,-x86_64-pc-windows-gnu.exe
bazelbuild_rules_rust,github-actions,.exe
bazelbuild_rules_rust,github-actions,-x86_64-pc-windows-msvc.exe
bazelbuild_rules_rust,github-actions,.exe
bazelbuild_rules_rust,github-actions,-x86_64-unknown-linux-gnu
bazelbuild_rules_rust,github-actions,asset_content_type: application/octet-stream
bazelbuild_rules_rust,github-actions,-x86_64-unknown-linux-musl
bazelbuild_rules_rust,github-actions,asset_content_type: application/octet-stream
bazelbuild_rules_rust,buildkite,---
aspects_flags: &aspects_flags
  - "--config=rustfmt"
  - "--config=clippy"
default_linux_targets: &default_linux_targets
  - "//..."
default_macos_targets: &default_macos_targets
  - "--"
  - "//..."
default_windows_targets: &default_windows_targets
  - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
  - "//..."
  - "-//bindgen/..."
  - "-//test/proto/..."
  - "-//test/unit/pipelined_compilation/..."
crate_universe_vendor_example_targets: &crate_universe_vendor_example_targets
  - "//vendor_external:crates_vendor"
  - "//vendor_local_manifests:crates_vendor"
  - "//vendor_local_pkgs:crates_vendor"
  - "//vendor_remote_manifests:crates_vendor_manifests"
  - "//vendor_remote_pkgs:crates_vendor_pkgs"
crate_universe_unnamed_vendor_example_targets: &crate_universe_unnamed_vendor_example_targets
  - "//vendor_remote_manifests:crates_vendor_manifests"
  - "//vendor_remote_pkgs:crates_vendor_pkgs"
tasks:
  ubuntu2004:
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    coverage_targets: *default_linux_targets
  rbe_ubuntu1604:
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    build_targets:
      - "//..."
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      - "//test/..."
      - "-//test/conflicting_deps:conflicting_deps_test"
      # TODO: This test does not work on RBE
      - "-//test/versioned_dylib:versioned_dylib_test"
  macos:
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    coverage_targets: *default_macos_targets
  windows:
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
  ubuntu2004_opt:
    name: Opt Mode
    platform: ubuntu2004
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags:
      - "--compilation_mode=opt"
  macos_opt:
    name: Opt Mode
    platform: macos
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    build_flags:
      - "--compilation_mode=opt"
  windows_opt:
    name: Opt Mode
    platform: windows
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
      - "--compilation_mode=opt"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
  ubuntu2004_with_aspects:
    name: With Aspects
    platform: ubuntu2004
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags: *aspects_flags
  rbe_ubuntu1604_with_aspects:
    name: With Aspects
    platform: rbe_ubuntu1604
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    build_targets: *default_linux_targets
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "..."
      - "//test/..."
      - "-//test/conflicting_deps:conflicting_deps_test"
      # TODO: This test does not work on RBE
      - "-//test/versioned_dylib:versioned_dylib_test"
    build_flags: *aspects_flags
  rbe_ubuntu1604_rolling_with_aspects:
    name: RBE Rolling Bazel Version With Aspects
    platform: rbe_ubuntu1604
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    build_targets: *default_linux_targets
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "..."
      - "//test/..."
      - "-//test/conflicting_deps:conflicting_deps_test"
      # TODO: This test does not work on RBE
      - "-//test/versioned_dylib:versioned_dylib_test"
    build_flags: *aspects_flags
    soft_fail: yes
    bazel: "rolling"
  macos_with_aspects:
    name: With Aspects
    platform: macos
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    build_flags: *aspects_flags
  macos_rolling_with_aspects:
    name: "Macos Rolling Bazel Version With Aspects"
    platform: macos
    build_targets: *default_macos_targets
    test_targets: *default_macos_targets
    build_flags: *aspects_flags
    soft_fail: yes
    bazel: "rolling"
  windows_with_aspects:
    name: With Aspects
    platform: windows
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
  windows_rolling_with_aspects:
    name: "Windows Rolling Bazel Version With Aspects"
    platform: windows
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    build_targets: *default_windows_targets
    test_targets: *default_windows_targets
    soft_fail: yes
    bazel: "rolling"
  ubuntu2004_clang:
    name: With Clang
    platform: ubuntu2004
    build_flags:
      - "--config=rustfmt"
      - "--config=clippy"
      - "--repo_env=CC=clang"
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  ubuntu2004_clang_lld:
    name: With Clang and LLD
    platform: ubuntu2004
    shell_commands:
      - "sudo apt -y update && sudo apt -y install lld"
    build_flags:
      - "--config=rustfmt"
      - "--config=clippy"
      - "--repo_env=CC=clang"
      - "--linkopt=-fuse-ld=lld"
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  ubuntu2004_rolling_clang:
    name: Rolling Bazel Version With Clang
    platform: ubuntu2004
    build_flags:
      - "--config=rustfmt"
      - "--config=clippy"
      - "--repo_env=CC=clang"
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    soft_fail: yes
    bazel: "rolling"
  ubuntu1804:
    name: "Min Bazel Version"
    # If updating the minimum bazel version, please also update /docs/index.md
    bazel: "5.0.0"
    platform: ubuntu1804
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
  ubuntu1804_with_aspects:
    name: "Min Bazel Version With Aspects"
    bazel: "5.0.0"
    platform: ubuntu1804
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags: *aspects_flags
  ubuntu2004_rolling_with_aspects:
    name: "Rolling Bazel Version With Aspects"
    bazel: "rolling"
    platform: ubuntu2004
    soft_fail: yes
    build_targets: *default_linux_targets
    test_targets: *default_linux_targets
    build_flags: *aspects_flags
  linux_docs:
    name: Docs
    platform: ubuntu2004
    working_directory: docs
    build_targets:
      - //...
    run_targets:
      - "//:test_docs"
  clippy_failure:
    name: Negative Clippy Tests
    platform: ubuntu2004
    run_targets:
      - "//test/clippy:clippy_failure_test"
  rustfmt_failure:
    name: Negative Rustfmt Tests
    platform: ubuntu2004
    run_targets:
      - "//test/rustfmt:test_runner"
  rust_analyzer_tests:
    name: Rust-Analyzer Tests
    platform: ubuntu2004
    run_targets:
      - "//test/rust_analyzer:rust_analyzer_test"
  ubuntu2004_examples:
    name: Examples
    platform: ubuntu2004
    working_directory: examples
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  ubuntu2004_examples_clang:
    name: Examples with Clang
    platform: ubuntu2004
    working_directory: examples
    build_flags:
      - "--repo_env=CC=clang"
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  ubuntu2004_examples_clang_lld:
    name: Examples with Clang and LLD
    platform: ubuntu2004
    shell_commands:
      - "sudo apt -y update && sudo apt -y install lld"
    working_directory: examples
    build_flags:
      - "--repo_env=CC=clang"
      - "--linkopt=-fuse-ld=lld"
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  ubuntu2004_examples_rolling:
    name: "Examples with Rolling Bazel Version"
    platform: ubuntu2004
    working_directory: examples
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
    soft_fail: yes
  rbe_ubuntu1604_examples:
    name: Examples
    platform: rbe_ubuntu1604
    working_directory: examples
    rbe_examples_targets: &rbe_examples_targets
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      # TODO: This requires an updated `rules_foreign_cc`
      - "-//sys/..."
      # See https://github.com/bazelbuild/bazel/issues/9987
      - "-//ffi/rust_calling_c:matrix_dylib_test"
      # The bindgen rules currently do not work on RBE
      # see: https://github.com/bazelbuild/rules_rust/issues/919
      - "-//bindgen/..."
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    build_targets: *rbe_examples_targets
    test_targets: *rbe_examples_targets
    build_flags: *aspects_flags
  macos_examples:
    name: Examples
    platform: macos
    working_directory: examples
    build_targets:
      - "//..."
    test_targets:
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
    build_flags: *aspects_flags
  windows_examples:
    name: Examples
    platform: windows
    working_directory: examples
    build_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
      - "--config=rustfmt"
      - "--config=clippy"
    windows_targets: &windows_targets
      - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
      - "//..."
      # The bindgen rules currently do not work on windows
      # see: https://github.com/bazelbuild/rules_rust/issues/919
      - "-//bindgen/..."
      # The proto rules do not work on windows
      - "-//proto/..."
      # The wasm rules do not work on windows
      - "-//wasm/..."
    build_targets: *windows_targets
    test_targets: *windows_targets
  crate_universe_examples_ubuntu2004:
    name: Crate Universe Examples
    platform: ubuntu2004
    working_directory: examples/crate_universe
    run_targets: *crate_universe_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_unnamed_examples_ubuntu2004:
    name: Crate Universe Unnamed Examples
    platform: ubuntu2004
    working_directory: examples/crate_universe_unnamed
    run_targets: *crate_universe_unnamed_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_rbe_ubuntu1604:
    name: Crate Universe Examples
    platform: rbe_ubuntu1604
    working_directory: examples/crate_universe
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    run_targets: *crate_universe_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_unnamed_rbe_ubuntu1604:
    name: Crate Universe Unnamed Examples
    platform: rbe_ubuntu1604
    working_directory: examples/crate_universe_unnamed
    shell_commands:
      - sed -i 's/^# load("@bazelci_rules/load("@bazelci_rules/' WORKSPACE.bazel
      - sed -i 's/^# rbe_preconfig/rbe_preconfig/' WORKSPACE.bazel
    run_targets: *crate_universe_unnamed_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_examples_macos:
    name: Crate Universe Examples
    platform: macos
    working_directory: examples/crate_universe
    run_targets: *crate_universe_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_unnamed_examples_macos:
    name: Crate Universe Unnamed Examples
    platform: macos
    working_directory: examples/crate_universe_unnamed
    run_targets: *crate_universe_unnamed_vendor_example_targets
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags: *aspects_flags
  crate_universe_examples_windows:
    name: Crate Universe Examples
    platform: windows
    working_directory: examples/crate_universe
    batch_commands:
      - echo startup --windows_enable_symlinks >> user.bazelrc
      - echo build --enable_runfiles >> user.bazelrc  # this is not enabled by default on windows and is necessary for the cargo build scripts
    run_targets: *crate_universe_vendor_example_targets
    build_flags: *aspects_flags
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  crate_universe_unnamed_examples_windows:
    name: Crate Universe Unnamed Examples
    platform: windows
    working_directory: examples/crate_universe_unnamed
    batch_commands:
      - echo startup --windows_enable_symlinks >> user.bazelrc
      - echo build --enable_runfiles >> user.bazelrc  # this is not enabled by default on windows and is necessary for the cargo build scripts
    run_targets: *crate_universe_unnamed_vendor_example_targets
    build_flags: *aspects_flags
    build_targets:
      - "//..."
    test_targets:
      - "//..."
  cc_common_link_ubuntu2004:
    name: Build via cc_common.link
    platform: ubuntu2004
    working_directory: test/cc_common_link
    build_targets:
      - "//..."
    test_targets:
      - "//..."
    build_flags:
      - "--@rules_rust//rust/settings:experimental_use_cc_common_link=True"
  android_examples_ubuntu2004:
    name: Android Examples
    platform: ubuntu2004
    working_directory: examples/android
    build_targets:
      - "//:android_app"
  android_examples_macos:
    name: Android Examples
    platform: macos
    working_directory: examples/android
    build_targets:
      - "//:android_app"
  ios_examples:
    name: iOS Examples
    platform: macos
    working_directory: examples/ios
    build_targets:
      - "//..."
  ios_build:
    name: iOS build script cross compile test
    platform: macos
    working_directory: examples/ios_build
    test_flags:
      - "--platforms=//:ios_x86_64"
    test_targets:
      - "//..."

buildifier:
  version: latest
  warnings: "all"

yuxiangw_autodp,github-actions,to build and test code.
yuxiangw_autodp,github-actions,build directory.
yuxiangw_autodp,github-actions,build results
yuxiangw_autodp,github-actions,-cache
yuxiangw_autodp,github-actions,key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.ref }}
yuxiangw_autodp,github-actions,build ...
yuxiangw_autodp,github-actions,test --test_output=errors ...
jbcoe_polymorphic_value,github-actions,test
jbcoe_polymorphic_value,github-actions,isk@v2
jbcoe_polymorphic_value,github-actions,cache # Optional
jbcoe_polymorphic_value,github-actions,"
jbcoe_polymorphic_value,github-actions,- run: bazel test //...
bazelbuild_rules_cc,buildkite,---
x_defaults:
  # YAML has a feature for "repeated nodes", BazelCI is fine with extra nodes
  # it doesn't know about; so that is used to avoid repeating common subparts.
  common: &common
    # We have to list every package because even with exclusion notation -//foo
    # Bazel will load the excluded package and it will be an error because at
    # release Bazel the cc_libraries do not have all the attributes.
    build_targets:
    - "//:all"
    - "//cc:all"
    - "//cc/private/rules_impl:all"
    - "//cc/private/toolchain:all"
    - "//examples:all"
    - "//examples/my_c_archive:all"
    - "//examples/my_c_compile:all"
    - "//examples/write_cc_toolchain_cpu:all"
    - "//tools/migration:all"
    - "//tools/runfiles:all"
    test_flags:
    - "--test_timeout=120"
    test_targets:
    - "//:all"
    - "//cc:all"
    - "//cc/private/rules_impl:all"
    - "//cc/private/toolchain:all"
    - "//examples:all"
    - "//examples/my_c_archive:all"
    - "//examples/my_c_compile:all"
    - "//examples/write_cc_toolchain_cpu:all"
    - "//tools/migration:all"
    - "//tools/runfiles:all"

buildifier:
  version: latest
  warnings: "all"

tasks:
  ubuntu1604:
    <<: *common
  ubuntu1804:
    <<: *common
  macos:
    <<: *common
  windows:
    <<: *common

rabbitmq_ra,github-actions,-bin/package-generic-unix.tar.xz
rabbitmq_ra,github-actions,Cache
rabbitmq_ra,github-actions,working-directory: rabbitmq-server
rabbitmq_ra,github-actions,rc
rabbitmq_ra,github-actions,rc
rabbitmq_ra,github-actions,isk build :otp_version --config=rbe-${{ matrix.otp_major }}
rabbitmq_ra,github-actions,-bin/otp_version.txt)"
rabbitmq_ra,github-actions,sed -i"_orig" -E '/APP_VERSION/ s/3\.[0-9]+\.[0-9]+/${{ steps.load-rabbitmq-info.outputs.RABBITMQ_SHA }}/' rabbitmq.bzl
rabbitmq_ra,github-actions,isk build :package-generic-unix \
rabbitmq_ra,github-actions,:
rabbitmq_ra,github-actions,isk test //... --config=rbe-${{ matrix.otp_major }}
kythe_kythe,buildkite,---
tasks:
  ubuntu_2004:
    platform: ubuntu2004
    shell_commands:
      - "sudo apt update && sudo apt -y install bison flex uuid-dev asciidoc graphviz source-highlight"
    build_targets:
      - "//kythe/..."
    test_targets:
      - "--"
      - "//kythe/..."

googleapis_gax-java,github-actions,:
googleapis_gax-java,github-actions,4.2 installed as of
googleapis_gax-java,github-actions,4.
googleapis_gax-java,github-actions,File Cache Setup
googleapis_gax-java,github-actions,uses: actions/cache@v3
googleapis_gax-java,github-actions,key: ${{ runner.os }}-bazel-20210105-${{ secrets.CACHE_VERSION }}
googleapis_gax-java,github-actions,Cache Not Found
googleapis_gax-java,github-actions,.outputs.cache-hit != 'true'
googleapis_gax-java,github-actions,Cache Found
googleapis_gax-java,github-actions,.outputs.cache-hit == 'true'
googleapis_gax-java,github-actions,echo "If the cache seems broken, update the CACHE_VERSION secret in"
googleapis_gax-java,github-actions,tests
googleapis_gax-java,github-actions,bazel --version
googleapis_gax-java,github-actions,--batch test //... --noshow_progress --test_output=errors
googleapis_gax-java,github-actions,-out/*/testlogs/*
bazelbuild_rules_python,github-actions,test //...
bazelbuild_rules_python,github-actions,to here
bazelbuild_rules_python,github-actions,-repo
bazelbuild_rules_python,github-actions,rc test //...
bazelbuild_rules_python,buildkite,---
buildifier:
  version: latest
  # keep this argument in sync with .pre-commit-config.yaml
  warnings: "all"
.reusable_config: &reusable_config
  build_targets:
    - "--"
    - "..."
    # As a regression test for #225, check that wheel targets still build when
    # their package path is qualified with the repo name.
    - "@rules_python//examples/wheel/..."
    - "-//gazelle/..."
  build_flags:
    - "--keep_going"
  test_targets:
    - "--"
    - "..."
    # The gazelle tests are not compatible with Windows, so we only test them
    # on Linux. The build file generation, which uses this Gazelle extension,
    # runs on all platforms, and is asserted by the build_file_generation
    # integration tests below.
    - "-//gazelle/..."
  test_flags:
    - "--test_tag_filters=-integration-test"
.reusable_build_test_all: &reusable_build_test_all
  build_targets: ["..."]
  test_targets: ["..."]
tasks:
  gazelle_extension:
    name: Test the Gazelle extension
    platform: ubuntu2004
    build_targets: ["//gazelle/..."]
    test_targets: ["//gazelle/..."]
  linux:
    <<: *reusable_config
    name: Default test on Linux
    platform: ubuntu2004
  macos:
    <<: *reusable_config
    name: Default test on macOS
    platform: macos
  windows:
    <<: *reusable_config
    name: Default test on Windows
    platform: windows
    test_flags:
      - "--test_tag_filters=-integration-test,-fix-windows"
  rbe:
    <<: *reusable_config
    name: Test on RBE
    platform: rbe_ubuntu1604
    test_flags:
      - "--test_tag_filters=-integration-test,-acceptance-test"

  integration_test_build_file_generation_linux:
    <<: *reusable_build_test_all
    name: build_file_generation integration tests on Linux
    working_directory: examples/build_file_generation
    platform: ubuntu2004
  integration_test_build_file_generation_macos:
    <<: *reusable_build_test_all
    name: build_file_generation integration tests on macOS
    working_directory: examples/build_file_generation
    platform: macos
  integration_test_build_file_generation_windows:
    <<: *reusable_build_test_all
    name: build_file_generation integration tests on Windows
    working_directory: examples/build_file_generation
    platform: windows

  integration_test_bzlmod_linux:
    <<: *reusable_build_test_all
    name: bzlmod integration tests on Linux
    working_directory: examples/bzlmod
    platform: ubuntu2004
  integration_test_bzlmod_macos:
    <<: *reusable_build_test_all
    name: bzlmod integration tests on macOS
    working_directory: examples/bzlmod
    platform: macos
  integration_test_bzlmod_windows:
    <<: *reusable_build_test_all
    name: bzlmod integration tests on Windows
    working_directory: examples/bzlmod
    platform: windows

  integration_test_pip_install_linux:
    <<: *reusable_build_test_all
    name: pip_install integration tests on Linux
    working_directory: examples/pip_install
    platform: ubuntu2004
  integration_test_pip_install_macos:
    <<: *reusable_build_test_all
    name: pip_install integration tests on macOS
    working_directory: examples/pip_install
    platform: macos
  integration_test_pip_install_windows:
    <<: *reusable_build_test_all
    name: pip_install integration tests on Windows
    working_directory: examples/pip_install
    platform: windows

  integration_test_pip_parse_linux:
    <<: *reusable_build_test_all
    name: pip_parse integration tests on Linux
    working_directory: examples/pip_parse
    platform: ubuntu2004
  integration_test_pip_parse_macos:
    <<: *reusable_build_test_all
    name: pip_parse integration tests on macOS
    working_directory: examples/pip_parse
    platform: macos
  integration_test_pip_parse_windows:
    <<: *reusable_build_test_all
    name: pip_parse integration tests on Windows
    working_directory: examples/pip_parse
    platform: windows

  integration_test_pip_parse_vendored_linux:
    <<: *reusable_build_test_all
    name: pip_parse_vendored integration tests on Linux
    working_directory: examples/pip_parse_vendored
    platform: ubuntu2004
  integration_test_pip_parse_vendored_macos:
    <<: *reusable_build_test_all
    name: pip_parse_vendored integration tests on macOS
    working_directory: examples/pip_parse_vendored
    platform: macos
  # TODO(f0rmiga): fix this test under Windows. It needs to be consistent on
  # characters across all platforms.
  # integration_test_pip_parse_vendored_windows:
  #   <<: *reusable_build_test_all
  #   name: pip_parse_vendored integration tests on Windows
  #   working_directory: examples/pip_parse_vendored
  #   platform: windows

  integration_test_pip_repository_annotations_linux:
    <<: *reusable_build_test_all
    name: pip_repository_annotations integration tests on Linux
    working_directory: examples/pip_repository_annotations
    platform: ubuntu2004
  integration_test_pip_repository_annotations_macos:
    <<: *reusable_build_test_all
    name: pip_repository_annotations integration tests on macOS
    working_directory: examples/pip_repository_annotations
    platform: macos
  integration_test_pip_repository_annotations_windows:
    <<: *reusable_build_test_all
    name: pip_repository_annotations integration tests on Windows
    working_directory: examples/pip_repository_annotations
    platform: windows

  integration_test_pip_repository_entry_points_linux:
    <<: *reusable_build_test_all
    name: pip_repository_entry_points integration tests on Linux
    working_directory: tests/pip_repository_entry_points
    platform: ubuntu2004
  integration_test_pip_repository_entry_points_macos:
    <<: *reusable_build_test_all
    name: pip_repository_entry_points integration tests on macOS
    working_directory: tests/pip_repository_entry_points
    platform: macos
  # TODO(f0rmiga): fix me. The dependencies needed for this test are not cross-platform:
  # https://github.com/bazelbuild/rules_python/issues/260
  # integration_test_pip_repository_entry_points_windows:
  #   <<: *reusable_build_test_all
  #   name: pip_repository_entry_points integration tests on Windows
  #   working_directory: tests/pip_repository_entry_points
  #   platform: windows

tweag_rules_haskell,github-actions,cache
tweag_rules_haskell,github-actions,rc.local <<EOF
tweag_rules_haskell,github-actions,version
tweag_rules_haskell,github-actions,-version
tweag_rules_haskell,github-actions,build //tests:run-tests
tweag_rules_haskell,github-actions,-ci-bin/tests/run-tests
tweag_rules_haskell,github-actions,coverage //...
tweag_rules_haskell,github-actions,build //docs:api_html
tweag_rules_haskell,github-actions,build //docs:guide_html
tweag_rules_haskell,github-actions,cache
tweag_rules_haskell,github-actions,rc.local <<EOF
tweag_rules_haskell,github-actions,rc.local
tweag_rules_haskell,github-actions,version
tweag_rules_haskell,github-actions,-version
tweag_rules_haskell,github-actions,build //... --platforms=//:linux_aarch64"
tweag_rules_haskell,github-actions,-ci-bin/example"
tweag_rules_haskell,github-actions,-ci-bin/example2"
tweag_rules_haskell,github-actions,cache
tweag_rules_haskell,github-actions,shell: bash
tweag_rules_haskell,github-actions,-bindist)"
tweag_rules_haskell,github-actions,- name: Configure
tweag_rules_haskell,github-actions,rc.local <<EOF
tweag_rules_haskell,github-actions,:$PATH
tweag_rules_haskell,github-actions,test ///...
tweag_rules_haskell,github-actions,test //...
tweag_rules_haskell,github-actions,run @stackage-pinning-test-unpinned//:pin
tweag_rules_haskell,github-actions,build @stackage-pinning-test//:hspec
tweag_rules_haskell,github-actions,cache
tweag_rules_haskell,github-actions,shell: bash
tweag_rules_haskell,github-actions,-bindist)"
tweag_rules_haskell,github-actions,- name: Configure
tweag_rules_haskell,github-actions,rc.local <<EOF
tweag_rules_haskell,github-actions,:$PATH
tweag_rules_haskell,buildkite,---
tasks:
  ubuntu1804:
    environment:
      # haskell base uses the environment locale to decode sockets
      LANG: "C.UTF-8"
    shell_commands:
      - "sudo apt -y update && sudo apt -y install libgmp-dev"
    build_flags:
      - "--config=ci-common"
      - "--build_tag_filters=-requires_nix,-requires_lz4,-requires_shellcheck,-requires_threaded_rts,-dont_test_with_bindist,-dont_test_on_bazelci,-integration"
    build_targets:
      - "//tests/..."
    test_flags:
      - "--config=ci-common"
      - "--test_tag_filters=-requires_nix,-requires_lz4,-requires_shellcheck,-requires_threaded_rts,-dont_test_with_bindist,-dont_test_on_bazelci,-integration"
    test_targets:
      - "//tests/..."

jupp0r_prometheus-cpp,github-actions,CI
jupp0r_prometheus-cpp,github-actions,on ${{ matrix.os }}
jupp0r_prometheus-cpp,github-actions,_args: "--cxxopt=-std=c++14"
jupp0r_prometheus-cpp,github-actions,_args: "--cxxopt=-std=c++14"
jupp0r_prometheus-cpp,github-actions,_args: "--cxxopt=/std:c++14"
jupp0r_prometheus-cpp,github-actions,_args }} //...
jupp0r_prometheus-cpp,github-actions,_args }} --test_output=all //...
jupp0r_prometheus-cpp,github-actions,_args }} //...
jupp0r_prometheus-cpp,github-actions,_args }} --test_output=all //...
jupp0r_prometheus-cpp,github-actions,_args }} --test_output=all //pull/tests/integration:scrape-test
jupp0r_prometheus-cpp,github-actions,_args }} -c opt //core/benchmarks
aspect-build_rules_js,github-actions,version:
aspect-build_rules_js,github-actions,version' axis of the test matrix
aspect-build_rules_js,github-actions,_6
aspect-build_rules_js,github-actions,version)" >> $GITHUB_OUTPUT
aspect-build_rules_js,github-actions,_5
aspect-build_rules_js,github-actions,version=5.3.2" >> $GITHUB_OUTPUT
aspect-build_rules_js,github-actions,version) }}
aspect-build_rules_js,github-actions,version
aspect-build_rules_js,github-actions,versions) }}
aspect-build_rules_js,github-actions,5 (not supported)
aspect-build_rules_js,github-actions,version: 5.3.2
aspect-build_rules_js,github-actions,5 (not supported)
aspect-build_rules_js,github-actions,version: 5.3.2
aspect-build_rules_js,github-actions,caches
aspect-build_rules_js,github-actions,~/.cache/bazel-repo
aspect-build_rules_js,github-actions,', '**/*.bzl', 'WORKSPACE', '**/*.js') }}
aspect-build_rules_js,github-actions,-cache-
aspect-build_rules_js,github-actions,version
aspect-build_rules_js,github-actions,version }}" >> $GITHUB_ENV
aspect-build_rules_js,github-actions,to here
aspect-build_rules_js,github-actions,-repo
aspect-build_rules_js,github-actions,test //...
aspect-build_rules_js,github-actions,rc test --config=${{ matrix.config }}  //...
aspect-build_rules_js,github-actions,info output_base)/external | grep -v __links | grep -vz unused
aspect-build_rules_js,github-actions,to here
aspect-build_rules_js,github-actions,-repo
aspect-build_rules_js,github-actions,coverage //...
aspect-build_rules_js,github-actions,#4685.
aspect-build_rules_js,github-actions,because write_source_files is not yet bzlmod compatible.
aspect-build_rules_js,github-actions,rc coverage --config=${{ matrix.config }} --instrument_test_targets //...
aspect-build_rules_js,github-actions,to here
aspect-build_rules_js,github-actions,-repo
aspect-build_rules_js,github-actions,caches
aspect-build_rules_js,github-actions,"
aspect-build_rules_js,github-actions,-repo"
aspect-build_rules_js,github-actions,', '**/*.bzl', 'WORKSPACE', '**/*.js') }}
aspect-build_rules_js,github-actions,-cache-
aspect-build_rules_js,github-actions,test //...
aspect-build_rules_js,github-actions,to here
aspect-build_rules_js,github-actions,-repo
aspect-build_rules_js,github-actions,rc test //...
vaticle_typedb,circleci,-linux:
vaticle_typedb,circleci,install/linux.sh
vaticle_typedb,circleci,install/rbe.sh
vaticle_typedb,circleci,-mac:
vaticle_typedb,circleci,install/mac.sh
vaticle_typedb,circleci,:
vaticle_typedb,circleci,run:rbe -- << parameters.command >>
vaticle_typedb,circleci,-mac
vaticle_typedb,circleci,:
vaticle_typedb,circleci,test //test/assembly:assembly --test_output=errors
bazelbuild_rules_jvm_external,buildkite,---
tasks:
  simple-linux:
    name: "Simple example"
    platform: ubuntu1804
    working_directory: examples/simple
    shell_command: 
      - "bazel run @maven//:pin"
    build_targets:
      - "//..."
  simple-macos:
    name: "Simple example"
    platform: macos
    working_directory: examples/simple
    shell_command: 
      - "bazel run @maven//:pin"
    build_targets:
      - "//..."
  simple-windows:
    name: "Simple example"
    platform: windows
    working_directory: examples/simple
    build_targets:
      - "//..."
  pom-file-generation-linux:
    name: "POM file generation example"
    platform: ubuntu1804
    working_directory: examples/pom_file_generation
    build_targets:
      - "//..."
  pom-file-generation-macos:
    name: "POM file generation example"
    platform: macos
    working_directory: examples/pom_file_generation
    build_targets:
      - "//..."
  pom-file-generation-windows:
    name: "POM file generation example"
    platform: windows
    working_directory: examples/pom_file_generation
    build_targets:
      - "//..."
  android-instrumentation-test-macos:
    name: "Android instrumentation test example"
    platform: macos
    working_directory: examples/android_instrumentation_test
    # Android instrumentation tests don't work on macOS yet.
    build_targets:
      - "//src/main:greeter_app"
      - "//src/test:greeter_test_app"
  android-instrumentation-test-windows:
    name: "Android instrumentation test example"
    platform: windows
    working_directory: examples/android_instrumentation_test
    # Android instrumentation tests don't work on Windows yet.
    build_targets:
      - "//src/main:greeter_app"
      - "//src/test:greeter_test_app"
  android-local-test-linux:
    name: "Android Robolectric test example"
    platform: ubuntu1804
    working_directory: examples/android_local_test
    test_targets:
      - "//..."
  android-local-test-macos:
    name: "Android Robolectric test example"
    platform: macos
    working_directory: examples/android_local_test
    test_targets:
      - "//..."
  android-local-test-windows:
    name: "Android Robolectric test example"
    platform: windows
    working_directory: examples/android_local_test
    # Testing Robolectric targets don't work on Windows yet.
    # See https://github.com/bazelbuild/bazel/issues/7809
    build_targets:
      - "//..."
  kotlin-android-local-test-linux:
    name: "Kotlin Android Robolectric test example"
    platform: ubuntu1804
    working_directory: examples/kt_android_local_test
    test_targets:
      - "//..."
  kotlin-android-local-test-macos:
    name: "Kotlin Android Robolectric test example"
    platform: macos
    working_directory: examples/kt_android_local_test
    test_targets:
      - "//..."
  kotlin-android-local-test-windows:
    name: "Kotlin Android Robolectric test example"
    platform: windows
    working_directory: examples/kt_android_local_test
    # Testing Robolectric targets don't work on Windows yet.
    # See https://github.com/bazelbuild/bazel/issues/7809
    build_targets:
      - "//..."
  android-kotlin-linux:
    name: "Android Kotlin example"
    platform: ubuntu1804
    working_directory: examples/android_kotlin_app
    build_targets:
    - "//:app"
  android-kotlin-macos:
    name: "Android Kotlin example"
    platform: macos
    working_directory: examples/android_kotlin_app
    build_targets:
    - "//:app"
  android-kotlin-windows:
    name: "Android Kotlin example"
    platform: windows
    working_directory: examples/android_kotlin_app
    build_targets:
    - "//:app"
  spring-boot-linux:
    name: "Spring boot example"
    platform: ubuntu1804
    working_directory: examples/spring_boot
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  spring-boot-macos:
    name: "Spring boot example"
    platform: macos
    working_directory: examples/spring_boot
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  spring-boot-windows:
    name: "Spring boot example"
    platform: windows
    working_directory: examples/spring_boot
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  scala-akka-linux:
    name: "Scala example"
    platform: ubuntu1804
    working_directory: examples/scala_akka
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  scala-akka-macos:
    name: "Scala example"
    platform: macos
    working_directory: examples/scala_akka
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  scala-akka-windows:
    name: "Scala example"
    platform: windows
    working_directory: examples/scala_akka
    build_targets:
    - "//..."
    # test_targets:
    # https://github.com/bazelbuild/rules_jvm_external/issues/103
    # - "//..."
  protobuf-java-linux:
    name: "Protobuf Java example"
    platform: ubuntu1804
    working_directory: examples/protobuf-java
    test_targets:
      - "//..."
  protobuf-java-macos:
    name: "Protobuf Java example"
    platform: macos
    working_directory: examples/protobuf-java
    test_targets:
      - "//..."
  protobuf-java-windows:
    name: "Protobuf Java example"
    platform: windows 
    working_directory: examples/protobuf-java
    # //src/test:diff_json_test / diff_test does not ignore line endings
    # correctly on Windows.
    build_targets:
      - "//..."
  bzlmod-linux:
    name: "bzlmod example"
    platform: ubuntu1804
    working_directory: examples/bzlmod
    build_targets:
      - "//..."
  bzlmod-macos:
    name: "bzlmod example"
    platform: macos
    working_directory: examples/bzlmod
    build_targets:
      - "//..."
  bzlmod-windows:
    name: "bzlmod example"
    platform: windows
    working_directory: examples/bzlmod
    build_targets:
      - "//..."

bazelbuild_rules_jvm_external,buildkite,---
tasks:
  ubuntu1804:
    environment:
      # This tests custom cache locations.
      # https://github.com/bazelbuild/rules_jvm_external/pull/316
      COURSIER_CACHE: /tmp/custom_coursier_cache
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - bazel run @duplicate_artifacts_test//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "//..."
      # manual tests
      # TODO: Re-enable after fixing https://github.com/bazelbuild/rules_jvm_external/issues/375
      # - "//tests/com/jvm/external:UnsafeSharedCacheTest"
  rbe_ubuntu1604:
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
    test_targets:
      - "--"
      - "//..."
      # These tests are currently incompatible with RBE
      - "-//tests/integration/override_targets"
      - "-//tests/com/jvm/external/maven:OutdatedTest"
  ubuntu1804_4_0_0:
    platform: ubuntu1804
    bazel: 4.0.0
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "--"
      - "//..."
  ubuntu1804_4_2_2:
    platform: ubuntu1804
    bazel: 4.2.2
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "--"
      - "//..."
  ubuntu1804_5_0_0:
    platform: ubuntu1804
    bazel: 5.0.0
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "--"
      - "//..."
  ubuntu1804_latest:
    platform: ubuntu1804
    bazel: latest
    environment:
      # This tests custom cache locations.
      # https://github.com/bazelbuild/rules_jvm_external/pull/316
      COURSIER_CACHE: /tmp/custom_coursier_cache
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - bazel run @duplicate_artifacts_test//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "--"
      - "//..."
  macos:
    environment:
      # This tests custom cache locations.
      # https://github.com/bazelbuild/rules_jvm_external/pull/316
      COURSIER_CACHE: /tmp/custom_coursier_cache
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - bazel run @duplicate_artifacts_test//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "//..."
      # manual tests
      # commented out until https://github.com/bazelbuild/rules_jvm_external/issues/610 is fixed for Java 11
      # - "//tests/com/jvm/external:UnsafeSharedCacheTest"
  windows:
    environment:
      # This tests custom cache locations.
      # https://github.com/bazelbuild/rules_jvm_external/pull/316
      COURSIER_CACHE: /tmp/custom_coursier_cache
    shell_commands:
      - bazel run @unpinned_regression_testing//:pin
      - bazel run @unpinned_maven_install_in_custom_location//:pin
      - bazel run @duplicate_artifacts_test//:pin
      - tests/bazel_run_tests.sh
    test_targets:
      - "--"
      - "//..."
      # rules_kotlin is not tested / does not work on Windows.
      # https://github.com/bazelbuild/rules_kotlin/issues/179
      # https://github.com/bazelbuild/rules_kotlin/blob/master/.bazelci/presubmit.yml
      - "-//tests/unit/kotlin/..."
      - "-//tests/integration/override_targets"
      # https://github.com/bazelbuild/rules_jvm_external/issues/586
      - "-//tests/unit/manifest_stamp:diff_signed_manifest_test"

grab_Grazel,github-actions," -o -name "WORKSPACE" \) \
grab_Grazel,github-actions,isk run //:buildifier -- --mode=check -v {} +
grab_Grazel,github-actions,-build:
grab_Grazel,github-actions,build
grab_Grazel,github-actions,with:
grab_Grazel,github-actions,-command: build //...
grab_Grazel,github-actions,-build
grab_Grazel,github-actions,-test:
grab_Grazel,github-actions,test
grab_Grazel,github-actions,with:
grab_Grazel,github-actions,-command: test //...
grab_Grazel,github-actions,-test
grab_Grazel,github-actions,-validation:
grab_Grazel,github-actions,isk
grab_Grazel,github-actions,isk@v2
grab_Grazel,github-actions,-validation
grab_Grazel,github-actions,-validation
grab_Grazel,github-actions,--scan
cartographer-project_cartographer,buildkite,---
platforms:
  ubuntu1604:
    build_targets:
    - "..."
    test_targets:
    - "..."

elastic_kibana,buildkite,_macos
elastic_kibana,buildkite,_cache/bootstrap_mac.sh
elastic_kibana,buildkite,_macos
elastic_kibana,buildkite,_cache/bootstrap_mac.sh
elastic_kibana,buildkite,_cache/bootstrap_linux.sh
elastic_kibana,buildkite,cache (Linux)'
iree-org_iree,github-actions,_to_cmake:
iree-org_iree,github-actions,_to_cmake for IREE core
iree-org_iree,github-actions,_to_cmake.py --verbosity=2
iree-org_iree,github-actions,_to_cmake for IREE TF Integration Tests
iree-org_iree,github-actions,_to_cmake.py --root_dir=integrations/tensorflow/e2e --verbosity=2
iree-org_iree,github-actions,build/buildtools/releases/download/4.0.1/buildifier -O "${HOME?}/bin/buildifier"
iree-org_iree,github-actions,:
iree-org_iree,github-actions,"
iree-org_iree,github-actions,/build_core.sh
iree-org_iree,github-actions,- test_all
cockroachdb_cockroach,github-actions,cache
cockroachdb_cockroach,github-actions,-cache
cockroachdb_cockroach,github-actions,key: ${{ runner.os }}-bazel-cache
cockroachdb_cockroach,github-actions,isk
cockroachdb_cockroach,github-actions,isk
cockroachdb_cockroach,github-actions,isk
cockroachdb_cockroach,github-actions,"
cockroachdb_cockroach,github-actions,"
cockroachdb_cockroach,github-actions,Cache
cockroachdb_cockroach,github-actions,key: ${{ runner.os }}-bazel-cache
cockroachdb_cockroach,github-actions,build //pkg/ui/workspaces/cluster-ui:cluster-ui
cockroachdb_cockroach,github-actions,Cache
cockroachdb_cockroach,github-actions,key: ${{ runner.os }}-bazel-cache
cockroachdb_cockroach,github-actions,build //pkg/ui/workspaces/cluster-ui:cluster-ui
primihub_primihub,github-actions,isk
primihub_primihub,github-actions,isk@v2
primihub_primihub,github-actions,cache  # Optional
primihub_primihub,github-actions,"
primihub_primihub,github-actions,# - name: pytest
primihub_primihub,github-actions,test
primihub_primihub,github-actions,build --config=linux logistic_test maxpool_test falcon_lenet_test common_test network_test
primihub_primihub,github-actions,-bin/logistic_test
primihub_primihub,github-actions,-bin/maxpool_test
primihub_primihub,github-actions,-bin/falcon_lenet_test
primihub_primihub,github-actions,-bin/common_test
primihub_primihub,github-actions,-bin/network_test
primihub_primihub,github-actions,test --test_output=all --config=linux test_opt_paillier_c2py 
primihub_primihub,github-actions,test --test_output=all --config=linux test_opt_paillier_pack_c2py 
primihub_primihub,github-actions,test --test_output=errors --config=linux common_test
primihub_primihub,github-actions,test --test_output=errors --config=linux network_test
primihub_primihub,github-actions,test --config=linux primitive_test
primihub_primihub,github-actions,test --config=linux protocol_aby3_test
primihub_primihub,github-actions,test --config=linux prng_test
primihub_primihub,github-actions,isk
primihub_primihub,github-actions,isk@v2
primihub_primihub,github-actions,cache  # Optional
primihub_primihub,github-actions,"
primihub_primihub,github-actions,- uses: actions/checkout@v3
primihub_primihub,github-actions,build
primihub_primihub,github-actions,build --config=darwin_x86_64 --config=macos common_test network_test logistic_test
primihub_primihub,github-actions,-bin/logistic_test
primihub_primihub,github-actions,-bin/common_test
primihub_primihub,github-actions,-bin/network_test
primihub_primihub,github-actions,test --config=darwin_x86_64 --config=macos primitive_test
primihub_primihub,github-actions,test --config=darwin_x86_64 --config=macos protocol_aby3_test
primihub_primihub,github-actions,test --config=darwin_x86_64 --config=macos prng_test
primihub_primihub,github-actions,test --config=darwin_x86_64 --config=macos share_test
primihub_primihub,github-actions,isk
primihub_primihub,github-actions,isk@v2
primihub_primihub,github-actions,cache  # Optional
primihub_primihub,github-actions,"
primihub_primihub,github-actions,# - name: rm cache
primihub_primihub,github-actions,build
primihub_primihub,github-actions,build --config=linux :node :cli :opt_paillier_c2py 
primihub_primihub,github-actions,isk
primihub_primihub,github-actions,isk@v2
primihub_primihub,github-actions,cache  # Optional
primihub_primihub,github-actions,"
primihub_primihub,github-actions,- name: bazel build
primihub_primihub,github-actions,build --config=darwin_x86_64 --config=macos :node :cli :opt_paillier_c2py
primihub_primihub,github-actions,-bin/primihub-node
primihub_primihub,github-actions,-bin/primihub-cli
primihub_primihub,github-actions,-bin/primihub-node
primihub_primihub,github-actions,-bin/primihub-cli
primihub_primihub,github-actions,-bin primihub-cli
primihub_primihub,github-actions,-bin primihub-node
tweag_rules_nixpkgs,github-actions,rc
tweag_rules_nixpkgs,github-actions,rc <<EOF
tweag_rules_nixpkgs,github-actions,rc
tweag_rules_nixpkgs,github-actions,rc <<EOF
tweag_rules_nixpkgs,github-actions,run --config=nix :hello'
tweag_rules_nixpkgs,github-actions,run :hello
googleapis_googleapis,github-actions,build //google/cloud/compute/v1:compute_gen
googleapis_googleapis,github-actions,-bin/google/cloud/compute/v1/compute_gen.proto google/cloud/compute/v1/compute.proto
googleapis_googleapis,github-actions,build //google/cloud/compute/v1:compute_grpc_service_config_gen
googleapis_googleapis,github-actions,-bin/google/cloud/compute/v1/compute_grpc_service_config_gen.json google/cloud/compute/v1/compute_grpc_service_config.json
googleapis_googleapis,github-actions,build //google/cloud/compute/v1:compute_gapic_gen
googleapis_googleapis,github-actions,-bin/google/cloud/compute/v1/compute_gapic_gen.yaml google/cloud/compute/v1/compute_gapic.yaml
googleapis_googleapis,github-actions,build //google/cloud/compute/v1/...
googleapis_googleapis,github-actions,build //google/cloud/compute/v1/...
google_cargo-raze,buildkite,---
buildifier:
  version: latest
  warnings: "all"
tasks:
  # TODO(acmcarther): Add check to verify that examples are up-to-date.
  ubuntu1804:
    build_targets:
      - "..."
    test_targets:
      - "..."
# windows:
#   build_targets:
#     - "..."
#   test_targets:
#     - "..."
  macos:
    build_targets:
      - "..."
    test_targets:
      - "..."

google_closure-templates,buildkite,---
platforms:
  macos:
    build_targets:
      - "..."

  rbe_ubuntu1604:
    build_targets:
      - "..."

  ubuntu1604:
    build_targets:
      - "..."

  ubuntu1804:
    build_targets:
      - "..."

  windows:
    build_targets:
      - "..."

google_tensorstore,github-actions,remote cache write credentials'
google_tensorstore,github-actions,rc docs
google_tensorstore,github-actions,_*/cache/repos
google_tensorstore,github-actions,isk
google_tensorstore,github-actions,version', 'WORKSPACE', 'external.bzl', 'third_party/**') }}
google_tensorstore,github-actions,rc run --announce_rc --show_timestamps --keep_going --color=yes --verbose_failures //docs:build_docs -- --output docs_output
google_tensorstore,github-actions,remote cache write credentials'
google_tensorstore,github-actions,rc buildwheel-${{ matrix.os }}
google_tensorstore,github-actions,_cache/cache/repos
google_tensorstore,github-actions,isk
google_tensorstore,github-actions,version', 'WORKSPACE', 'external.bzl', 'third_party/**') }}
google_tensorstore,github-actions,rc
masc-ucsc_livehd,github-actions,cache
masc-ucsc_livehd,github-actions,key: bazel-gcc-${{ github.sha }}
masc-ucsc_livehd,github-actions,-gcc
masc-ucsc_livehd,github-actions,- run: sudo chmod +x /usr/local/bin/bazel
masc-ucsc_livehd,github-actions,build -s //...
masc-ucsc_livehd,github-actions,cache
masc-ucsc_livehd,github-actions,key: bazel-gcc-instrumented-${{ github.sha }}
masc-ucsc_livehd,github-actions,-gcc-instrumented
masc-ucsc_livehd,github-actions,query --output label_kind //...
masc-ucsc_livehd,github-actions,coverage --instrument_test_targets --collect_code_coverage --test_tag_filters=-fixme --combined_report=lcov --test_output=all //...
masc-ucsc_livehd,github-actions,-out/_coverage
masc-ucsc_livehd,github-actions,cache
masc-ucsc_livehd,github-actions,key: bazel-clang-${{ steps.configure_llvm.outputs.clang_hash }}-${{ steps.configure_llvm.outputs.llvm_hash }}-${{ github.sha }}
masc-ucsc_livehd,github-actions,-clang-${{ steps.configure_llvm.outputs.clang_hash }}-${{ steps.configure_llvm.outputs.llvm_hash }}
masc-ucsc_livehd,github-actions,${{ matrix.action }} --config=clang --test_tag_filters=-fixme --test_output=all -s //...
masc-ucsc_livehd,github-actions,build/buildtools/releases/latest/download/buildifier-linux-amd64 -O /usr/local/bin/buildifier
jpsim_Yams,github-actions,on:
jpsim_Yams,github-actions,isk test //Tests:macOSBuildTest
jpsim_Yams,github-actions,isk test //Tests:watchOSBuildTest
jpsim_Yams,github-actions,isk test //Tests:iOSBuildTest
jpsim_Yams,github-actions,isk test //Tests:tvOSBuildTest
jpsim_Yams,github-actions,isk test //Tests:UnitTests
jpsim_Yams,github-actions,if: always()
jpsim_Yams,github-actions,isk
jpsim_Yams,github-actions,isk test //Tests:UnitTests
jpsim_Yams,github-actions,-out/k8-fastbuild/testlogs/Tests/UnitTests/test.log
google_tink,github-actions,build solution.
google_elemental2,github-actions,isk"
google_elemental2,github-actions,isk-os: linux
google_elemental2,github-actions,isk-os: darwin
google_elemental2,github-actions,isk binary cache
google_elemental2,github-actions,isk-cache
google_elemental2,github-actions,isk
google_elemental2,github-actions,isk-${{ env.BAZELISK_VERSION }}
google_elemental2,github-actions,isk
google_elemental2,github-actions,isk-cache.outputs.cache-hit != 'true'
google_elemental2,github-actions,chmod +x "${BAZELISK_BIN}/bazel"
google_elemental2,github-actions,"
google_elemental2,github-actions,cache
google_elemental2,github-actions,"
google_elemental2,github-actions,- name: Configure bazel
google_elemental2,github-actions,rc
google_elemental2,github-actions,rc
liuliu_dflat,github-actions,on: [push]
liuliu_dflat,github-actions,isk
liuliu_dflat,github-actions,isk-darwin-amd64"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions," test --test_output=errors //src/graphql/tests:Tests
liuliu_dflat,github-actions," test --test_output=errors //src/tests:Tests
liuliu_dflat,github-actions,on: [push]
liuliu_dflat,github-actions,isk
liuliu_dflat,github-actions,isk-linux-amd64"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions,/setup_clang.sh
liuliu_dflat,github-actions," test --test_output=errors //src/tests:Tests
liuliu_dflat,github-actions,isk
liuliu_dflat,github-actions,isk-linux-amd64"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions,"
liuliu_dflat,github-actions,/setup_clang.sh
google_double-conversion,github-actions,build file.
dtolnay_cxx,github-actions,:
dtolnay_cxx,github-actions,runs-on: ubuntu-latest
dtolnay_cxx,github-actions,run: |
dtolnay_cxx,github-actions,-5.1.1-installer-linux-x86_64.sh
dtolnay_cxx,github-actions,run demo --verbose_failures --noshow_progress
dtolnay_cxx,github-actions,test ... --verbose_failures --noshow_progress
ChrisCummins_ProGraML,github-actions,build/buildtools/buildifier@latest
googleapis_gapic-generator-go,github-actions,-build:
googleapis_gapic-generator-go,github-actions,build
googleapis_gapic-generator-go,github-actions,isk build '//...'
googleapis_gapic-generator-go,github-actions,test
googleapis_gapic-generator-go,github-actions,isk test '//...'
googleapis_gapic-generator-go,github-actions,-deps:
googleapis_gapic-generator-go,github-actions,isk run //:gazelle -- update-repos -from_file=go.mod -prune -to_macro=repositories.bzl%com_googleapis_gapic_generator_go_repositories
googleapis_gapic-generator-go,github-actions,isk run //:gazelle -- update-repos -from_file=showcase/go.mod -to_macro=repositories.bzl%com_googleapis_gapic_generator_go_repositories
googleapis_gapic-generator-go,github-actions,-deps
googleapis_gapic-generator-go,github-actions,-deps.outputs.changed
googleapis_gapic-generator-go,github-actions,repositories.'
googleapis_gapic-generator-go,github-actions,Go deps'
googleapis_gapic-generator-go,github-actions,Go deps'
googleapis_gapic-generator-go,github-actions,-deps
bazelbuild_rules_go,buildkite,---
tasks:
  ubuntu1804_bazel400:
    platform: ubuntu1804
    bazel: 5.1.0 # test minimum supported version of bazel
    shell_commands:
      - tests/core/cgo/generate_imported_dylib.sh
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  ubuntu2004:
    # enable some unflipped incompatible flags on this platform to ensure we don't regress.
    shell_commands:
      - tests/core/cgo/generate_imported_dylib.sh
    build_flags:
    - "--config=incompatible"
    test_flags:
    - "--config=incompatible"
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  ubuntu2004_bcr_tests:
    name: BCR test module
    platform: ubuntu2004
    bazel: b12f3a93a55019276879bd2d3edbd201c913675a
    working_directory: tests/bcr
    build_flags:
      - "--allow_yanked_versions=all"
      - "--experimental_enable_bzlmod"
    test_flags:
      - "--allow_yanked_versions=all"
      - "--experimental_enable_bzlmod"
    build_targets:
      - "//..."
      - "@go_sdk//..."
    test_targets:
      - "//..."
  macos:
    shell_commands:
      - tests/core/cgo/generate_imported_dylib.sh
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  rbe_ubuntu1604:
    shell_commands:
      - tests/core/cgo/generate_imported_dylib.sh
    build_targets:
    - "//..."
    test_flags:
    # Some tests depend on this feature being disabled. However, because it's
    # enabled by default in the rbe_ubuntu1604 platform, we cannot simply remove
    # this flag here, we have to explicitly override it with 0.
    - "--action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=0"
    # go_bazel_test rules are marked local, since the executors don't have bazel
    # installed. It appears bazel is no longer in PATH on the host machines
    # in this configuration either.
    - "--test_tag_filters=-local"
    test_targets:
    - "--"
    - "//..."
    - "-//tests/core/go_path:go_path_test"
    - "-//tests/core/stdlib:buildid_test"
  windows:
    build_flags:
    # Go requires a C toolchain that accepts options and emits errors like
    # gcc or clang. The Go SDK does not support MSVC.
    - "--cpu=x64_windows"
    - "--compiler=mingw-gcc"
    - '--action_env=PATH=C:\tools\msys64\usr\bin;C:\tools\msys64\bin;C:\tools\msys64\mingw64\bin;C:\python3\Scripts\;C:\python3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\OpenSSH;C:\ProgramData\GooGet;C:\Program Files\Google\Compute Engine\metadata_scripts;C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;C:\Program Files\Google\Compute Engine\sysprep;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\tools\msys64\usr\bin;c:\openjdk\bin;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\CMake\bin;c:\ninja;c:\bazel;c:\buildkite'
    # NOTE(bazelbuild/bazel#10529): bazel doesn't register the mingw toolchain automatically.
    # We also need the host and target platforms to have the mingw constraint value.
    - "--extra_toolchains=@local_config_cc//:cc-toolchain-x64_windows_mingw"
    - "--host_platform=@io_bazel_rules_go//go/toolchain:windows_amd64_cgo"
    - "--platforms=@io_bazel_rules_go//go/toolchain:windows_amd64_cgo"
    - "--incompatible_enable_cc_toolchain_resolution"
    build_targets:
    # BUG(bazelbuild/bazel#6485): Bazel 0.18.0 crashes when loading
    # @com_google_protobuf//:protobuf. We have to exclude everything that
    # transitively depends on it.
    # TODO(#1787): There is a cc_import target in //tests/core/cgo that
    # doesn't set the interface_library attribute. This causes an
    # analysis failure.
    # TODO(#1789): go_path tests that require symlinks fail. These should
    # be skipped automatically.
    # TODO(#1790): Tests that require data should use bazel.Runfile.
    # TODO(#2516): Tests that require protoc fail when protoc is built with mingw-gcc.
    - "--"
    - "//..."
    - "-@com_github_golang_protobuf//ptypes:go_default_library_gen"
    - "-@com_google_protobuf//:any_proto"
    - "-@com_google_protobuf//:api_proto"
    - "-@com_google_protobuf//:compiler_plugin_proto"
    - "-@com_google_protobuf//:descriptor_proto"
    - "-@com_google_protobuf//:duration_proto"
    - "-@com_google_protobuf//:empty_proto"
    - "-@com_google_protobuf//:field_mask_proto"
    - "-@com_google_protobuf//:protobuf"
    - "-@com_google_protobuf//:protoc"
    - "-@com_google_protobuf//:protoc_lib"
    - "-@com_google_protobuf//:source_context_proto"
    - "-@com_google_protobuf//:struct_proto"
    - "-@com_google_protobuf//:timestamp_proto"
    - "-@com_google_protobuf//:type_proto"
    - "-@com_google_protobuf//:wrappers_proto"
    - "-@go_googleapis//google/rpc:code_go_proto"
    - "-@go_googleapis//google/rpc:code_proto"
    - "-@go_googleapis//google/rpc:errdetails_go_proto"
    - "-@go_googleapis//google/rpc:errdetails_proto"
    - "-@go_googleapis//google/rpc:status_go_proto"
    - "-@go_googleapis//google/rpc:status_proto"
    - "-@go_googleapis//google/type:color_go_proto"
    - "-@gogo_special_proto//github.com/gogo/protobuf/gogoproto:gogoproto"
    - "-//go/tools/bazel:bazel_test"
    - "-@io_bazel_rules_go//proto:gogofaster_proto"
    - "-@io_bazel_rules_go//proto:go_grpc"
    - "-@io_bazel_rules_go//proto:go_proto"
    - "-@io_bazel_rules_go//proto:go_proto_bootstrap"
    - "-@io_bazel_rules_go//proto:go_proto_validate"
    - "-@io_bazel_rules_go//proto/wkt:any_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:api_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:compiler_plugin_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:descriptor_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:duration_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:empty_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:field_mask_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:source_context_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:struct_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:timestamp_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:type_go_proto"
    - "-@io_bazel_rules_go//proto/wkt:wrappers_go_proto"
    - "-@org_golang_x_crypto//ed25519:ed25519_test"
    - "-@org_golang_x_crypto//sha3:sha3_test"
    - "-@org_golang_x_sys//windows/registry:registry_test"
    - "-@org_golang_x_sys//windows/svc/eventlog:eventlog_test"
    - "-@org_golang_x_sys//windows/svc:svc_test"
    - "-@org_golang_x_text//language:language_test"
    - "-//proto:combo_grpc"
    - "-//proto:combo_proto"
    - "-//proto:gofast_grpc"
    - "-//proto:gofast_proto"
    - "-//proto:gogofaster_grpc"
    - "-//proto:gogofaster_proto"
    - "-//proto:gogofast_grpc"
    - "-//proto:gogofast_proto"
    - "-//proto:gogo_grpc"
    - "-//proto:gogo_proto"
    - "-//proto:gogoslick_grpc"
    - "-//proto:gogoslick_proto"
    - "-//proto:gogotypes_grpc"
    - "-//proto:gogotypes_proto"
    - "-//proto:go_grpc"
    - "-//proto:go_proto"
    - "-//proto:go_proto_bootstrap"
    - "-//proto:go_proto_validate"
    - "-//proto:gostring_grpc"
    - "-//proto:gostring_proto"
    - "-//proto/wkt:any_go_proto"
    - "-//proto/wkt:api_go_proto"
    - "-//proto/wkt:compiler_plugin_go_proto"
    - "-//proto/wkt:descriptor_go_proto"
    - "-//proto/wkt:duration_go_proto"
    - "-//proto/wkt:empty_go_proto"
    - "-//proto/wkt:field_mask_go_proto"
    - "-//proto/wkt:source_context_go_proto"
    - "-//proto/wkt:struct_go_proto"
    - "-//proto/wkt:timestamp_go_proto"
    - "-//proto/wkt:type_go_proto"
    - "-//proto/wkt:wrappers_go_proto"
    - "-//tests:buildifier_test" # transitively requires proto, doesn't build in CI
    - "-@test_chdir_remote//sub:go_default_test"
    - "-//tests/core/cgo:dylib_client"
    - "-//tests/core/cgo:dylib_test"
    - "-//tests/core/cgo:generated_dylib_client"
    - "-//tests/core/cgo:generated_dylib_test"
    - "-//tests/core/cgo:versioned_dylib_client"
    - "-//tests/core/cgo:versioned_dylib_test"
    - "-//tests/core/cgo:generated_versioned_dylib_client"
    - "-//tests/core/cgo:generated_versioned_dylib_test"
    - "-//tests/core/cross:proto_test"
    - "-//tests/core/go_path:go_path"
    - "-//tests/core/go_path:go_path_test"
    - "-//tests/core/go_path:nodata_path"
    - "-//tests/core/go_path:link_path"
    - "-//tests/core/go_path:copy_path"
    - "-//tests/core/go_path:archive_path"
    - "-//tests/core/go_path/pkg/lib:vendored"
    - "-//tests/core/go_path/pkg/lib:go_default_test"
    - "-//tests/core/go_path/pkg/lib:go_default_library"
    - "-//tests/core/go_path/pkg/lib:embed_test"
    - "-//tests/core/go_path/pkg/lib:embed_lib"
    - "-//tests/core/go_path/cmd/bin:cross"
    - "-//tests/core/go_path/cmd/bin:bin"
    - "-//tests/core/go_plugin:go_plugin"
    - "-//tests/core/go_plugin:go_default_test"
    - "-//tests/core/go_plugin:plugin"
    - "-//tests/core/go_plugin_with_proto_library:go_plugin_with_proto_library"
    - "-//tests/core/go_plugin_with_proto_library:go_default_test"
    - "-//tests/core/go_plugin_with_proto_library:plugin"
    - "-//tests/core/go_proto_library:all"
    - "-//tests/core/go_proto_library_importmap:foo_go_proto"
    - "-//tests/core/go_proto_library_importmap:foo_proto"
    - "-//tests/core/go_proto_library_importmap:importmap_test"
    - "-//tests/core/go_test:data_test"
    - "-//tests/core/go_test:pwd_test"
    - "-//tests/core/race:race_test"
    - "-//tests/core/stdlib:buildid_test"
    - "-//tests/examples/executable_name:executable_name"
    - "-//tests/integration/googleapis:color_service"
    - "-//tests/integration/googleapis:color_service_go_proto"
    - "-//tests/integration/googleapis:color_service_proto"
    - "-//tests/integration/googleapis:color_service_test"
    - "-//tests/legacy/examples/cgo/example_command:example_command_test"
    - "-//tests/legacy/examples/cgo/example_command:example_command_script"
    - "-//tests/legacy/examples/cgo/example_command:example_command"
    - "-//tests/legacy/examples/cgo:generate_go_src"
    - "-//tests/legacy/examples/cgo:cgo_lib_test"
    - "-//tests/legacy/examples/cgo:go_default_library"
    - "-//tests/legacy/examples/cgo/cc_dependency:version"
    - "-//tests/legacy/examples/cgo/cc_dependency:c_version_so"
    - "-//tests/legacy/examples/cgo:sub"
    - "-//tests/legacy/examples/proto/dep:useful_go_proto"
    - "-//tests/legacy/examples/proto/dep:useful_proto"
    - "-//tests/legacy/examples/proto/embed:embed_go_proto"
    - "-//tests/legacy/examples/proto/embed:embed_proto"
    - "-//tests/legacy/examples/proto/embed:go_default_library"
    - "-//tests/legacy/examples/proto:go_default_library"
    - "-//tests/legacy/examples/proto/gogo:gogo_test"
    - "-//tests/legacy/examples/proto/gogo:values_go_proto"
    - "-//tests/legacy/examples/proto/gogo:values_proto"
    - "-//tests/legacy/examples/proto/gostyle:gostyle_go_proto"
    - "-//tests/legacy/examples/proto/gostyle:gostyle_proto"
    - "-//tests/legacy/examples/proto/grpc:my_svc_go_proto"
    - "-//tests/legacy/examples/proto/grpc:my_svc_proto"
    - "-//tests/legacy/examples/proto/grpc:not_grpc"
    - "-//tests/legacy/examples/proto/grpc:test_grpc"
    - "-//tests/legacy/examples/proto/lib:lib_go_proto"
    - "-//tests/legacy/examples/proto/lib:lib_proto"
    - "-//tests/legacy/examples/proto:proto_pure_test"
    - "-//tests/legacy/examples/proto:proto_test"
    - "-//tests/legacy/extldflags_rpath:extldflags_rpath_test"
    - "-//tests/legacy/info:info"
    - "-//tests/legacy/proto_ignore_go_package_option:a_go_proto"
    - "-//tests/legacy/proto_ignore_go_package_option:a_proto"
    - "-//tests/legacy/proto_ignore_go_package_option:b_go_proto"
    - "-//tests/legacy/proto_ignore_go_package_option:b_proto"
    - "-//tests/legacy/test_chdir:go_default_test"
    - "-//tests/legacy/test_rundir:go_default_test"
    - "-//tests/legacy/transitive_data:go_default_test"
    test_flags:
    # Go requires a C toolchain that accepts options and emits errors like
    # gcc or clang. The Go SDK does not support MSVC.
    - "--cpu=x64_windows"
    - "--compiler=mingw-gcc"
    - '--action_env=PATH=C:\tools\msys64\usr\bin;C:\tools\msys64\bin;C:\tools\msys64\mingw64\bin;C:\python3\Scripts\;C:\python3;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Windows\System32\OpenSSH;C:\ProgramData\GooGet;C:\Program Files\Google\Compute Engine\metadata_scripts;C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;C:\Program Files\Google\Compute Engine\sysprep;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\tools\msys64\usr\bin;c:\openjdk\bin;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\CMake\bin;c:\ninja;c:\bazel;c:\buildkite'
    - "--extra_toolchains=@local_config_cc//:cc-toolchain-x64_windows_mingw"
    - "--host_platform=@io_bazel_rules_go//go/toolchain:windows_amd64_cgo"
    - "--platforms=@io_bazel_rules_go//go/toolchain:windows_amd64_cgo"
    - "--incompatible_enable_cc_toolchain_resolution"
    # On Windows CI, bazel (bazelisk) needs %LocalAppData% to find the cache directory.
    # We invoke bazel in tests, so the tests need this, too.
    - "--test_env=LOCALAPPDATA"
    # go_bazel_test runs bazel in a test workspace. It needs the same flags as above.
    - "--test_env=GO_BAZEL_TEST_BAZELFLAGS=--cpu=x64_windows --compiler=mingw-gcc --extra_toolchains=@local_config_cc//:cc-toolchain-x64_windows_mingw --action_env=PATH --host_platform=@io_bazel_rules_go//go/toolchain:windows_amd64_cgo --incompatible_enable_cc_toolchain_resolution"
    - "--test_env=PATH"
    test_targets:
    - "--"
    - "//..."
    - "-//go/tools/bazel:bazel_test"
    - "-@org_golang_x_crypto//ed25519:ed25519_test"
    - "-@org_golang_x_crypto//sha3:sha3_test"
    - "-@org_golang_x_net//ipv4:ipv4_test"
    - "-@org_golang_x_sys//windows/registry:registry_test"
    - "-@org_golang_x_sys//windows/svc/eventlog:eventlog_test"
    - "-@org_golang_x_sys//windows/svc:svc_test"
    - "-@org_golang_x_text//language:language_test"
    - "-@org_golang_x_tools//cmd/splitdwarf/internal/macho:macho_test"
    - "-@test_chdir_remote//sub:go_default_test"
    - "-//go/tools/builders:stdliblist_test" # fails on Windows due to #2491
    - "-//tests:buildifier_test" # requires bash
    - "-//tests/core/cgo:dylib_client"
    - "-//tests/core/cgo:dylib_test"
    - "-//tests/core/cgo:generated_dylib_client"
    - "-//tests/core/cgo:generated_dylib_test"
    - "-//tests/core/cgo:race_test" # fails on Windows due to upstream bug, see issue #2911
    - "-//tests/core/cgo:versioned_dylib_client"
    - "-//tests/core/cgo:versioned_dylib_test"
    - "-//tests/core/cgo:generated_versioned_dylib_client"
    - "-//tests/core/cgo:generated_versioned_dylib_test"
    - "-//tests/core/coverage:coverage_test"
    - "-//tests/core/cross:proto_test"
    - "-//tests/core/go_binary:go_default_test"
    - "-//tests/extras/go_embed_data:go_default_test"
    - "-//tests/core/go_path:go_path"
    - "-//tests/core/go_path:go_path_test"
    - "-//tests/core/go_path:link_path"
    - "-//tests/core/go_path/pkg/lib:embed_test"
    - "-//tests/core/go_path/pkg/lib:go_default_test"
    - "-//tests/core/go_plugin:go_plugin"
    - "-//tests/core/go_plugin:go_default_test"
    - "-//tests/core/go_plugin:plugin"
    - "-//tests/core/go_plugin_with_proto_library:go_plugin_with_proto_library"
    - "-//tests/core/go_plugin_with_proto_library:go_default_test"
    - "-//tests/core/go_plugin_with_proto_library:plugin"
    - "-//tests/core/go_proto_library:all"
    - "-//tests/core/go_proto_library_importmap:importmap_test"
    - "-//tests/core/go_test:data_test"
    - "-//tests/core/go_test:pwd_test"
    - "-//tests/core/nogo/coverage:coverage_test"
    - "-//tests/core/nogo/coverage:gen_code_test"
    - "-//tests/core/race:race_test" # fails on Windows due to upstream bug, see issue #2911
    - "-//tests/core/stdlib:buildid_test"
    - "-//tests/examples/executable_name:executable_name"
    - "-//tests/integration/gazelle:gazelle_test" # exceeds command line length limit
    - "-//tests/integration/googleapis:color_service_test"
    - "-//tests/integration/reproducibility:reproducibility_test"
    - "-//tests/legacy/cgo_pthread_flag:go_default_test" # fails without error, passes locally. Problem with CI msys2?
    - "-//tests/legacy/examples/cgo/example_command:example_command_test"
    - "-//tests/legacy/examples/cgo/example_command:example_command_script"
    - "-//tests/legacy/examples/cgo/example_command:example_command"
    - "-//tests/legacy/examples/cgo:generate_go_src"
    - "-//tests/legacy/examples/cgo:cgo_lib_test"
    - "-//tests/legacy/examples/cgo:go_default_library"
    - "-//tests/legacy/examples/cgo/cc_dependency:version"
    - "-//tests/legacy/examples/cgo/cc_dependency:c_version_so"
    - "-//tests/legacy/examples/proto/gogo:gogo_test"
    - "-//tests/legacy/examples/proto:proto_pure_test"
    - "-//tests/legacy/examples/proto:proto_test"
    - "-//tests/legacy/extldflags_rpath:extldflags_rpath_test"
    - "-//tests/legacy/info:info"
    - "-//tests/legacy/test_chdir:go_default_test"
    - "-//tests/legacy/test_rundir:go_default_test"
    - "-//tests/legacy/transitive_data:go_default_test"
    # Stardoc produces different line-endings on windows,
    # so the documentation it generates doesn't match the checked in files.
    # - Tracking issue https://github.com/bazelbuild/stardoc/issues/42.
    - "-//docs:all"

lewish_asciiflow,github-actions,isk.
lewish_asciiflow,github-actions,isk:latest
lewish_asciiflow,github-actions,test ...
lewish_asciiflow,github-actions,symlinked dir.
lewish_asciiflow,github-actions,isk:latest"
lewish_asciiflow,github-actions,-bin/site ./gh-pages-deploy"
bytecodealliance_wasmtime-go,github-actions,build on *nix
bytecodealliance_wasmtime-go,github-actions,isk
bytecodealliance_wasmtime-go,github-actions,isk build --subcommands=pretty_print --verbose_failures :go_default_library
bytecodealliance_wasmtime-go,github-actions,isk test --subcommands=pretty_print --verbose_failures :go_default_test
bytecodealliance_wasmtime-go,github-actions,build on Windows
bytecodealliance_wasmtime-go,github-actions,isk
bytecodealliance_wasmtime-go,github-actions,isk build --subcommands=pretty_print --verbose_failures --compiler=mingw-gcc :go_default_library
bytecodealliance_wasmtime-go,github-actions,isk test --subcommands=pretty_print --verbose_failures --compiler=mingw-gcc :go_default_test
grpc-ecosystem_polyglot,github-actions,Test
grpc-ecosystem_polyglot,github-actions,cache
grpc-ecosystem_polyglot,github-actions,_runner
grpc-ecosystem_polyglot,github-actions,_runner
grpc-ecosystem_polyglot,github-actions,-${{ matrix.os }}
grpc-ecosystem_polyglot,github-actions,uses: ./.github/actions/install
grpc-ecosystem_polyglot,github-actions,test //src/...
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: Tests
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: Bank Workload
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: End-to-end (k3d)
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: End-to-end (k3d)
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: End-to-end (k3d)
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: End-to-end (kind)
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: Tests
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: Update CRDB versions
cockroachdb_cockroach-operator,github-actions,cache
cockroachdb_cockroach-operator,github-actions,"
cockroachdb_cockroach-operator,github-actions,- name: End-to-end (k3d)
angular_angular,circleci,repositories are different.
angular_angular,circleci,version" }}-{{ checksum "yarn.lock" }}-{{ checksum "WORKSPACE" }}-{{ checksum "aio/yarn.lock" }}
angular_angular,circleci,isk` cache
angular_angular,circleci,version" }}
angular_angular,circleci,version" }}-{{ checksum "yarn.lock" }}-{{ checksum "WORKSPACE" }}
angular_angular,circleci,version" }}
angular_angular,circleci,-remote-exec
angular_angular,circleci,cache is also included.
angular_angular,circleci,directories and add a file to them if they don't exist already so that
angular_angular,circleci,_repository_cache ]; then
angular_angular,circleci,_repository_cache
angular_angular,circleci,_repository_cache/MARKER
angular_angular,circleci,_repository_cache
angular_angular,circleci,tests on Saucelabs
angular_angular,circleci,run //tools/saucelabs:sauce_service_setup
angular_angular,circleci,isk query --output label '(kind(karma_web_test, ...) intersect attr("tags", "saucelabs", ...)) except attr("tags", "fixme-saucelabs", ...)')
angular_angular,circleci,test --config=saucelabs ${TESTS}
angular_angular,circleci,run //tools/saucelabs:sauce_service_stop
angular_angular,circleci,`dist/packages-dist` output structure (build.sh).
angular_angular,circleci,packages more than once. Even though we have a remote cache, these jobs will
angular_angular,circleci,repository cache to use on subsequent runs.
angular_angular,circleci,_repository_cache
angular_angular,circleci,isk
angular_angular,circleci,-generated fixtures. Note that disabling
angular_angular,circleci,-generated fixtures required in legacy tests
angular_angular,circleci,build \
angular_angular,circleci,.
angular_angular,circleci,build //packages/zone.js:npm_package
angular_angular,circleci,binaries as used in the components repo.
angular_angular,circleci,to run `yarn install`, because it uses the `--frozen-lockfile` flag and fails.
angular_angular,circleci,build //packages/zone.js:npm_package &&
angular_angular,circleci,isk globally. This is necessary as
angular_angular,circleci,# invocation might modify the symlinked project `node_modules` again, causing failures.
angular_angular,circleci,isk@${BAZELISK_VERSION}
angular_angular,circleci,isk build //packages/compiler-cli/...
angular_angular,circleci,isk test --test_tag_filters="-browser:chromium-local" //packages/compiler-cli/...
angular_angular,circleci,isk
angular_angular,circleci,currently taking longer than the legacy saucelabs job as it
bazelbuild_intellij,buildkite,---
tasks:
  IntelliJ-UE-internal-stable:
    name: IntelliJ UE Internal Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-latest
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-latest
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
  IntelliJ-UE-internal-beta:
    name: IntelliJ UE Internal Beta
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-beta
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-beta
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
  IntelliJ-UE-internal-under-dev:
    name: IntelliJ UE Internal Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-under-dev
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-under-dev
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
    soft_fail:
      - exit_status: 1
  IntelliJ-UE-OSS-oldest-stable:
    name: IntelliJ UE OSS Oldest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-oss-oldest-stable
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-oss-oldest-stable
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
  IntelliJ-UE-OSS-latest-stable:
    name: IntelliJ UE OSS Latest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-oss-latest-stable
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-oss-latest-stable
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
  IntelliJ-UE-OSS-under-dev:
    name: IntelliJ UE OSS Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-ue-oss-under-dev
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-ue-oss-under-dev
      - --test_output=errors
    test_targets:
      - //:ijwb_ue_tests
    soft_fail:
      - exit_status: 1


bazelbuild_intellij,buildkite,---
tasks:
  Android-Studio-internal-stable:
    name: Android Studio Internal Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-latest
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-latest
      - --test_output=errors
    test_targets:
      - //:aswb_tests
  Android-Studio-internal-beta:
    name: Android Studio Internal Beta
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-beta
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-beta
      - --test_output=errors
    test_targets:
      - //:aswb_tests
  Android-Studio-internal-canary:
    name: Android Studio Internal Canary
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-canary
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-canary
      - --test_output=errors
    test_targets:
      - //:aswb_tests
    soft_fail:
      - exit_status: 1
  Android-Studio-OSS-oldest-stable:
    name: Android Studio OSS Oldest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-oss-oldest-stable
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-oss-oldest-stable
      - --test_output=errors
    test_targets:
      - //:aswb_tests
  Android-Studio-OSS-latest-stable:
    name: Android Studio OSS Latest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-oss-latest-stable
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-oss-latest-stable
      - --test_output=errors
    test_targets:
      - //:aswb_tests
  Android-Studio-OSS-under-dev:
    name: Android Studio OSS Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=android-studio-oss-under-dev
    build_targets:
      - //aswb/...
    test_flags:
      - --define=ij_product=android-studio-oss-under-dev
      - --test_output=errors
    test_targets:
      - //:aswb_tests
    soft_fail:
      - exit_status: 1


bazelbuild_intellij,buildkite,---
tasks:
  IntelliJ-CE-internal-stable:
    name: IntelliJ CE Internal Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-latest
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-latest
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
  IntelliJ-CE-internal-beta:
    name: IntelliJ CE Internal Beta
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-beta
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-beta
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
  IntelliJ-CE-internal-under-dev:
    name: IntelliJ CE Internal Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-under-dev
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-under-dev
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
    soft_fail:
      - exit_status: 1
  IntelliJ-CE-OSS-oldest-stable:
    name: IntelliJ CE OSS Oldest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-oldest-stable
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-oss-oldest-stable
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
  IntelliJ-CE-OSS-latest-stable:
    name: IntelliJ CE OSS Latest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-latest-stable
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-oss-latest-stable
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
  IntelliJ-CE-OSS-under-dev:
    name: IntelliJ CE OSS Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-under-dev
    build_targets:
      - //ijwb/...
    test_flags:
      - --define=ij_product=intellij-oss-under-dev
      - --test_output=errors
    test_targets:
      - //:ijwb_ce_tests
    soft_fail:
      - exit_status: 1


bazelbuild_intellij,buildkite,---
tasks:
  Aspect-internal-stable:
    name: Aspect Tests for IJ Internal Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-latest
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-latest
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
  Aspect-internal-beta:
    name: Aspect Tests for IJ Internal Beta
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-beta
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-beta
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
  Aspect-internal-under-dev:
    name: Aspect Tests for IJ Internal Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-under-dev
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-under-dev
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
    soft_fail:
      - exit_status: 1
  Aspect-oss-oldest-stable:
    name: Aspect Tests for IJ OSS Oldest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-oldest-stable
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-oss-oldest-stable
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
  Aspect-oss-latest-stable:
    name: Aspect Tests for IJ OSS Latest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-latest-stable
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-oss-latest-stable
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
  Aspect-oss-under-dev:
    name: Aspect Tests for IJ OSS Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=intellij-oss-under-dev
    build_targets:
      - //aspect:aspect_files
    test_flags:
      - --define=ij_product=intellij-oss-under-dev
      - --test_output=errors
      - --notrim_test_configuration
    test_targets:
      - //aspect/testing/...
    soft_fail:
      - exit_status: 1

bazelbuild_intellij,buildkite,---
tasks:
  CLion-internal-stable:
    name: CLion Internal Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-latest
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-latest
      - --test_output=errors
    test_targets:
      - //:clwb_tests
  CLion-internal-beta:
    name: CLion Internal Beta
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-beta
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-beta
      - --test_output=errors
    test_targets:
      - //:clwb_tests
  CLion-internal-under-dev:
    name: CLion Internal Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-under-dev
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-under-dev
      - --test_output=errors
    test_targets:
      - //:clwb_tests
    soft_fail:
      - exit_status: 1
  CLion-OSS-oldest-stable:
    name: CLion OSS Oldest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-oss-oldest-stable
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-oss-oldest-stable
      - --test_output=errors
    test_targets:
      - //:clwb_tests
  CLion-OSS-latest-stable:
    name: CLion OSS Latest Stable
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-oss-latest-stable
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-oss-latest-stable
      - --test_output=errors
    test_targets:
      - //:clwb_tests
  CLion-OSS-under-dev:
    name: CLion OSS Under Development
    platform: ubuntu1804
    build_flags:
      - --define=ij_product=clion-oss-under-dev
    build_targets:
      - //clwb/...
    test_flags:
      - --define=ij_product=clion-oss-under-dev
      - --test_output=errors
    test_targets:
      - //:clwb_tests
    soft_fail:
      - exit_status: 1

bazelbuild_tulsi,github-actions,runs-on: macos-12
bazelbuild_tulsi,github-actions,`
bazelbuild_tulsi,github-actions,build --remote_cache=grpcs://remote.buildbuddy.io -- //:tulsi
bazelbuild_tulsi,github-actions,test
bazelbuild_tulsi,github-actions,runs-on: macos-12
bazelbuild_tulsi,github-actions,`
bazelbuild_tulsi,github-actions,build --remote_cache=grpcs://remote.buildbuddy.io -- //:tulsi
bazelbuild_tulsi,github-actions,test
bazelbuild_tulsi,github-actions,with Head Deps
bazelbuild_tulsi,github-actions,`
bazelbuild_tulsi,github-actions,ci/update_workspace_to_deps_heads.sh
bazelbuild_tulsi,github-actions,build --remote_cache=grpcs://remote.buildbuddy.io -- //:tulsi
bazelbuild_tulsi,github-actions,test
bazelbuild_tulsi,buildkite,---
x_defaults:
  common: &common
    platform: macos
    xcode_version: "13.2.1"
    build_targets:
    - "//:tulsi"
    test_flags:
    - "--nocheck_visibility"
    # TODO: Replace absolute home directory with `~` and move this to .bazelrc
    # when --sandbox_writable_path supports relative paths.
    # https://github.com/bazelbuild/bazel/issues/10304
    - "--sandbox_writable_path=/Users/buildkite/Library/Application Support"
    # TODO: Re-enable testing once
    # https://github.com/bazelbuild/continuous-integration/issues/1273 is fixed
    # We use GitHub Actions to run tests in the meantime.
    # test_targets:
    # - "//:tests"

tasks:
  macos_rolling:
    name: "Latest rolling release Bazel"
    bazel: rolling
    <<: *common

  macos_last_green:
    name: "Last Green Bazel"
    bazel: last_green
    <<: *common

  macos_rolling_head_deps:
    name: "Latest rolling release Bazel with Head Deps"
    bazel: rolling
    shell_commands:
    # Update the WORKSPACE to use head versions of some deps to ensure nothing
    # has landed on them breaking this project.
    - .bazelci/update_workspace_to_deps_heads.sh
    <<: *common

MobileNativeFoundation_Kronos,github-actions,Build
MobileNativeFoundation_Kronos,github-actions,runs-on: macos-latest
MobileNativeFoundation_Kronos,github-actions,isk test //Tests:KronosTestsiOS --test_output=errors
MobileNativeFoundation_Kronos,github-actions,isk test //Tests:KronosTestsMacOS --test_output=errors
adobe_rules_gitops,github-actions,-version:
adobe_rules_gitops,github-actions,-version }}
adobe_rules_gitops,github-actions,cache
adobe_rules_gitops,github-actions,key: bazel-${{ matrix.bazel-version }}-${{ github.sha }}
adobe_rules_gitops,github-actions,-version }}-
adobe_rules_gitops,github-actions,-
adobe_rules_gitops,github-actions,isk-linux-amd64"
adobe_rules_gitops,github-actions,"
adobe_rules_gitops,github-actions,build/buildtools/releases/download/0.29.0/buildifier"
adobe_rules_gitops,github-actions,build //...
adobe_rules_gitops,github-actions,run //:buildifier-check
adobe_rules_gitops,github-actions,\
adobe_rules_gitops,github-actions,\
adobe_rules_gitops,github-actions,run //:buildifier-fix\" and commit the changes."
adobe_rules_gitops,github-actions,test //...
adobe_rules_gitops,github-actions,build //...
adobe_rules_gitops,github-actions,test //...
adobe_rules_gitops,github-actions,cache
adobe_rules_gitops,github-actions,key: bazel-${{ env.USE_BAZEL_VERSION }}-${{ github.sha }}
adobe_rules_gitops,github-actions,-${{ env.USE_BAZEL_VERSION }}-
adobe_rules_gitops,github-actions,-
adobe_rules_gitops,github-actions,isk-linux-amd64"
adobe_rules_gitops,github-actions,"
adobe_rules_gitops,github-actions,build/buildtools/releases/download/0.29.0/buildifier"
adobe_rules_gitops,github-actions,build //...
adobe_rules_gitops,github-actions,run //:buildifier-check
adobe_rules_gitops,github-actions,\
adobe_rules_gitops,github-actions,\
adobe_rules_gitops,github-actions,run //:buildifier-fix\" and commit the changes."
adobe_rules_gitops,github-actions,test //...
adobe_rules_gitops,github-actions,build //...
adobe_rules_gitops,github-actions,test //...
sail-sg_envpool,github-actions,-cache.sail:8080"
sail-sg_envpool,github-actions,Build and Test
sail-sg_envpool,github-actions,-cache.sail:8080"
sail-sg_envpool,github-actions,-cache.sail:8080"
bufbuild_protoc-gen-validate,github-actions,isk
bufbuild_protoc-gen-validate,github-actions,~/.cache/protoc
bufbuild_protoc-gen-validate,github-actions,build/buildtools/buildozer@${BDR_VER}
prysmaticlabs_prysm,github-actions,builds for blst.
prysmaticlabs_prysm,github-actions,for now...
carbon-language_carbon-lang,github-actions,isk.
carbon-language_carbon-lang,github-actions,isk
carbon-language_carbon-lang,github-actions,isk
carbon-language_carbon-lang,github-actions,isk'
carbon-language_carbon-lang,github-actions,isk
carbon-language_carbon-lang,github-actions,isk --version
carbon-language_carbon-lang,github-actions,configuration and print basic info to ease debugging.
carbon-language_carbon-lang,github-actions,and print info
carbon-language_carbon-lang,github-actions,won't otherwise detect,
carbon-language_carbon-lang,github-actions,rc <<EOF
carbon-language_carbon-lang,github-actions,isk info
carbon-language_carbon-lang,github-actions,/issues/14113#issuecomment-999794586
carbon-language_carbon-lang,github-actions,isk build -c ${{ matrix.build_mode }} //...:all
carbon-language_carbon-lang,github-actions,/issues/14113#issuecomment-999794586
carbon-language_carbon-lang,github-actions,isk test -c ${{ matrix.build_mode }} //...:all
grpc_grpc-proto,github-actions,build
grpc_grpc-proto,github-actions,build //...
magma_magma,github-actions,-base:latest"
magma_magma,github-actions,-base-image-sha-c4de1e5
magma_magma,github-actions,rc'
magma_magma,github-actions,'
magma_magma,github-actions,/**'
magma_magma,github-actions,Base Image
magma_magma,github-actions,base image!"
magma_magma,github-actions,download fails we can fail before we do all the lengthy work below
magma_magma,github-actions,if: always()
magma_magma,github-actions,-cc-codecoverage
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION_C_CPP }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
magma_magma,github-actions,/issues/8178
magma_magma,github-actions,is flaky for remote caches - the flags below are helping. See GH13026 for details.
magma_magma,github-actions,coverage \
magma_magma,github-actions,_test_cc_coverage_profile \
magma_magma,github-actions,-out/_coverage/_coverage_report.dat .
magma_magma,github-actions,profile
magma_magma,github-actions,test C and C++ coverage profile
magma_magma,github-actions,_test_cc_coverage_profile
magma_magma,github-actions,C/C++ coverage failure to slack
magma_magma,github-actions,-cc-codecoverage.conclusion == 'failure' ||
magma_magma,github-actions,"
magma_magma,github-actions,Base Image
magma_magma,github-actions,base image!"
magma_magma,github-actions,download fails we can fail before we do all the lengthy work below
magma_magma,github-actions,if: always()
magma_magma,github-actions,-python-codecoverage
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION_PYTHON }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
magma_magma,github-actions,/issues/8178
magma_magma,github-actions,is flaky for remote caches - the flags below are helping. See GH13026 for details.
magma_magma,github-actions,coverage \
magma_magma,github-actions,_test_python_coverage_profile \
magma_magma,github-actions,-out/_coverage/_coverage_report.dat .
magma_magma,github-actions,profile
magma_magma,github-actions,test python coverage profile
magma_magma,github-actions,_test_python_coverage_profile
magma_magma,github-actions,Python coverage failure to slack
magma_magma,github-actions,-python-codecoverage.conclusion == 'failure' ||
magma_magma,github-actions,"
magma_magma,github-actions,rc'
magma_magma,github-actions,'
magma_magma,github-actions,/**'
magma_magma,github-actions,on:
magma_magma,github-actions,_profile:
magma_magma,github-actions,profile data (default: false)'
magma_magma,github-actions,-base:latest"
magma_magma,github-actions,-base-image-sha-c4de1e5
magma_magma,github-actions,.yml'
magma_magma,github-actions,'
magma_magma,github-actions,rc'
magma_magma,github-actions,_build_and_test:
magma_magma,github-actions,-config: ""
magma_magma,github-actions,-target: "//..."
magma_magma,github-actions,-config: "--config=asan"
magma_magma,github-actions,query 'kind(cc.*, //...)'`"
magma_magma,github-actions,-config: "--config=production"
magma_magma,github-actions,query 'kind(cc.*, //...)'`"
magma_magma,github-actions,Build & Test Job
magma_magma,github-actions,Base Image
magma_magma,github-actions,base image!"
magma_magma,github-actions,build, test, starlark format check & python import check
magma_magma,github-actions,remote cache.' 1>&2
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
magma_magma,github-actions,-config }}' 1>&2
magma_magma,github-actions,build \
magma_magma,github-actions,-target }} \
magma_magma,github-actions,-config }} \
magma_magma,github-actions,_build_all_profile
magma_magma,github-actions,-config }}' 1>&2
magma_magma,github-actions,test \
magma_magma,github-actions,-target }} \
magma_magma,github-actions,-config }} \
magma_magma,github-actions,_test_all_profile || TEST_FAILED="true"
magma_magma,github-actions,unit-test results
magma_magma,github-actions,_unit_test_results/
magma_magma,github-actions,-testlogs/ -name 'test.xml') )
magma_magma,github-actions,_unit_test_results/test_result_${UNIQUE_FILENAME_INDEX}.xml"
magma_magma,github-actions,-config }}" ];
magma_magma,github-actions,run //:check_starlark_format;
magma_magma,github-actions,-config }}" ];
magma_magma,github-actions,ification check.' 1>&2
magma_magma,github-actions,/scripts/test_python_service_imports.sh;
magma_magma,github-actions,test' failed!"
magma_magma,github-actions,_unit_test_results" -o "lte/gateway/test_results/merged_unit_test_reports.xml"
magma_magma,github-actions,build profile
magma_magma,github-actions,_profile == 'true' }}
magma_magma,github-actions,-config }}
magma_magma,github-actions,_build_all_profile
magma_magma,github-actions,test profile
magma_magma,github-actions,_profile == 'true' }}
magma_magma,github-actions,-config }}
magma_magma,github-actions,_test_all_profile
magma_magma,github-actions,-config }}
magma_magma,github-actions,-config }}
magma_magma,github-actions,-config }}
magma_magma,github-actions,-config }}
magma_magma,github-actions,-config }}"
magma_magma,github-actions,Build & Test"
magma_magma,github-actions,_build_and_test_success:
magma_magma,github-actions,successful
magma_magma,github-actions,_build_and_test
magma_magma,github-actions,_build_and_test job
magma_magma,github-actions,_build_and_test:
magma_magma,github-actions,build and test status
magma_magma,github-actions,_build_and_test
magma_magma,github-actions,_build_and_test_success]
magma_magma,github-actions,_build_and_test_success.outputs.success }}"
magma_magma,github-actions,_build_and_test_success"
magma_magma,github-actions,_build_and_test_success == "true" || $files_changed != "true" ]];
magma_magma,github-actions,build and test job passed or was skipped"
magma_magma,github-actions,build and test job failed"
magma_magma,github-actions,_package:
magma_magma,github-actions,Package Job
magma_magma,github-actions,Base Image
magma_magma,github-actions,base image!"
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
magma_magma,github-actions,build lte/gateway/release:sctpd_deb_pkg lte/gateway/release:magma_deb_pkg \
magma_magma,github-actions,_build_package_profile
magma_magma,github-actions,profile
magma_magma,github-actions,_profile == 'true' }}
magma_magma,github-actions,build package profile
magma_magma,github-actions,_build_package_profile
magma_magma,github-actions,Package Job"
magma_magma,github-actions,Build & Test"
magma_magma,github-actions,ified python files
magma_magma,github-actions,.sh
magma_magma,github-actions,.sh`"
magma_magma,github-actions,Build & Test"
magma_magma,github-actions,ified c or c++ files
magma_magma,github-actions,.sh
magma_magma,github-actions,.sh`"
magma_magma,github-actions,Build & Test"
magma_magma,github-actions,Dev Build
magma_magma,github-actions,:
magma_magma,github-actions,run: |
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}";' magma
magma_magma,github-actions,query '"${QUERY}"'`;' magma
magma_magma,github-actions,-built script executables to '/usr/local/bin/'
magma_magma,github-actions,_integ_tests.sh;' magma
magma_magma,github-actions,_integ_test_post_build
magma_magma,github-actions,integration test results
magma_magma,github-actions,profile
magma_magma,github-actions,profile lte integ tests
magma_magma,github-actions,_profile_lte_integ_tests
magma_magma,github-actions,"
magma_magma,github-actions,LTE integration test failed in run: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
magma_magma,github-actions,Base & DevContainer
magma_magma,github-actions,-base/Dockerfile
magma_magma,github-actions,-base/Dockerfile
magma_magma,github-actions,-base
magma_magma,github-actions,-base/Dockerfile
magma_magma,github-actions,_base:
magma_magma,github-actions,_base
magma_magma,github-actions,-base:latest"
magma_magma,github-actions,-base-image-sha-c4de1e5
magma_magma,github-actions,ified C/C++ targets
magma_magma,github-actions,Base Image
magma_magma,github-actions,base image!"
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}"
magma_magma,github-actions,profile
magma_magma,github-actions,build gcc problems profile
magma_magma,github-actions,_build_gcc_problems_profile
magma_magma,github-actions,ified C/C++ targets"
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}";' magma
magma_magma,github-actions,/scripts/run_sudo_tests.sh --retry-on-failure --retry-attempts 1;' magma
magma_magma,github-actions,Debian Build
magma_magma,github-actions,-base:latest"
magma_magma,github-actions,-base-image-sha-c4de1e5
magma_magma,github-actions,-magma-deb:
magma_magma,github-actions,rc_setup.sh "${{ env.CACHE_KEY }}" "${{ env.REMOTE_DOWNLOAD_OPTIMIZATION }}" "${{ secrets.BAZEL_REMOTE_PASSWORD }}" && \
magma_magma,github-actions,build lte/gateway/release:sctpd_deb_pkg lte/gateway/release:magma_deb_pkg \
magma_magma,github-actions,_build_package_profile && \
magma_magma,github-actions,-bin/lte/gateway/release/magma*.deb /workspaces/magma/'
magma_magma,github-actions,Debian Integration Tests"
magma_magma,github-actions,Debian LTE integration test failed in run: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
pytorch_FBGEMM,github-actions,:
pytorch_FBGEMM,github-actions,run: |
pytorch_FBGEMM,github-actions,# verify content
pytorch_FBGEMM,github-actions,' | sha256sum --quiet -c
pytorch_FBGEMM,github-actions,- name: Build FBGEMM with bazel
pytorch_FBGEMM,github-actions,build --verbose_explanations --verbose_failures --compilation_mode opt :*
pytorch_FBGEMM,github-actions,build
pytorch_FBGEMM,github-actions,test --compilation_mode opt :*
sematic-ai_sematic,circleci,:
sematic-ai_sematic,circleci,build system used for building Android projects
sematic-ai_sematic,circleci,Apt repository
sematic-ai_sematic,circleci,.gpg
sematic-ai_sematic,circleci,.gpg /etc/apt/trusted.gpg.d/
sematic-ai_sematic,circleci,.list
sematic-ai_sematic,circleci,from Apt
sematic-ai_sematic,circleci,install-java:
sematic-ai_sematic,circleci,#- install-java
sematic-ai_sematic,circleci,test //sematic/... --test_output=all
sematic-ai_sematic,circleci,coverage //sematic/... --test_output=all --combined_report=lcov --test_tag_filters=cov
sematic-ai_sematic,circleci,info output_path)/_coverage/_coverage_report.dat coverage.dat
sematic-ai_sematic,circleci,run //sematic/tests/integration:test_pip_install
VirusTotal_yara,github-actions,-build:
VirusTotal_yara,github-actions,installed, see:
VirusTotal_yara,github-actions,isk download directory.
VirusTotal_yara,github-actions,isk download
VirusTotal_yara,github-actions,-cache
VirusTotal_yara,github-actions,isk
VirusTotal_yara,github-actions,build @jansson//... //tests/...
VirusTotal_yara,github-actions,test --test_output=errors //tests/...
autodiff_autodiff,github-actions,on:
autodiff_autodiff,github-actions,:
autodiff_autodiff,github-actions,conda devenv
autodiff_autodiff,github-actions,build //examples/forward:all
autodiff_autodiff,github-actions,build //examples/reverse:all
autodiff_autodiff,github-actions,test //examples/forward:all --test_output=all
autodiff_autodiff,github-actions,test //examples/reverse:all --test_output=all
CodeIntelligenceTesting_jazzer,github-actions,#15919
CodeIntelligenceTesting_jazzer,github-actions,rc
CodeIntelligenceTesting_jazzer,github-actions,rc
CodeIntelligenceTesting_jazzer,github-actions,rc
CodeIntelligenceTesting_jazzer,github-actions,rc
CodeIntelligenceTesting_jazzer,github-actions,rc
CodeIntelligenceTesting_jazzer,github-actions,isk build ${{env.BUILD_BUDDY_CONFIG}} deploy:jazzer :jazzer_release
CodeIntelligenceTesting_jazzer,github-actions,cquery --output=files deploy:jazzer) jazzer-${{ matrix.name }}.jar
CodeIntelligenceTesting_jazzer,github-actions,cquery --output=files :jazzer_release) jazzer-${{ matrix.name }}.tar.gz
CodeIntelligenceTesting_jazzer,github-actions,run @rules_jvm_external//private/tools/java/rules/jvm/external/jar:MergeJars -- \
CodeIntelligenceTesting_jazzer,github-actions,build/buildtools/buildifier@latest
CodeIntelligenceTesting_jazzer,github-actions,-disk"
CodeIntelligenceTesting_jazzer,github-actions,/issues/13944#issuecomment-1271745466.
CodeIntelligenceTesting_jazzer,github-actions,_args: "--repo_env=CC --features=-layering_check"
CodeIntelligenceTesting_jazzer,github-actions,-disk"
CodeIntelligenceTesting_jazzer,github-actions,-disk"
CodeIntelligenceTesting_jazzer,github-actions,#15919
CodeIntelligenceTesting_jazzer,github-actions,disk cache
CodeIntelligenceTesting_jazzer,github-actions,-disk-cache-${{ matrix.arch }}-${{ matrix.jdk }}
CodeIntelligenceTesting_jazzer,github-actions,_args }} //...
CodeIntelligenceTesting_jazzer,github-actions,_args }} --test_tag_filters=-no-${{ matrix.arch }}-jdk${{ matrix.jdk }} //...
CodeIntelligenceTesting_jazzer,github-actions,-testlogs*/**/test.log
grpc-ecosystem_grpc-gateway,github-actions,key: v1-bazel-cache-${{ hashFiles('repositories.bzl') }}
grpc-ecosystem_grpc-gateway,github-actions,-cache-
grpc-ecosystem_grpc-gateway,github-actions,run: |
grpc-ecosystem_grpc-gateway,github-actions,rc << EOF
grpc-ecosystem_grpc-gateway,github-actions,build --test_output errors
grpc-ecosystem_grpc-gateway,github-actions,/issues/3645
grpc-ecosystem_grpc-gateway,github-actions,.build/versions/0.23.0/command-line-reference.html
grpc-ecosystem_grpc-gateway,github-actions,run //:gazelle -- update-repos -from_file=go.mod -to_macro=repositories.bzl%go_repositories
grpc-ecosystem_grpc-gateway,github-actions,:
grpc-ecosystem_grpc-gateway,github-actions,key: v1-bazel-cache-${{ hashFiles('repositories.bzl') }}
grpc-ecosystem_grpc-gateway,github-actions,-cache-
grpc-ecosystem_grpc-gateway,github-actions,run: |
grpc-ecosystem_grpc-gateway,github-actions,rc << EOF
grpc-ecosystem_grpc-gateway,github-actions,build --test_output errors
grpc-ecosystem_grpc-gateway,github-actions,/issues/3645
grpc-ecosystem_grpc-gateway,github-actions,.build/versions/0.23.0/command-line-reference.html
grpc-ecosystem_grpc-gateway,github-actions,BUILD files are up-to-date
grpc-ecosystem_grpc-gateway,github-actions,run //:gazelle && git diff --exit-code
grpc-ecosystem_grpc-gateway,github-actions,run //:gazelle -- update-repos -from_file=go.mod -to_macro=repositories.bzl%go_repositories &&
grpc-ecosystem_grpc-gateway,github-actions,BUILD files
grpc-ecosystem_grpc-gateway,github-actions,run //:buildifier && git diff --exit-code
grpc-ecosystem_grpc-gateway,github-actions,run: bazel test //...
grpc-ecosystem_grpc-gateway,buildkite,---
platforms:
  ubuntu1804:
    build_flags:
    - "--build_tag_filters=-nolinux"
    build_targets:
    - "//..."
    test_flags:
    - "--features=race"
    - "--test_tag_filters=-nolinux"
    test_targets:
    - "//..."
  macos:
    build_flags:
    - "--build_tag_filters=-nomacos"
    build_targets:
    - "//..."
    test_flags:
    - "--features=race"
    - "--test_tag_filters=-nomacos"
    test_targets:
    - "//..."

LandRover_StaffjoyV2,github-actions,run: ./vagrant/bazel.sh
LandRover_StaffjoyV2,github-actions,build/buildtools/buildifier@latest
evilcorpltd_aTox,github-actions,:
evilcorpltd_aTox,github-actions,cache
evilcorpltd_aTox,github-actions,key: bazel-${{ hashFiles('WORKSPACE', 'bazel/**') }}
evilcorpltd_aTox,github-actions,-
evilcorpltd_aTox,github-actions,build //...
evilcorpltd_aTox,github-actions,test //...
evilcorpltd_aTox,github-actions,build/buildtools/releases/download/4.0.1/buildifier
google_incremental-dom,circleci,workspace or the
google_incremental-dom,circleci,is controlled
google_incremental-dom,circleci,v0.22.0. When updating this
google_incremental-dom,circleci,version in the "WORKSPACE" file.
google_incremental-dom,circleci,:0.28.0
google_incremental-dom,circleci,# repository cache in order to make subsequent builds faster.
google_incremental-dom,circleci,_repository_cache"
google_incremental-dom,circleci,build ...
google_incremental-dom,circleci,test ...
google_google-toolbox-for-mac,github-actions,:
google_google-toolbox-for-mac,github-actions,test
google_google-toolbox-for-mac,github-actions,isk
google_google-toolbox-for-mac,github-actions,isk test --build_tests_only -c "${{ matrix.MODE }}" //...
google_santa,github-actions,test --test_strategy=exclusive --test_output=errors --runs_per_test 50 -t- :unit_tests --define=SANTA_BUILD_TYPE=adhoc
google_santa,github-actions,build --apple_generate_dsym -c opt :release --define=SANTA_BUILD_TYPE=adhoc
google_santa,github-actions,test :unit_tests --define=SANTA_BUILD_TYPE=adhoc --test_output=errors
google_santa,github-actions,-out/_coverage/_coverage_report.dat
google_re2,github-actions,)
google_re2,github-actions,.sh
envoyproxy_data-plane-api,circleci,.test
p4lang_p4c,github-actions,"
p4lang_p4c,github-actions,-${{ github.event.pull_request.number || github.ref }}
p4lang_p4c,github-actions,isk-linux-amd64
p4lang_p4c,github-actions,cache
p4lang_p4c,github-actions,.build/versions/master/output_directories.html
p4lang_p4c,github-actions,"
p4lang_p4c,github-actions,isk
p4lang_p4c,github-actions,isk/releases/download/v1.7.1/$BAZEL"
p4lang_p4c,github-actions,- name: Install Flex and Bison
p4lang_p4c,github-actions,build //... --verbose_failures --distinct_host_configuration=false
p4lang_p4c,github-actions,project depending on p4c as a subproject.
p4lang_p4c,github-actions,isk-linux-amd64
p4lang_p4c,github-actions,cache
p4lang_p4c,github-actions,.build/versions/master/output_directories.html
p4lang_p4c,github-actions,"
p4lang_p4c,github-actions,isk
p4lang_p4c,github-actions,isk/releases/download/v1.4.0/$BAZEL"
p4lang_p4c,github-actions,- name: Install Flex and Bison
p4lang_p4c,github-actions,/example
p4lang_p4c,github-actions,build //... --verbose_failures --distinct_host_configuration=false
google_differential-privacy,github-actions,Tests
google_differential-privacy,github-actions,Tests
google_differential-privacy,github-actions,/
google_differential-privacy,github-actions,-cc-cache
google_differential-privacy,github-actions,isk is installed
google_differential-privacy,github-actions,isk --version
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,isk test --test_timeout_filters=-long,-eternal ...
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,isk test ...
google_differential-privacy,github-actions,Tests
google_differential-privacy,github-actions,/
google_differential-privacy,github-actions,-java-cache
google_differential-privacy,github-actions,isk is installed
google_differential-privacy,github-actions,isk --version
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,isk test --test_timeout_filters=-long,-eternal ...
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,Tests
google_differential-privacy,github-actions,/
google_differential-privacy,github-actions,-go-cache
google_differential-privacy,github-actions,isk is installed
google_differential-privacy,github-actions,isk --version
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,isk test --test_timeout_filters=-eternal ...
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,Tests
google_differential-privacy,github-actions,/
google_differential-privacy,github-actions,-pob-cache
google_differential-privacy,github-actions,isk is installed
google_differential-privacy,github-actions,isk --version
google_differential-privacy,github-actions,isk build ...
google_differential-privacy,github-actions,isk test --test_timeout_filters=-eternal ...
google_benchmark,github-actions,.sh
google_benchmark,github-actions,on:
google_benchmark,github-actions,.${{ matrix.os }}
google_benchmark,github-actions,cache
google_benchmark,github-actions,-cache
google_benchmark,github-actions,"
google_benchmark,github-actions,build //:benchmark //:benchmark_main //test/...
google_benchmark,github-actions,test --test_output=all //test/...
livegrep_livegrep,github-actions,rc
livegrep_livegrep,github-actions,rc
livegrep_livegrep,github-actions,rc
livegrep_livegrep,github-actions,build
livegrep_livegrep,github-actions,build //...
livegrep_livegrep,github-actions,test
livegrep_livegrep,github-actions,test --test_arg=-test.v //...
livegrep_livegrep,github-actions,fetch ourselves. If a Go file ins't formatted
livegrep_livegrep,github-actions,info output_base)/external/go_sdk/bin/gofmt
livegrep_livegrep,circleci,-cache
livegrep_livegrep,circleci,-cache
livegrep_livegrep,circleci,
google_cpu_features,github-actions,on:
google_cpu_features,github-actions,:
google_cpu_features,github-actions,run: |
google_cpu_features,github-actions,.gpg
google_cpu_features,github-actions,.gpg /etc/apt/trusted.gpg.d/
google_cpu_features,github-actions,.list
google_cpu_features,github-actions,bazel --version
google_cpu_features,github-actions,test -s --verbose_failures //...
bazelbuild_rules_dotnet,buildkite,---
buildifier: latest
tasks:
  api_md_docs:
    platform: ubuntu1804
    name: api_md_docs
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    build_targets:
      - "//docs:my-docs"

  linux_amd64_3.1.407:
    platform: ubuntu1804
    name: linux_amd64_3.1.407
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    test_targets:
      - "//..."
  darwin_amd64_3.1.407:
    platform: macos
    name: darwin_amd64_3.1.407
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
    test_targets:
      - "//..."
  windows_amd64_3.1.407:
    platform: windows
    name: windows_amd64_3.1.407
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
    test_targets:
      - "//..."

  linux_amd64_5.0.404:
    platform: ubuntu1804
    name: linux_amd64_5.0.404
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
    test_targets:
      - "//..."
  darwin_amd64_5.0.404:
    platform: macos
    name: darwin_amd64_5.0.404
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
    test_targets:
      - "//..."
  windows_amd64_5.0.404:
    platform: windows
    name: windows_amd64_5.0.404
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
    test_targets:
      - "//..."

  linux_amd64_6.0.101:
    platform: ubuntu1804
    name: linux_amd64_6.0.101
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
    test_targets:
      - "//..."
  darwin_amd64_6.0.101:
    platform: macos
    name: darwin_amd64_6.0.101
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
    test_targets:
      - "//..."
  windows_amd64_6.0.101:
    platform: windows
    name: windows_amd64_6.0.101
    build_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
    build_targets:
      - "//..."
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
    test_targets:
      - "//..."

  ef_linux_amd64_3.1.407:
    platform: ubuntu1804
    name: ef_linux_amd64_3.1.407
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    test_targets:
      - "//..."
  ef_windows_amd64_3.1.407:
    platform: windows
    name: ef_windows_amd64_3.1.407
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
    test_targets:
      - "//..."
  ef_darwin_amd64_3.1.407:
    platform: macos
    name: ef_darwin_amd64_3.1.407
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
    test_targets:
      - "//..."

  ef_linux_amd64_5.0.404:
    platform: ubuntu1804
    name: ef_linux_amd64_5.0.404
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
    test_targets:
      - "//..."
  ef_windows_amd64_5.0.404:
    platform: windows
    name: ef_windows_amd64_5.0.404
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
    test_targets:
      - "//..."
  ef_darwin_amd64_5.0.404:
    platform: macos
    name: ef_darwin_amd64_5.0.404
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
    test_targets:
      - "//..."

  ef_linux_amd64_6.0.101:
    platform: ubuntu1804
    name: ef_linux_amd64_6.0.101
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
    test_targets:
      - "//..."
  ef_windows_amd64_6.0.101:
    platform: windows
    name: ef_windows_amd64_6.0.101
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
    test_targets:
      - "//..."
  ef_darwin_amd64_6.0.101:
    platform: macos
    name: ef_darwin_amd64_6.0.101
    working_directory: examples/ef
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
    test_targets:
      - "//..."

  grpc_linux_amd64_3.1.407:
    platform: ubuntu1804
    name: grpc_linux_amd64_3.1.407
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    test_targets:
      - "//..."
  grpc_windows_amd64_3.1.407:
    platform: windows
    name: grpc_windows_amd64_3.1.407
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
    test_targets:
      - "//..."
  grpc_darwin_amd64_3.1.407:
    platform: macos
    name: grpc_darwin_amd64_3.1.407
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
    test_targets:
      - "//..."

  grpc_linux_amd64_5.0.404:
    platform: ubuntu1804
    name: grpc_linux_amd64_5.0.404
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
    test_targets:
      - "//..."
  grpc_windows_amd64_5.0.404:
    platform: windows
    name: grpc_windows_amd64_5.0.404
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
    test_targets:
      - "//..."
  grpc_darwin_amd64_5.0.404:
    platform: macos
    name: grpc_darwin_amd64_5.0.404
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
    test_targets:
      - "//..."

  grpc_linux_amd64_6.0.101:
    platform: ubuntu1804
    name: grpc_linux_amd64_6.0.101
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
    test_targets:
      - "//..."
  grpc_windows_amd64_6.0.101:
    platform: windows
    name: grpc_windows_amd64_6.0.101
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
    test_targets:
      - "//..."
  grpc_darwin_amd64_6.0.101:
    platform: macos
    name: grpc_darwin_amd64_6.0.101
    working_directory: examples/grpc
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
    test_targets:
      - "//..."

  type_providers_linux_amd64_3.1.407:
    platform: ubuntu1804
    name: type_providers_linux_amd64_3.1.407
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_3.1.407"
    test_targets:
      - "//..."
  type_providers_windows_amd64_3.1.407:
    platform: windows
    name: type_providers_windows_amd64_3.1.407
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_3.1.407"
    test_targets:
      - "//..."
  type_providers_darwin_amd64_3.1.407:
    platform: macos
    name: type_providers_darwin_amd64_3.1.407
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_3.1.407"
    test_targets:
      - "//..."

  type_providers_linux_amd64_5.0.404:
    platform: ubuntu1804
    name: type_providers_linux_amd64_5.0.404
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_5.0.404"
    test_targets:
      - "//..."
  type_providers_windows_amd64_5.0.404:
    platform: windows
    name: type_providers_windows_amd64_5.0.404
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_5.0.404"
    test_targets:
      - "//..."
  type_providers_darwin_amd64_5.0.404:
    platform: macos
    name: type_providers_darwin_amd64_5.0.404
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_5.0.404"
    test_targets:
      - "//..."

  type_providers_linux_amd64_6.0.101:
    platform: ubuntu1804
    name: type_providers_linux_amd64_6.0.101
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:linux_amd64_6.0.101"
    test_targets:
      - "//..."
  type_providers_windows_amd64_6.0.101:
    platform: windows
    name: type_providers_windows_amd64_6.0.101
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:windows_amd64_6.0.101"
    test_targets:
      - "//..."
  type_providers_darwin_amd64_6.0.101:
    platform: macos
    name: type_providers_darwin_amd64_6.0.101
    working_directory: examples/type_providers
    test_flags:
      - "--host_platform"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
      - "--platforms"
      - "@io_bazel_rules_dotnet//dotnet/toolchain:darwin_amd64_6.0.101"
    test_targets:
      - "//..."

wix_exodus,github-actions,test //...
wix_exodus,github-actions,:3.5.0
wix_exodus,github-actions,isk
wix_exodus,github-actions,isk-linux-amd64
wix_exodus,github-actions,which bazel
wix_exodus,github-actions,cache
wix_exodus,github-actions,_cache
wix_exodus,github-actions,run: |
wix_exodus,github-actions,_cache -k //...
google_chrome-ssh-agent,github-actions,isk@v2
google_chrome-ssh-agent,github-actions,build ...
google_chrome-ssh-agent,github-actions,test --test_output=errors ...
google_chrome-ssh-agent,github-actions,-bin/chrome-ssh-agent.zip
google_chrome-ssh-agent,github-actions,-bin/chrome-ssh-agent.zip
google_chrome-ssh-agent,github-actions,isk@v2
google_chrome-ssh-agent,github-actions,build ...
google_chrome-ssh-agent,github-actions,isk@v2
google_chrome-ssh-agent,github-actions,build ...
google_chrome-ssh-agent,github-actions,test --test_output=errors ...
google_chrome-ssh-agent,github-actions,'s dependencies. See the following feature requests:
google_chrome-ssh-agent,github-actions,only)
google_chrome-ssh-agent,github-actions,isk@v2
google_chrome-ssh-agent,github-actions,//:gazelle-update-repos
stackb_rules_proto,buildkite,---
buildifier:
  version: 5.1.0
  warnings: "-function-docstring,-function-docstring-header,-module-docstring,-function-docstring-args,-list-append"
bazel: 5.1.1
tasks:
  default_workspace_ubuntu1804:
    platform: ubuntu1804
    test_targets:
      - //example/...
      - //language/...
      - //pkg/...
      - //plugin/...
      - //rules/...
      - //toolchain/...
      - -//pkg/plugin/grpc/grpc:grpc_test # TODO(pcj): error "bazel_testing: read-only filesystem"
    test_flags:
      - --config=bazelci
      - --deleted_packages=//plugin/grpc-ecosystem/grpc-gateway
  default_workspace_macos:
    platform: macos
    test_targets:
      - //example/...
      - //language/...
      - //pkg/...
      - //plugin/...
      - //rules/...
      - //toolchain/...
    test_flags:
      - --deleted_packages=//plugin/grpc-ecosystem/grpc-gateway

google-research_turkish-morphology,github-actions,run: |
google-research_turkish-morphology,github-actions,-5.0.0-installer-linux-x86_64.sh"
google-research_turkish-morphology,github-actions,-5.0.0-installer-linux-x86_64.sh
google-research_turkish-morphology,github-actions,-5.0.0-installer-linux-x86_64.sh --user
google-research_turkish-morphology,github-actions,-5.0.0-installer-linux-x86_64.sh
google-research_turkish-morphology,github-actions,run: |
google-research_turkish-morphology,github-actions,build -c opt //...
google-research_turkish-morphology,github-actions,test -c opt //... --test_output=errors
brendanhay_amazonka,github-actions,/amazonka/repo
brendanhay_amazonka,github-actions,rc.local <<EOF
brendanhay_amazonka,github-actions,/amazonka/repo
brendanhay_amazonka,github-actions,rc.local <<EOF
brendanhay_amazonka,github-actions,build //docs:bundle
brendanhay_amazonka,github-actions,-bin/docs/bundle.tar -C public
brendanhay_amazonka,github-actions,/amazonka/repo
brendanhay_amazonka,github-actions,rc.local <<EOF
brendanhay_amazonka,github-actions,build //lib/... //gen/...
brendanhay_amazonka,github-actions,test  //lib/...
wasmerio_wasmer-go,github-actions,build
wasmerio_wasmer-go,github-actions,isk-${GOOS}-amd64"
wasmerio_wasmer-go,github-actions,"
wasmerio_wasmer-go,github-actions,"
wasmerio_wasmer-go,github-actions," build //...
google_j2cl,github-actions,isk"
google_j2cl,github-actions,isk-os: linux
google_j2cl,github-actions,isk-os: darwin
google_j2cl,github-actions,isk binary cache
google_j2cl,github-actions,isk-cache
google_j2cl,github-actions,isk
google_j2cl,github-actions,isk-${{ env.BAZELISK_VERSION }}
google_j2cl,github-actions,isk
google_j2cl,github-actions,isk-cache.outputs.cache-hit != 'true'
google_j2cl,github-actions,chmod +x "${BAZELISK_BIN}/bazel"
google_j2cl,github-actions,"
google_j2cl,github-actions,cache
google_j2cl,github-actions,"
google_j2cl,github-actions,- name: Configure bazel
google_j2cl,github-actions,rc
google_j2cl,github-actions,rc
bazelbuild_bazel-gazelle,buildkite,---
tasks:
  ubuntu1804:
    platform: ubuntu1804
    build_targets:
    - "..."
    run_targets:
    # Run Gazelle on repo to verify BUILD files are up-to-date. The output shouldn't differ
    # between platforms, so we only run it from one.
    - "//:gazelle_ci"
    test_targets:
    - "..."
  ubuntu1804_bcr_tests:
    name: BCR test module
    platform: ubuntu1804
    # Includes https://github.com/bazelbuild/bazel/commit/3f92232c17bf4aad51880c811c291ba4b5b42721,
    # which will eventually be released in Bazel 5.3.0.
    bazel_version: 3f92232c17bf4aad51880c811c291ba4b5b42721
    working_directory: tests/bcr
    build_targets:
      - "//..."
      - "//:gazelle"
    test_targets:
      - "//..."
  ubuntu1604:
    platform: ubuntu1604
    build_targets:
    - "..."
    test_targets:
    - "..."
  macos:
    platform: macos
    build_targets:
    - "..."
    test_targets:
    - "..."
  windows:
    platform: windows
    build_targets:
    - "--"
    - "..."
    - "-//cmd/autogazelle/..."
    test_targets:
    - "--"
    - "..."
    # autogazelle is only supported on UNIX-like platforms.
    # It requires UNIX domain sockets.
    - "-//cmd/autogazelle/..."
    # Stardoc produces different line-endings on windows,
    # so the documentation it generates doesn't match the checked in files
    - "-//docs:all"
    # Fails to execute, apparently due to command-line length limit.
    - "-//internal:bazel_test"
    # gazelle prints file paths with backward slashes on windows,
    # which doesn't match the golden files generated on *nix.
    - "-//tests:fix_mode_print0"
    - "-//tests:fix_mode_strict"

openconfig_gnoi,github-actions,build"
openconfig_gnoi,github-actions,isk-linux-amd64
openconfig_gnoi,github-actions,cache
openconfig_gnoi,github-actions,.build/versions/master/output_directories.html
openconfig_gnoi,github-actions,"
openconfig_gnoi,github-actions,files change.
openconfig_gnoi,github-actions,') }}
openconfig_gnoi,github-actions,-${{ runner.os }}-build-
openconfig_gnoi,github-actions,isk
openconfig_gnoi,github-actions,isk/releases/download/v1.8.1/$BAZEL"
openconfig_gnoi,github-actions,- name: Build
openconfig_gnoi,github-actions,build //...
android_android-test,github-actions,isk build //:axt_m2repository
android_android-test,github-actions,isk test --test_tag_filters=robolectric,-gcb_ignore --build_tag_filters=robolectric --test_output=all ...
apache_rocketmq,github-actions,]
apache_rocketmq,github-actions,on:
apache_rocketmq,github-actions,jobs:
apache_rocketmq,github-actions,-compile (${{ matrix.os }})"
apache_rocketmq,github-actions,build --config=remote //...
apache_rocketmq,github-actions,test --config=remote --nocache_test_results //...
AcademySoftwareFoundation_openexr,github-actions,on:
AcademySoftwareFoundation_openexr,github-actions,build <GCC 9.3.0>
AcademySoftwareFoundation_openexr,github-actions,cache
AcademySoftwareFoundation_openexr,github-actions,"
AcademySoftwareFoundation_openexr,github-actions,-ubuntu
AcademySoftwareFoundation_openexr,github-actions,isk build //...
AcademySoftwareFoundation_openexr,github-actions,cache
AcademySoftwareFoundation_openexr,github-actions,"
AcademySoftwareFoundation_openexr,github-actions,-windows
AcademySoftwareFoundation_openexr,github-actions,isk build //...
AcademySoftwareFoundation_openexr,github-actions,build <Apple Clang14>
AcademySoftwareFoundation_openexr,github-actions,cache
AcademySoftwareFoundation_openexr,github-actions,"
AcademySoftwareFoundation_openexr,github-actions,-macos
AcademySoftwareFoundation_openexr,github-actions,isk build //...
beancount_beancount,github-actions,-ci
beancount_beancount,github-actions,install
beancount_beancount,github-actions,_5.3.0-linux-x86_64.deb
beancount_beancount,github-actions,_5.3.0-linux-x86_64.deb" | sha256sum --check
beancount_beancount,github-actions,_5.3.0-linux-x86_64.deb
beancount_beancount,github-actions,build
beancount_beancount,github-actions,rc.travis build //...
beancount_beancount,github-actions,test
beancount_beancount,github-actions,rc.travis test --test_output=errors //...
vaticle_typedb-studio,circleci,-linux:
vaticle_typedb-studio,circleci,install/linux.sh
vaticle_typedb-studio,circleci,-mac:
vaticle_typedb-studio,circleci,install/mac.sh
vaticle_typedb-studio,circleci,:
vaticle_typedb-studio,circleci,run:rbe -- << parameters.command >>
vaticle_typedb-studio,circleci,-mac
vaticle_typedb-studio,circleci,run @vaticle_dependencies//distribution/artifact:create-netrc
vaticle_typedb-studio,circleci,build //:assemble-platform --define APPLE_CODE_SIGN=yes --define APPLE_ID=$APPLE_ID --define APPLE_ID_PASSWORD=$APPLE_ID_PASSWORD --define APPLE_CODE_SIGNING_CERT_PASSWORD=$APPLE_CODE_SIGNING_CERT_PASSWORD --spawn_strategy=local
vaticle_typedb-studio,circleci,-bin/assemble-platform.zip ~/src
vaticle_typedb-studio,circleci,-linux
vaticle_typedb-studio,circleci,build //:assemble-platform
vaticle_typedb-studio,circleci,build //:assemble-linux-targz
vaticle_typedb-studio,circleci,-bin/typedb-studio-linux.tar.gz ~/dist/typedb-studio-linux-$(cat VERSION).tar.gz
vaticle_typedb-studio,circleci,-bin/assemble-platform.zip ~/src
vaticle_typedb-studio,circleci,-linux
vaticle_typedb-studio,circleci,run @vaticle_dependencies//tool/release/notes:create -- \
vaticle_typedb-studio,circleci,-linux
vaticle_typedb-studio,circleci,run --define version=$(cat VERSION) //:deploy-brew -- release
grpc_grpc-kotlin,github-actions,Build
grpc_grpc-kotlin,github-actions,:
grpc_grpc-kotlin,github-actions,cache
grpc_grpc-kotlin,github-actions,"
grpc_grpc-kotlin,github-actions,- name: Install bazelisk
grpc_grpc-kotlin,github-actions,isk-linux-amd64"
grpc_grpc-kotlin,github-actions,"
grpc_grpc-kotlin,github-actions,"
grpc_grpc-kotlin,github-actions," test //...
grpc_grpc-kotlin,github-actions," build //...
Tinder_bazel-diff,github-actions,isk
Tinder_bazel-diff,github-actions,isk@latest && export PATH=$PATH:$(go env GOPATH)/bin
Tinder_bazel-diff,github-actions,-diff tests
Tinder_bazel-diff,github-actions,isk test //cli/...
Tinder_bazel-diff,github-actions,-testlogs) ./test-logs; (cd test-logs; zip -r -X ../test-logs.zip .)
Tinder_bazel-diff,github-actions,isk
Tinder_bazel-diff,github-actions,isk@latest && export PATH=$PATH:$(go env GOPATH)/bin
Tinder_bazel-diff,github-actions,-diff tests
Tinder_bazel-diff,github-actions,isk coverage --combined_report=lcov //cli/...
Tinder_bazel-diff,github-actions,-testlogs) ./test-logs; (cd test-logs; zip -r -X ../test-logs.zip .)
Tinder_bazel-diff,github-actions,isk info output_path)/_coverage/_coverage_report.dat -o coverage/html
Tinder_bazel-diff,github-actions,isk
Tinder_bazel-diff,github-actions,isk@latest && export PATH=$PATH:$(go env GOPATH)/bin
Tinder_bazel-diff,github-actions,-diff_deploy.jar
Tinder_bazel-diff,github-actions,-diff_deploy.jar
Tinder_bazel-diff,github-actions,-diff_deploy.jar
Tinder_bazel-diff,github-actions,-diff-repro-1
Tinder_bazel-diff,github-actions,$(git rev-parse HEAD~1) $(git rev-parse HEAD)
Tinder_bazel-diff,github-actions,_diff_impact
Tinder_bazel-diff,github-actions,$(git rev-parse HEAD~1) $(git rev-parse HEAD)
keras-team_keras-cv,github-actions,build keras_cv/custom_ops:all
keras-team_keras-cv,github-actions,-bin/keras_cv/custom_ops/*.so keras_cv/custom_ops/
Neargye_magic_enum,github-actions,run: |
Neargye_magic_enum,github-actions,-release.pub.gpg|sudo apt-key add -
Neargye_magic_enum,github-actions,-apt stable jdk1.8"
Neargye_magic_enum,github-actions,-y
Neargye_magic_enum,github-actions,test //... --curses no
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=-gpu,-needs_credentials
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=ray_air python/ray/data/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_test_with_sharding.sh
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=tune,-gpu_only,-ray_air,-gpu python/ray/train/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_test_with_sharding.sh
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=-gpu_only,rllib python/ray/tune/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=py37,-client python/ray/tune/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/tests/xgboost/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/tests/horovod/...
ray-project_ray,buildkite,_export_options) python/ray/tests/ray_lightning/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/tests/ludwig/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=client --test_env=RAY_CLIENT_MODE=1 python/ray/util/dask/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=client python/ray/tune/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/tests/modin/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=-client python/ray/util/dask/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/data/...
ray-project_ray,buildkite,_export_options) --build_tests_only python/ray/workflow/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=-statsforecast,-ray_air,-gpu,-py37,-post_wheel_build doc/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=statsforecast,-gpu,-py37,-post_wheel_build doc/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=ray_air,-statsforecast,-needs_credentials,-gpu,-py37,-post_wheel_build doc/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=needs_credentials,-statsforecast,-gpu,-py37,-post_wheel_build doc/...
ray-project_ray,buildkite,_event_logs
ray-project_ray,buildkite,clean) || true;
ray-project_ray,buildkite,clean
ray-project_ray,buildkite,_event_logs
ray-project_ray,buildkite,clean) || true
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=-post_wheel_build --
ray-project_ray,buildkite,_export_options) --config=ci
ray-project_ray,buildkite,_export_options) --test_env=CI
ray-project_ray,buildkite,_export_options) --test_env=CI
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=gpu,gpu_only python/ray/tune/...
ray-project_ray,buildkite,_export_options) --build_tests_only --jobs 1
ray-project_ray,buildkite,_export_options) --test_tag_filters=gpu python/ray/serve/...
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=gpu,gpu_only,-ray_air python/ray/train/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=datasets_train doc/...
ray-project_ray,buildkite,_export_options) --build_tests_only --jobs 2
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=gpu python/ray/air/... python/ray/train/...
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=gpu,-statsforecast,-py37,-post_wheel_build doc/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options) --build_tests_only --test_tag_filters=soft_imports python/ray/tune/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_sharding/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options) python/ray/dashboard/...
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_sharding.py
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,_export_options)
ray-project_ray,buildkite,clean --expunge
ray-project_ray,buildkite,_export_options) --build_tests_only
ray-project_ray,buildkite,_export_options)  --build_tests_only --test_tag_filters=minimal python/ray/train/...
ray-project_ray,buildkite,_export_options) --test_tag_filters=compat_py36 
ray-project_ray,buildkite,_sharding.py --exclude_manual --index "\${BUILDKITE_PARALLEL_JOB}" --count "\${BUILDKITE_PARALLEL_JOB_COUNT}" --tag_filters=compat python/ray/tests/horovod/... python/ray/tests/lightgbm/... python/ray/tests/ml_py36_compat/... python/ray/tests/xgboost/... python/ray/tests/ray_lightning/... &&
ray-project_ray,buildkite,_sharding.py --exclude_manual --index "\${BUILDKITE_PARALLEL_JOB}" --count "\${BUILDKITE_PARALLEL_JOB_COUNT}" --tag_filters=-gpu,-needs_credentials python/ray/air/... &&
ray-project_ray,buildkite,_sharding.py --exclude_manual --index "\${BUILDKITE_PARALLEL_JOB}" --count "\${BUILDKITE_PARALLEL_JOB_COUNT}" --tag_filters=ray_air,-torch_1_11,-gpu_only,-gpu,-needs_credentials python/ray/train/... &&
ray-project_ray,buildkite,_sharding.py --exclude_manual --index "\${BUILDKITE_PARALLEL_JOB}" --count "\${BUILDKITE_PARALLEL_JOB_COUNT}" --tag_filters=ray_air python/ray/data/...;
ray-project_ray,buildkite,_export_options)
nelhage_rules_boost,circleci,-cache
nelhage_rules_boost,circleci,-5.2.0-installer-linux-x86_64.sh &&
nelhage_rules_boost,circleci,-5.2.0-installer-linux-x86_64.sh
nelhage_rules_boost,circleci,rc
nelhage_rules_boost,circleci,test --test_output=errors //...
nelhage_rules_boost,buildkite,---
tasks:
  ubuntu1804:
    working_directory: test
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  macos:
    working_directory: test
    build_targets:
    - "//..."
    test_targets:
    - "//..."
  windows:
    working_directory: test
    environment:
      BAZEL_VC: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\VC"
    build_targets:
    - "//..."
    test_targets:
    - "//..."

angular_universal,circleci,runs tests with browsers that will be
angular_universal,circleci,, we don't need a
angular_universal,circleci,-config:
angular_universal,circleci,config
angular_universal,circleci,picks it
angular_universal,circleci,.rc)
angular_universal,circleci,configuration.
angular_universal,circleci,rc
angular_universal,circleci,-config
angular_universal,circleci,test //...
angular_universal,circleci,_repository_cache
angular_universal,circleci,_disk_cache
angular_universal,circleci,-config
quantumlib_Stim,github-actions,:
quantumlib_Stim,github-actions,isk@v1
quantumlib_Stim,github-actions,build :all
gTile_gTile,github-actions,cache  # Optional
gTile_gTile,github-actions,"
gTile_gTile,github-actions,- name: "Bazel build"
gTile_gTile,github-actions,build //...
gTile_gTile,github-actions,test"
gTile_gTile,github-actions,test --test_output=errors //...
gTile_gTile,buildkite,-example
gTile_gTile,buildkite,: Build"
gTile_gTile,buildkite,build //...
gTile_gTile,buildkite,: Test"
gTile_gTile,buildkite,test //...
divergencetech_ethier,github-actions,tests once `ethier gen` is wrapped in a macro or rule.
divergencetech_ethier,github-actions,_test:
divergencetech_ethier,github-actions,-action (MIT)
divergencetech_ethier,github-actions,cache
divergencetech_ethier,github-actions,"
divergencetech_ethier,github-actions,-workspace-${{ hashFiles('WORKSPACE', 'repositories.bzl') }}
divergencetech_ethier,github-actions,isk
divergencetech_ethier,github-actions,isk-linux-amd64"
divergencetech_ethier,github-actions,"
divergencetech_ethier,github-actions,"
divergencetech_ethier,github-actions,files
divergencetech_ethier,github-actions," run //:gazelle_diff
divergencetech_ethier,github-actions," build //...
divergencetech_ethier,github-actions," test --test_output=errors --cache_test_results=no //...
VeriSilicon_TIM-VX,github-actions,_x86_vsim_unit_test
VeriSilicon_TIM-VX,github-actions,uses: abhinavsingh/setup-bazel@v3
VeriSilicon_TIM-VX,github-actions,build unit_test
VeriSilicon_TIM-VX,github-actions,-bin/
facebookresearch_CompilerGym,github-actions,-build BAZEL_BUILD_OPTS=--config=asan BUILD_TARGET=//compiler_gym/envs/llvm/service:compiler_gym-llvm-service
facebookresearch_CompilerGym,github-actions,-bin/compiler_gym/envs/llvm/service -cjvf compiler_gym-llvm-service.tar.bz2 compiler_gym-llvm-service
facebookresearch_CompilerGym,github-actions,build/buildtools/buildifier@latest
facebookresearch_CompilerGym,github-actions,cache
facebookresearch_CompilerGym,github-actions,_runner
facebookresearch_CompilerGym,github-actions,-${{ hashFiles('WORKSPACE') }}-${{ hashFiles('**/BUILD') }}
facebookresearch_CompilerGym,github-actions,-${{ hashFiles('WORKSPACE') }}-
facebookresearch_CompilerGym,github-actions,-
deepmind_lab,github-actions,builds and tests.
deepmind_lab,github-actions,rc build ${{matrix.cfg.config}} --copt=-Wno-sign-compare //...
deepmind_lab,github-actions,rc test  ${{matrix.cfg.config}} --copt=-Wno-sign-compare //...
deepmind_lab,github-actions,rc test  ${{matrix.cfg.config}} --copt=-Wno-sign-compare //python/tests:python_module_test --test_tag_filters=""
deepmind_lab,github-actions,rc test  ${{matrix.cfg.config}} --copt=-Wno-sign-compare //python/tests:dmenv_module_test --test_tag_filters=""
deepmind_lab,github-actions,rc run   ${{matrix.cfg.config}} --copt=-Wno-sign-compare --define headless=osmesa //:python_random_agent
pinterest_xchammer,github-actions,cache to speed up parallel jobs.
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,_pod_store
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,:
pinterest_xchammer,github-actions,runs-on: macOS-latest
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,run: make run_force_bazel
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,_cache
pinterest_xchammer,github-actions,-cache
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,consumeable artifact per commit but using github
pinterest_xchammer,github-actions,_cache_release
pinterest_xchammer,github-actions,-cache-release
pinterest_xchammer,github-actions,key: ${{ runner.os }}-build-${{ env.cache-name }}
pinterest_xchammer,github-actions,-bin/xchammer_dist_repo.zip
envoyproxy_envoy,github-actions,/setup_clang.sh bin/clang11
envoyproxy_envoy,github-actions,isk shutdown
envoyproxy_envoy,github-actions,isk build -c fastbuild --spawn_strategy=local --discard_analysis_cache --nouse_action_cache --config clang --config libc++ $BUILD_TARGETS
envoyproxy_envoy,github-actions,run //tools/dependency:check --action_env=TODAY_DATE -- -c release_issues --fix
envoyproxy_envoy,github-actions,run //tools/dependency:check --action_env=TODAY_DATE -- -c cves -w error
envoyproxy_envoy,github-actions,/setup_clang.sh bin/clang11
envoyproxy_envoy,github-actions,isk shutdown
envoyproxy_envoy,github-actions,isk build -c fastbuild --spawn_strategy=local --discard_analysis_cache --nouse_action_cache --config clang --config libc++ //source/common/http/...
envoyproxy_envoy,buildkite,---
tasks:
  rbe:
    name: "RBE"
    platform: ubuntu2004
    test_targets:
    - "//test/common/common/..."
    - "//test/integration/..."
    - "//test/exe/..."
    test_flags:
    - "--config=remote-clang-libc++"
    - "--config=remote-ci"
    - "--define=wasm=disabled"
    - "--jobs=75"
  coverage:
    name: "Coverage"
    platform: ubuntu2004
    shell_commands:
    - "sudo apt -y update && sudo apt -y install automake autotools-dev cmake libtool m4 ninja-build"
    - "wget https://apt.llvm.org/llvm.sh && sudo bash llvm.sh 10"
    - "bazel/setup_clang.sh /usr/lib/llvm-10"
    test_targets:
    - "//test/common/common/..."
    - "//test/integration/..."
    - "//test/exe/..."
    test_flags:
    - "--config=coverage"
    - "--config=clang"
# Re-enable after fixing https://github.com/envoyproxy/envoy/issues/16542
#   fuzz_coverage:
#     name: "Fuzz-Coverage"
#     platform: ubuntu1804
#     shell_commands:
#     - "bazel/setup_clang.sh /usr/lib/llvm-10"
#     test_targets:
#     - "//test/server:server_fuzz_test"
#     test_flags:
#     - "--config=fuzz-coverage"
#     - "--config=coverage"
#     - "--config=clang"

tweag_inline-java,circleci,to clean up old items (LRU style):
tweag_inline-java,circleci,.build/versions/master/remote-caching.html
tweag_inline-java,circleci,/issues/5139
tweag_inline-java,circleci,fetch @stackage//... --repository_cache=/Users/distiller/repo-cache --disk_cache=/Users/distiller/disk-cache"; $cmd || $cmd || $cmd'
tweag_inline-java,circleci,build //... --repository_cache=/Users/distiller/repo-cache --disk_cache=/Users/distiller/disk-cache'
tweag_inline-java,circleci,test //... --repository_cache=/Users/distiller/repo-cache --disk_cache=/Users/distiller/disk-cache'
tweag_inline-java,buildkite,-repository-cache
tweag_inline-java,buildkite,-disk-cache
tweag_inline-java,buildkite,test --test_output=all //... $BAZEL_ARGS"
envoyproxy_envoy-mobile,github-actions,rc
envoyproxy_envoy-mobile,github-actions,_coverage.sh //test/common/...
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/library/kotlin/io/envoyproxy/envoymobile/envoy-javadoc.jar
envoyproxy_envoy-mobile,github-actions,-bin/library/kotlin/io/envoyproxy/envoymobile/* .
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/library/swift/Envoy.xcframework.zip .
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/library/swift/ios_lib.symbolgraph
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/test/performance/test_binary_size
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/test/performance/test_binary_size
envoyproxy_envoy-mobile,github-actions,w run @DrString//:drstring check
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w build kotlin_format
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/library/swift/Envoy.xcframework.zip -d examples/swift/swiftpm/Packages || true
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/tsan.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/ios_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/ios_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w mobile-install --fat_apk_cpu=x86_64 --start_app //examples/java/hello_world:hello_envoy
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/examples/java/hello_world/hello_envoy.apk
envoyproxy_envoy-mobile,github-actions,w mobile-install --fat_apk_cpu=x86_64 --start_app //examples/kotlin/hello_world:hello_envoy_kt
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/examples/kotlin/hello_world/hello_envoy_kt.apk
envoyproxy_envoy-mobile,github-actions,w mobile-install --fat_apk_cpu=x86_64 --start_app //examples/kotlin/hello_world:hello_envoy_kt
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/test/kotlin/apps/baseline/hello_envoy_kt.apk
envoyproxy_envoy-mobile,github-actions,w mobile-install --fat_apk_cpu=x86_64 --start_app //examples/kotlin/hello_world:hello_envoy_kt
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,-bin/test/kotlin/apps/experimental/hello_envoy_kt.apk
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/python_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,w shutdown
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w run \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w run \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w run \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w run \
envoyproxy_envoy-mobile,github-actions,w build \
envoyproxy_envoy-mobile,github-actions,w run \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/asan.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test --test_output=all \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/android_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/android_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
envoyproxy_envoy-mobile,github-actions,rc$ -e ^envoy$ -e ^WORKSPACE$ -e ^.github/workflows/android_tests.yml$ ; then
envoyproxy_envoy-mobile,github-actions,w test \
baidu_BaikalDB,github-actions,Cache
baidu_BaikalDB,github-actions,cache.tgz
baidu_BaikalDB,github-actions,isk build //:all && bash ./ci/package.sh version=$tag os=${{ matrix.os }}
baidu_BaikalDB,github-actions,Cache
baidu_BaikalDB,github-actions,cache.tgz
baidu_BaikalDB,github-actions,isk build //:all && bash ./ci/package.sh version=nightly os=${{ matrix.os }}
baidu_BaikalDB,github-actions,Compile
baidu_BaikalDB,github-actions,/home/runner/.cache/bazelisk
baidu_BaikalDB,github-actions,version') }}
baidu_BaikalDB,github-actions,isk
baidu_BaikalDB,github-actions,isk-action@1.2
baidu_BaikalDB,github-actions,isk build //:all
bazel-ios_rules_ios,github-actions,isk test --local_test_jobs=1 -- //... -//tests/ios/...
bazel-ios_rules_ios,github-actions,rc file
bazel-ios_rules_ios,github-actions,isk test --local_test_jobs=1 --apple_platform_type=ios --deleted_packages='' -- //tests/ios/...
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,isk build --features apple.virtualize_frameworks --local_test_jobs=1 -- //... -//tests/ios/...
bazel-ios_rules_ios,github-actions,rc file
bazel-ios_rules_ios,github-actions,isk build --features apple.virtualize_frameworks \
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,isk build --ios_multi_cpus=sim_arm64  --features apple.virtualize_frameworks -- //... -//tests/ios/...
bazel-ios_rules_ios,github-actions,isk build --ios_multi_cpus=sim_arm64 --features apple.virtualize_frameworks \
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,run
bazel-ios_rules_ios,github-actions,run buildifier -- -lint=fix && git diff --exit-code
bazel-ios_rules_ios,github-actions,isk run docs && git diff --exit-code docs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,isk test tests/ios/lldb/app:objc_app_po_test  tests/ios/lldb/app:objc_app_variable_test --config lldb_ios_test
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,-testlogs
bazel-ios_rules_ios,github-actions,isk build -s tests/ios/app/App --apple_platform_type=ios --ios_minimum_os=10.2  --ios_multi_cpus=i386,x86_64
bazelbuild_rules_k8s,buildkite,---
buildifier:
  version: 4.0.1
  # Check for issues with the format of our bazel config files.
  # All warnings from https://github.com/bazelbuild/buildtools/blob/master/WARNINGS.md
  # are enabled except:
  # rule-impl-return, uninitialized, return-value, rule-impl-return
  # TODO (suvanjan): Re-enable once issues are fixed.
  warnings: "attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,confusing-name,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,function-docstring,git-repository,http-archive,integer-division,load,load-on-top,module-docstring,name-conventions,native-build,native-package,no-effect,out-of-order-load,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,same-origin-load,string-iteration,unreachable,unsorted-dict-items,unused-variable"
platforms:
  ubuntu2004: # TODO(fejta): ubuntu2204
    build_targets:
    - "..."
    test_targets:
    - "..."
  macos:
    build_targets:
    - "..."
    build_flags:
    - "--verbose_failures"
    test_targets:
    - "..."
    test_flags:
    - "--verbose_failures"
  min_supported_version:
    name: "Minimum Supported Version"
    bazel: "5.2.0"
    platform: ubuntu2004
    build_targets:
    - "--"
    - "..."
    test_targets:
    - "..."

googleapis_google-cloud-cpp,buildkite,---
# ~~~
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ~~~
tasks:
  ubuntu1804:
    platform: ubuntu1804
    build_targets:
      - "//google/cloud/..."
    test_flags:
      - "--test_tag_filters=-integration-test"
    test_targets:
      - "//google/cloud/..."

opencivicdata_ocd-division-ids,github-actions,test :all --test_output=errors
tensorflow_probability,github-actions,-testlogs
tweag_sparkle,circleci,to clean up old items (LRU style):
tweag_sparkle,circleci,.build/versions/master/remote-caching.html
tweag_sparkle,circleci,/issues/5139
tweag_sparkle,circleci,fetch @stackage//... $BAZEL_ARGS'; \$cmd || \$cmd || \$cmd"
tweag_sparkle,circleci,build //apps/hello:sparkle-example-hello_deploy.jar $BAZEL_ARGS"
tweag_sparkle,circleci,build //apps/rdd-ops:sparkle-example-rddops_deploy.jar $BAZEL_ARGS"
tweag_sparkle,circleci,build //apps/osthreads:sparkle-example-osthreads_deploy.jar $BAZEL_ARGS"
tweag_sparkle,circleci,-bin/apps/hello/sparkle-example-hello_deploy.jar
tweag_sparkle,buildkite,"
tweag_sparkle,buildkite,rc.local
tweag_sparkle,buildkite,build //apps/hello:sparkle-example-hello_deploy.jar'
tweag_sparkle,buildkite,build //apps/rdd-ops:sparkle-example-rddops_deploy.jar'
tweag_sparkle,buildkite,build //apps/dataframe:sparkle-example-dataframe_deploy.jar'
tweag_sparkle,buildkite,build //apps/osthreads:sparkle-example-osthreads_deploy.jar'
tweag_sparkle,buildkite,build //apps/lda:sparkle-example-lda_deploy.jar'
tweag_sparkle,buildkite,build //apps/argv:sparkle-example-argv_deploy.jar'
tweag_sparkle,buildkite,build //apps/bench:sparkle-benchmarks_deploy.jar"
tweag_sparkle,buildkite,build //apps/hello-safe:hello-safe_deploy.jar'
tweag_sparkle,buildkite,build //apps/dataframe-safe:dataframe-safe_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/hello/sparkle-example-hello_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/rdd-ops/sparkle-example-rddops_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/dataframe/sparkle-example-dataframe_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/argv/sparkle-example-argv_deploy.jar a b +RTS -s -RTS c'
tweag_sparkle,buildkite,-bin/apps/lda/sparkle-example-lda_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/lda/sparkle-example-lda_deploy.jar"
tweag_sparkle,buildkite,-bin/apps/hello-safe/hello-safe_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/dataframe-safe/dataframe-safe_deploy.jar'
tweag_sparkle,buildkite,-bin/apps/osthreads/sparkle-example-osthreads_deploy.jar | tee out.txt || grep "Job |           pool | start time (s) | end time (s)" out.txt
stratum_stratum,circleci,rc) to speed up job execution time.
stratum_stratum,circleci,remote cache (e.g. local HTTP proxy cache backed by S3)
stratum_stratum,circleci,_cache
stratum_stratum,circleci,-cache-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
stratum_stratum,circleci,-cache-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}
stratum_stratum,circleci,-cache-{{ .Environment.CIRCLE_JOB }}-main
stratum_stratum,circleci,_cache
stratum_stratum,circleci,process was killed because it took too long or OOM.
stratum_stratum,circleci,server being terminated abruptly.
stratum_stratum,circleci,-cache-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ .Revision }}
stratum_stratum,circleci,-cache
stratum_stratum,circleci,-disk-cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,disk cache of files that have not been modified in 30 days
stratum_stratum,circleci,-disk-cache -mtime +30 -exec rm -v {} \;
stratum_stratum,circleci,profiling info and generate JSON report to upload as artifact.
stratum_stratum,circleci,_profile
stratum_stratum,circleci,profile
stratum_stratum,circleci,.profile.json
stratum_stratum,circleci,_profile
stratum_stratum,circleci,.profile.json
stratum_stratum,circleci,rc file convenient for CI jobs.
stratum_stratum,circleci,rc
stratum_stratum,circleci,rc
stratum_stratum,circleci,rc
stratum_stratum,circleci,-cache/output-root/install/ec7bc80570c57e35507fafa6aadd57b1
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,query '//...'
stratum_stratum,circleci,build --config=ci-large
stratum_stratum,circleci,_profile
stratum_stratum,circleci,_profile
stratum_stratum,circleci,test --config=ci-large
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=ci-small
stratum_stratum,circleci,_profile
stratum_stratum,circleci,_profile
stratum_stratum,circleci,test --config=ci-small
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,coverage --config=ci-large
stratum_stratum,circleci,_profile
stratum_stratum,circleci,_profile
stratum_stratum,circleci,-out/_coverage/_coverage_report.dat
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/hal/bin/bmv2:stratum_bmv2_deb
stratum_stratum,circleci,-bin/stratum/hal/bin/bmv2/stratum_bmv2_deb.deb $DOCKER_SCOPE
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/p4c_backends/fpm:p4c_fpm_deb
stratum_stratum,circleci,-bin/stratum/p4c_backends/fpm/p4c_fpm_deb.deb $DOCKER_SCOPE
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/hal/bin/bcm/standalone:stratum_bcm_sdklt_deb
stratum_stratum,circleci,-bin/stratum/hal/bin/bcm/standalone/stratum_bcm_sdklt_deb.deb $DOCKER_SCOPE/stratum_bcm_deb.deb
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/hal/bin/bcm/standalone:stratum_bcm_opennsa_deb
stratum_stratum,circleci,-bin/stratum/hal/bin/bcm/standalone/stratum_bcm_opennsa_deb.deb $DOCKER_SCOPE/stratum_bcm_deb.deb
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/hal/bin/barefoot:stratum_bfrt_deb
stratum_stratum,circleci,-bin/stratum/hal/bin/barefoot/stratum_bfrt_deb.deb $DOCKER_SCOPE/stratum_bfrt_deb.deb
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,rc
stratum_stratum,circleci,build --config=release //stratum/tools:stratum_tools_deb
stratum_stratum,circleci,-bin/stratum/tools/stratum_tools_deb.deb $DOCKER_SCOPE
stratum_stratum,circleci,_cache
stratum_stratum,circleci,_cache
stratum_stratum,circleci,-format.sh
tensorflow_addons,github-actions,:
tensorflow_addons,github-actions,runs-on: ubuntu-18.04
tensorflow_addons,github-actions,isk.sh ./
tensorflow_addons,github-actions,test -k --test_timeout 300,450,1200,3600 --test_output=errors //tensorflow_addons/...
tensorflow_addons,github-actions,version:
tensorflow_addons,github-actions,/issues/14232#issuecomment-1011247429
tensorflow_addons,github-actions,# Ubuntu bazel is run inside of the docker image
tensorflow_addons,github-actions,isk.sh ./
tensorflow_addons,github-actions,]
tensorflow_addons,github-actions,]
tensorflow_addons,github-actions,-format:
tensorflow_addons,github-actions,code format
tensorflow_addons,github-actions,-format
bazelbuild_rules_apple,buildkite,---
x_defaults:
  # YAML has a feature for "repeated nodes", BazelCI is fine with extra nodes
  # it doesn't know about; so that is used to avoid repeating common subparts.
  common: &common
    platform: macos
    build_targets:
    - "tools/..."
    - "test/..."
    test_targets:
    - "tools/..."
    - "test/..."
    - "examples/..."

# NOTE: To avoid listing the same things for build_flags/test_flags for each
# of these tasks, they are listed in the .bazelrc instead.
tasks:
  macos_last_green:
    name: "Last Green Bazel"
    bazel: last_green
    <<: *common

  macos_last_green_head_deps:
    name: "Last Green Bazel with Head Deps"
    bazel: last_green
    shell_commands:
    # Update the WORKSPACE to use head versions of some deps to ensure nothing
    # has landed on them breaking this project.
    - .bazelci/update_workspace_to_deps_heads.sh
    <<: *common

  doc_tests:
    name: "Doc tests"
    bazel: last_green
    platform: ubuntu2004
    test_targets:
    - "doc/..."

buildifier: latest

GoogleContainerTools_distroless,github-actions,isk@v2
GoogleContainerTools_distroless,github-actions,fetch --loading_phase_threads=1 //... && break || sleep 20; done
GoogleContainerTools_distroless,github-actions,build --curses=no //...
GoogleContainerTools_distroless,github-actions,test --curses=no --test_output=errors //...
GoogleContainerTools_distroless,github-actions,query 'attr("tags", "'amd64'", "//...")')
GoogleContainerTools_distroless,github-actions,build --curses=no ${targets}
GoogleContainerTools_distroless,github-actions,test --curses=no --test_output=errors ${targets}
GoogleContainerTools_distroless,github-actions,build/buildtools/buildifier@3.2.0
snuspl_nimble,circleci,_build:
snuspl_nimble,circleci,Build
snuspl_nimble,circleci,to avoid collisions
snuspl_nimble,circleci,-${CIRCLE_SHA1}
snuspl_nimble,circleci,_test:
snuspl_nimble,circleci,-${CIRCLE_SHA1}
snuspl_nimble,circleci,-testlogs ./ || echo 'No test reports found!'
snuspl_nimble,circleci,-testlogs
snuspl_nimble,circleci,_build:
snuspl_nimble,circleci,Build
snuspl_nimble,circleci,to avoid collisions
snuspl_nimble,circleci,-${CIRCLE_SHA1}
snuspl_nimble,circleci,_test:
snuspl_nimble,circleci,-${CIRCLE_SHA1}
snuspl_nimble,circleci,-testlogs ./ || echo 'No test reports found!'
snuspl_nimble,circleci,-testlogs
snuspl_nimble,circleci,_build:
snuspl_nimble,circleci,-build
snuspl_nimble,circleci,_build
snuspl_nimble,circleci,_test:
snuspl_nimble,circleci,-test
snuspl_nimble,circleci,_test
snuspl_nimble,circleci,_build
angular_angular-cli,circleci,_rbe:
angular_angular-cli,circleci,-remote-exec:
angular_angular-cli,circleci,rc.user
angular_angular-cli,circleci,-e2e:
angular_angular-cli,circleci,build //tests/legacy-cli/...
angular_angular-cli,circleci,_rbe
angular_angular-cli,circleci,rc
angular_angular-cli,circleci,test --test_tag_filters=-node16,-node<< parameters.nodeversion >>-broken //packages/...
angular_angular-cli,circleci,test --test_tag_filters=node<< parameters.nodeversion >>,-node<< parameters.nodeversion >>-broken //packages/...
angular_angular-cli,circleci,jobs
angular_angular-cli,circleci,jobs.
angular_angular-cli,circleci,to ensure the non-runtime typescript
angular_angular-cli,circleci,-e2e:
SeleniumHQ_selenium,github-actions,-target-prefix: '//java'
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-small-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-medium-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-lint-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-${{ matrix.browser }}-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-${{ matrix.browser }}-server-tests-
SeleniumHQ_selenium,github-actions,-${{ matrix.browser }}-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-firefox-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-firefox-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-target-prefix: '//py'
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-python-unit-tests-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-chrome-tests-
SeleniumHQ_selenium,github-actions,-python-unit-tests-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-firefox-tests-
SeleniumHQ_selenium,github-actions,-python-unit-tests-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-firefox-tests-
SeleniumHQ_selenium,github-actions,-python-unit-tests-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,-target-prefix: '//rb'
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-build-gem-${{ matrix.target }}-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-${{ matrix.target }}-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-${{ matrix.target }}-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-${{ matrix.target }}-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-lint-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-ruby-unit-test-${{ matrix.ruby }}-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,-target-prefix: '//javascript'
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-node-tests-
SeleniumHQ_selenium,github-actions,-build-
SeleniumHQ_selenium,github-actions,-test
SeleniumHQ_selenium,github-actions,artifacts
SeleniumHQ_selenium,github-actions,-disk
SeleniumHQ_selenium,github-actions,-repo
SeleniumHQ_selenium,github-actions,') }}
SeleniumHQ_selenium,github-actions,-atom-firefox-tests-
SeleniumHQ_selenium,github-actions,with:
SeleniumHQ_selenium,github-actions,test javascript/grid-ui:test for these tests
SeleniumHQ_selenium,github-actions,targets
SeleniumHQ_selenium,github-actions,-target-prefix:
SeleniumHQ_selenium,github-actions,target prefix used to determine if the code path will be used
SeleniumHQ_selenium,github-actions,-target-prefix.outputs.run-workflow }}
SeleniumHQ_selenium,github-actions,rc
SeleniumHQ_selenium,github-actions,rc.local .
SeleniumHQ_selenium,github-actions,target prefix
SeleniumHQ_selenium,github-actions,-target-prefix
SeleniumHQ_selenium,github-actions,-target-prefix }}
bazelbuild_bazel-watcher,github-actions,_linux_amd64
bazelbuild_bazel-watcher,github-actions,_rules_go//go/toolchain:linux_amd64
bazelbuild_bazel-watcher,github-actions,_windows_amd64.exe
bazelbuild_bazel-watcher,github-actions,_rules_go//go/toolchain:windows_amd64
bazelbuild_bazel-watcher,github-actions,_darwin_amd64
bazelbuild_bazel-watcher,github-actions,_rules_go//go/toolchain:darwin_amd64_cgo
bazelbuild_bazel-watcher,github-actions,_darwin_arm64
bazelbuild_bazel-watcher,github-actions,_rules_go//go/toolchain:darwin_arm64_cgo
bazelbuild_bazel-watcher,github-actions,isk
bazelbuild_bazel-watcher,github-actions,isk@latest
bazelbuild_bazel-watcher,github-actions,run: bazel build //cmd/ibazel:ibazel --config release ${{ matrix.build_flags }} ${{ matrix.cpu_flag }}
bazelbuild_bazel-watcher,github-actions,${{ matrix.ext }} ${{ matrix.artifact }}
bazelbuild_bazel-watcher,github-actions,isk
bazelbuild_bazel-watcher,github-actions,isk@latest
bazelbuild_bazel-watcher,github-actions,binaries
bazelbuild_bazel-watcher,github-actions,mv darwin_arm64/ibazel_darwin_arm64 darwin_arm64/ibazel
bazelbuild_bazel-watcher,github-actions,mv windows_amd64/ibazel_windows_amd64.exe windows_amd64/ibazel.exe
bazelbuild_bazel-watcher,github-actions,*
bazelbuild_bazel-watcher,github-actions,run --config="release" "//release/npm" -- "${PWD}/CONTRIBUTORS" > "npm-staging/package.json"
bazelbuild_bazel-watcher,buildkite,---
tasks:
  ubuntu1804:
    build_flags:
    - "--build_tag_filters=-nolinux"
    build_targets:
    - "..."
    test_flags:
    - "--@io_bazel_rules_go//go/config:race"
    - "--test_tag_filters=-nolinux"
    test_targets:
    - "..."
  ubuntu1604:
    build_flags:
    - "--build_tag_filters=-nolinux"
    build_targets:
    - "..."
    test_flags:
    - "--@io_bazel_rules_go//go/config:race"
    - "--test_tag_filters=-nolinux"
    test_targets:
    - "..."
  macos:
    build_flags:
    - "--build_tag_filters=-nomacos"
    build_targets:
    - "..."
    test_flags:
    - "--@io_bazel_rules_go//go/config:race"
    - "--test_tag_filters=-nomacos"
    test_targets:
    - "..."
  macos_legacy_watcher:
    platform: macos
    build_flags:
    - "--build_tag_filters=-nomacos"
    build_targets:
    - "..."
    test_flags:
    - "--@io_bazel_rules_go//go/config:race"
    - "--test_tag_filters=-nomacos"
    - "--test_env=IBAZEL_USE_LEGACY_WATCHER=1"
    test_targets:
    - "..."    
  windows:
    build_flags:
    - "--build_tag_filters=-nowindows"
    build_targets:
    - "..."
    test_flags:
    - "--test_tag_filters=-nowindows"
    - "--enable_runfiles"
    # On Windows CI, bazel (bazelisk) needs %LocalAppData% to find the cache directory.
    # We invoke bazel in tests, so the tests need this, too.
    - "--test_env=LOCALAPPDATA"
    test_targets:
    - "..."

project-oak_oak,github-actions,-tests
google_nucleus,github-actions,test -c opt $BAZEL_FLAGS nucleus/...
